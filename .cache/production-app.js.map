{"version":3,"sources":["../../src/cache-dir/production-app.js"],"names":["window","___emitter","addPagesArray","addProdRequires","asyncRequires","___loader","matchPath","navigateTo","location","pathname","eventHandler","e","page","path","getPage","off","clearTimeout","timeoutId","___history","push","setTimeout","emit","getResourcesForPathname","on","___navigateTo","history","attachToHistory","listen","action","shouldUpdateScroll","prevRouterProps","results","length","oldPathname","AltRouter","DefaultRouter","children","loadLayout","layouts","err","executeChunk","module","cb","props","Root","layout","render","routeProps","layoutProps","NewRoot","document","getElementById"],"mappings":"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","file":"production-app.js","sourcesContent":["import apiRunner from \"./api-runner-browser\"\n\nimport React, { createElement } from \"react\"\nimport ReactDOM from \"react-dom\"\nimport {\n  BrowserRouter as Router,\n  Route,\n  withRouter,\n  matchPath,\n} from \"react-router-dom\"\nimport { ScrollContext } from \"react-router-scroll\"\nimport createHistory from \"history/createBrowserHistory\"\n// import invariant from \"invariant\"\nimport emitter from \"./emitter\"\nwindow.___emitter = emitter\n// emitter.on(`*`, (type, e) => console.log(`emitter`, type, e))\n\nimport pages from \"./pages.json\"\nimport ComponentRenderer from \"./component-renderer\"\nimport asyncRequires from \"./async-requires\"\nimport loader from \"./loader\"\nloader.addPagesArray(pages)\nloader.addProdRequires(asyncRequires)\nwindow.asyncRequires = asyncRequires\n\nwindow.___loader = loader\n\nwindow.matchPath = matchPath\n\n// Let the site/plugins run code very early.\napiRunner(`onClientEntry`)\n\nconst navigateTo = pathname => {\n  // If we're already at this path, do nothing.\n  if (window.location.pathname === pathname) {\n    return\n  }\n\n  // Listen to loading events. If page resources load before\n  // a second, navigate immediately.\n  function eventHandler(e) {\n    if (e.page.path === loader.getPage(pathname).path) {\n      emitter.off(`onPostLoadPageResources`, eventHandler)\n      clearTimeout(timeoutId)\n      window.___history.push(pathname)\n    }\n  }\n\n  // Start a timer to wait for a second before transitioning and showing a\n  // loader in case resources aren't around yet.\n  const timeoutId = setTimeout(() => {\n    emitter.off(`onPostLoadPageResources`, eventHandler)\n    emitter.emit(`onDelayedLoadPageResources`, { pathname })\n    window.___history.push(pathname)\n  }, 1000)\n\n  if (loader.getResourcesForPathname(pathname)) {\n    // The resources are already loaded so off we go.\n    clearTimeout(timeoutId)\n    window.___history.push(pathname)\n  } else {\n    // They're not loaded yet so let's add a listener for when\n    // they finish loading.\n    emitter.on(`onPostLoadPageResources`, eventHandler)\n  }\n}\n\n// window.___loadScriptsForPath = loadScriptsForPath\nwindow.___navigateTo = navigateTo\n\nconst history = createHistory()\n\nfunction attachToHistory(history) {\n  window.___history = history\n\n  history.listen((location, action) => {\n    apiRunner(`onRouteUpdate`, { location, action })\n  })\n}\n\nfunction shouldUpdateScroll(prevRouterProps, { location: { pathname } }) {\n  const results = apiRunner(`shouldUpdateScroll`, {\n    prevRouterProps,\n    pathname,\n  })\n  if (results.length > 0) {\n    return results[0]\n  }\n\n  if (prevRouterProps) {\n    const { location: { pathname: oldPathname } } = prevRouterProps\n    if (oldPathname === pathname) {\n      return false\n    }\n  }\n  return true\n}\n\nconst AltRouter = apiRunner(`replaceRouterComponent`, { history })[0]\nconst DefaultRouter = ({ children }) =>\n  <Router history={history}>{children}</Router>\n\nconst loadLayout = cb => {\n  if (asyncRequires.layouts[`index`]) {\n    asyncRequires.layouts[`index`]((err, executeChunk) => {\n      const module = executeChunk()\n      cb(module)\n    })\n  } else {\n    cb(props => <div>{props.children()}</div>)\n  }\n}\n\nloadLayout(layout => {\n  const Root = () =>\n    createElement(\n      AltRouter ? AltRouter : DefaultRouter,\n      null,\n      createElement(\n        ScrollContext,\n        { shouldUpdateScroll },\n        createElement(withRouter(layout), {\n          children: layoutProps =>\n            createElement(Route, {\n              render: routeProps => {\n                attachToHistory(routeProps.history)\n                const props = layoutProps ? layoutProps : routeProps\n                if (loader.getPage(props.location.pathname)) {\n                  return createElement(ComponentRenderer, { ...props })\n                } else {\n                  // TODO check (somehow) if we loaded the page\n                  // from a service worker (app shell) as if this\n                  // is the case and we get a 404 we want to kill\n                  // the sw and reload as probably the user is\n                  // trying to visit a page that was created after\n                  // the first time they visited.\n                  return createElement(ComponentRenderer, {\n                    location: { pathname: `/404.html` },\n                  })\n                }\n              },\n            }),\n        })\n      )\n    )\n\n  const NewRoot = apiRunner(`wrapRootComponent`, { Root }, Root)[0]\n  ReactDOM.render(\n    <NewRoot />,\n    typeof window !== `undefined`\n      ? document.getElementById(`___gatsby`)\n      : void 0\n  )\n})\n"]}