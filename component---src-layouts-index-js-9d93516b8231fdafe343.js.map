{"version":3,"sources":["webpack:///component---src-layouts-index-js-9d93516b8231fdafe343.js","webpack:///./.cache/json/layout-index.json?2af0","webpack:///./.cache/layouts/index.js","webpack:///./~/element-resize-event/index.js","webpack:///./~/eve/eve.js","webpack:///./~/performance-now/lib/performance-now.js","webpack:///./~/raf/index.js","webpack:///./~/react-burger-menu/lib/BurgerIcon.js","webpack:///./~/react-burger-menu/lib/BurgerMenu.js","webpack:///./~/react-burger-menu/lib/CrossIcon.js","webpack:///./~/react-burger-menu/lib/baseStyles.js","webpack:///./~/react-burger-menu/lib/menuFactory.js","webpack:///./~/react-burger-menu/lib/menus/bubble.js","webpack:///./~/react-burger-menu/lib/menus/elastic.js","webpack:///./~/react-burger-menu/lib/menus/fallDown.js","webpack:///./~/react-burger-menu/lib/menus/push.js","webpack:///./~/react-burger-menu/lib/menus/pushRotate.js","webpack:///./~/react-burger-menu/lib/menus/scaleDown.js","webpack:///./~/react-burger-menu/lib/menus/scaleRotate.js","webpack:///./~/react-burger-menu/lib/menus/slide.js","webpack:///./~/react-burger-menu/lib/menus/stack.js","webpack:///./~/react-burger-menu/lib/snapsvgImporter.js","webpack:///./~/react-component-width-mixin/index.js","webpack:///./~/react-icon-base/lib/index.js","webpack:///./~/react-icons/lib/fa/arrow-left.js","webpack:///./~/react-page-width/dist/index.js","webpack:///./~/react-page-width/dist/resizeListener.js","webpack:///./~/react-responsive-grid/dist/components/Breakpoint.js","webpack:///./~/react-responsive-grid/dist/components/Container.js","webpack:///./~/react-responsive-grid/dist/components/Grid.js","webpack:///./~/react-responsive-grid/dist/components/Span.js","webpack:///./~/react-responsive-grid/dist/index.js","webpack:///./~/react-responsive-grid/dist/utils/SpanCalculate.js","webpack:///./~/snapsvg-cjs/dist/snap.svg-cjs.js","webpack:///./src/layouts/index.js"],"names":["webpackJsonp","./node_modules/json-loader/index.js!./.cache/json/layout-index.json","module","exports","layoutContext","./node_modules/babel-loader/lib/index.js?{\"presets\":[\"/home/austin/newFusc/FuSC/node_modules/babel-preset-react/lib/index.js\",\"/home/austin/newFusc/FuSC/node_modules/babel-preset-es2015/lib/index.js\",\"/home/austin/newFusc/FuSC/node_modules/babel-preset-stage-1/lib/index.js\",\"/home/austin/newFusc/FuSC/node_modules/babel-preset-env/lib/index.js\",\"/home/austin/newFusc/FuSC/node_modules/babel-preset-stage-0/lib/index.js\",\"/home/austin/newFusc/FuSC/node_modules/babel-preset-react/lib/index.js\"],\"plugins\":[\"/home/austin/newFusc/FuSC/node_modules/gatsby/dist/utils/babel-plugin-extract-graphql.js\",\"/home/austin/newFusc/FuSC/node_modules/babel-plugin-add-module-exports/lib/index.js\",\"/home/austin/newFusc/FuSC/node_modules/babel-plugin-add-module-exports/lib/index.js\",\"/home/austin/newFusc/FuSC/node_modules/babel-plugin-transform-object-assign/lib/index.js\"],\"cacheDirectory\":true}!./.cache/layouts/index.js","__webpack_require__","_interopRequireDefault","obj","__esModule","default","Object","defineProperty","value","_extends","assign","target","i","arguments","length","source","key","prototype","hasOwnProperty","call","_react","_react2","_index","_index2","_layoutIndex","_layoutIndex2","props","createElement","./node_modules/element-resize-event/index.js","resizeListener","e","win","srcElement","__resizeRAF__","cancelFrame","requestFrame","trigger","__resizeTrigger__","__resizeListeners__","forEach","fn","window","this","raf","requestAnimationFrame","mozRequestAnimationFrame","webkitRequestAnimationFrame","func","setTimeout","cancel","cancelAnimationFrame","mozCancelAnimationFrame","webkitCancelAnimationFrame","clearTimeout","id","element","objectLoad","contentDocument","defaultView","__resizeElement__","addEventListener","isIE","document","attachEvent","navigator","userAgent","match","getComputedStyle","position","style","setAttribute","onload","type","appendChild","data","push","bind","unbind","splice","indexOf","detachEvent","removeEventListener","removeChild","./node_modules/eve/eve.js","__WEBPACK_AMD_DEFINE_ARRAY__","__WEBPACK_AMD_DEFINE_RESULT__","glob","current_event","stop","version","has","separator","comaseparator","wildcard","numsort","a","b","events","n","firstDefined","ii","lastDefined","eve","name","scope","String","l","oldstop","args","Array","slice","listeners","z","indexed","queue","out","ce","zIndex","sort","apply","_events","item","items","k","j","jj","nes","names","split","es","concat","f","on","exist","event","attrs","nt","subname","RegExp","test","nts","off","cur","funcs","once","f2","toString","undefined","./node_modules/performance-now/lib/performance-now.js","process","getNanoSeconds","hrtime","loadTime","performance","now","hr","Date","getTime","./node_modules/raf/index.js","global","vendors","suffix","caf","isNative","last","frameDuration","callback","_now","next","Math","max","cp","cancelled","round","handle","./node_modules/react-burger-menu/lib/BurgerIcon.js","_classCallCheck","instance","Constructor","TypeError","_inherits","subClass","superClass","create","constructor","enumerable","writable","configurable","setPrototypeOf","__proto__","_createClass","defineProperties","descriptor","protoProps","staticProps","_get","_x","_x2","_x3","_again","object","property","receiver","Function","desc","getOwnPropertyDescriptor","getter","get","parent","getPrototypeOf","_propTypes","_propTypes2","BurgerIcon","_Component","state","hover","index","height","left","right","top","opacity","_this","icon","buttonStyle","width","margin","padding","border","fontSize","customIcon","extraProps","className","styles","bmIcon","cloneElement","map","bar","barClassName","getLineStyle","bmBurgerBars","bmBurgerButton","onClick","onMouseOver","setState","onMouseOut","Component","propTypes","string","defaultProps","./node_modules/react-burger-menu/lib/BurgerMenu.js","slide","stack","elastic","bubble","pushRotate","scaleDown","scaleRotate","fallDown","./node_modules/react-burger-menu/lib/CrossIcon.js","CrossIcon","transform","buttonWrapperStyle","textIndent","background","outline","bmCross","crossClassName","getCrossStyle","bmCrossButton","./node_modules/react-burger-menu/lib/baseStyles.js","overlay","isOpen","MozTransform","MsTransform","OTransform","WebkitTransform","transition","menuWrap","menu","boxSizing","overflow","itemList","display","./node_modules/react-burger-menu/lib/menuFactory.js","_x4","_reactDom","_reactDom2","_baseStyles","_baseStyles2","_BurgerIcon","_BurgerIcon2","_CrossIcon","_CrossIcon2","Menu","newState","applyWrapperStyles","onStateChange","timeoutId","set","bodyClassName","body","querySelector","classList","pageWrap","pageWrapId","handleExternalWrapper","outerContainer","outerContainerId","wrapperStyles","html","wrapper","getElementById","console","error","builtStyles","getStyle","prop","el","inline","propName","replace","charAt","toUpperCase","output","keyCode","toggleMenu","Error","onkeydown","listenForClose","_this2","svg","morphShape","findDOMNode","path","lib","select","animate","attr","pathInitial","nextProps","_this3","noOverlay","overlayClassName","getStyles","morphShapeClassName","viewBox","preserveAspectRatio","d","menuClassName","itemListClassName","Children","children","customCrossIcon","crossButtonClassName","customBurgerIcon","burgerButtonClassName","burgerBarClassName","oneOfType","oneOf","bool","isRequired","number","./node_modules/react-burger-menu/lib/menus/bubble.js","_snapsvgImporter","_snapsvgImporter2","_menuFactory","_menuFactory2","pathOpen","pos","steps","stepsTotal","mina","nextStep","easein","nthChild","closeButton","./node_modules/react-burger-menu/lib/menus/elastic.js","easeinout","whiteSpace","./node_modules/react-burger-menu/lib/menus/fallDown.js","perspective","perspectiveOrigin","./node_modules/react-burger-menu/lib/menus/push.js","./node_modules/react-burger-menu/lib/menus/pushRotate.js","transformOrigin","transformStyle","./node_modules/react-burger-menu/lib/menus/scaleDown.js","./node_modules/react-burger-menu/lib/menus/scaleRotate.js","./node_modules/react-burger-menu/lib/menus/slide.js","./node_modules/react-burger-menu/lib/menus/stack.js","./node_modules/react-burger-menu/lib/snapsvgImporter.js","Snap","./node_modules/react-component-width-mixin/index.js","ReactDOM","elementResizeEvent","getInitialState","initialComponentWidth","componentWidth","componentDidMount","getBoundingClientRect","onResize","componentDidUpdate","getElementsByClassName","./node_modules/react-icon-base/lib/index.js","_objectWithoutProperties","keys","IconBase","_ref","_ref2","color","size","_ref2$reactIconBase","reactIconBase","computedSize","fill","verticalAlign","contextTypes","shape","./node_modules/react-icons/lib/fa/arrow-left.js","_reactIconBase","_reactIconBase2","FaArrowLeft","./node_modules/react-page-width/dist/index.js","initialPageWidth","pageWidth","componentWillUnmount","./node_modules/react-page-width/dist/resizeListener.js","currentWidth","subscribers","ticking","update","innerWidth","len","subscriber","subscribeFn","./node_modules/react-responsive-grid/dist/components/Breakpoint.js","ComponentWidthComponent","PageWidthComponent","PageWidthMixin","React","componentWidthMixin","objectAssign","createClass","displayName","mixins","minWidth","PropTypes","maxWidth","getDefaultProps","renderChildren","child","ref","context","render","widthMethod","./node_modules/react-responsive-grid/dist/components/Container.js","defaultStyles","marginLeft","marginRight","clear","./node_modules/react-responsive-grid/dist/components/Grid.js","columns","gutterRatio","ref1","./node_modules/react-responsive-grid/dist/components/Span.js","spanCalculate","at","pre","post","squish","break","first","contextColumns","./node_modules/react-responsive-grid/dist/index.js","Container","Grid","Breakpoint","Span","./node_modules/react-responsive-grid/dist/utils/SpanCalculate.js","options","calcSpacing","calcSpanWidth","defaults","float","gutterWidth","ops","numColumns","./node_modules/snapsvg-cjs/dist/snap.svg-cjs.js","animations","requestAnimFrame","oRequestAnimationFrame","msRequestAnimationFrame","isArray","idgen","idprefix","ID","timer","sta","val","s","ds","dur","B","speed","spd","duration","stopit","pause","pdif","resume","res","start","end","easing","frame","A","anim","linear","status","time","getById","easeout","pow","q","Q","sqrt","x","X","abs","y","Y","t","backin","backout","sin","PI","bounce","p","root","w","h","nodeType","wrap","is","Element","doc","Paper","$","createTextNode","text","createComment","substring","getAttributeNS","xlink","xmlns","getAttribute","nodeValue","Str","setAttributeNS","removeAttribute","createElementNS","o","toLowerCase","isFinite","objectToString","clone","repush","array","cacher","postprocessor","newf","arg","join","cache","count","shift","angle","x1","y1","x2","y2","x3","y3","math","atan2","rad","deg","svgTransform2string","tstr","all","params","tan","transform2matrix","bbox","tdata","parseTransformString","m","Matrix","bb","tlen","command","absolute","inver","invert","translate","rotate","scale","add","getSomeDefs","node","ownerSVGElement","parentNode","pdefs","defs","make","getSomeSVG","unit2px","getW","E","mgr","getBBox","getH","nam","class","add2group","list","childNodes","snap","hub","paper","tagName","nodeName","anims","_","g","mask","pattern","symbol","method","Fragment","frag","proto","ownerDocument","getElementsByTagName","dom","jsonFiller","toFloat","parseFloat","toInt","parseInt","mmax","mmin","min","colourRegExp","commaSpaces","hsrg","hs","rg","pathCommand","tCommand","pathValues","url","format","tokenRegex","objNotationRegex","replacer","quote","quotedName","isFunc","str","cos","asin","num","acos","atan","len2","closestPoint","distance2","dx","dy","best","bestLength","scan","scanDistance","pathNode","pathLength","getTotalLength","precision","pathSegList","numberOfItems","bestDistance","Infinity","scanLength","getPointAtLength","before","after","beforeLength","afterLength","beforeDistance","afterDistance","distance","snapTo","values","tolerance","rem","getRGB","colour","r","hex","rgbtoString","toHex","red","green","blue","rgb","hsb2rgb","hsl2rgb","hsb","hsl","toFixed","getPropertyValue","hsbtoString","hsltoString","prepareRGB","clr","packageRGB","rgb2hsl","rgb2hsb","v","R","G","C","H","S","V","L","M","parsePathString","pathString","pth","arr","paramCounts","c","u","TString","rgTransform","_unit2px","contains","compareDocumentPosition","adown","documentElement","bup","query","selectAll","nodelist","querySelectorAll","setInterval","attributes","json","att","parse","createDocumentFragment","full","div","innerHTML","firstChild","fragment","ch","toJSON","lastIndexOf","css","letter","cssAttr","alignment-baseline","baseline-shift","clip","clip-path","clip-rule","color-interpolation","color-interpolation-filters","color-profile","color-rendering","cursor","direction","dominant-baseline","enable-background","fill-opacity","fill-rule","filter","flood-color","flood-opacity","font","font-family","font-size","font-size-adjust","font-stretch","font-style","font-variant","font-weight","glyph-orientation-horizontal","glyph-orientation-vertical","image-rendering","kerning","letter-spacing","lighting-color","marker","marker-end","marker-mid","marker-start","pointer-events","shape-rendering","stop-color","stop-opacity","stroke","stroke-dasharray","stroke-dashoffset","stroke-linecap","stroke-linejoin","stroke-miterlimit","stroke-opacity","stroke-width","text-anchor","text-decoration","text-rendering","unicode-bidi","visibility","word-spacing","writing-mode","ajax","postData","req","XMLHttpRequest","pd","encodeURIComponent","open","setRequestHeader","onreadystatechange","readyState","send","load","responseText","getOffset","elem","box","docElem","clientTop","clientLeft","pageYOffset","scrollTop","pageXOffset","scrollLeft","getElementByPoint","canvas","elementFromPoint","opera","so","sr","createSVGRect","hits","getIntersectionList","plugin","extractTransform","doReturn","matrix","fixids","urltest","it","uses","URL","linktest","els","ids","oldid","old","fs","from","to","chld","elproto","isWithoutTransform","removed","localMatrix","original","href","pathfinder","deflt","bboxwt","realPath","propString","papa","getCTM","local","ms","localString","toTransformString","globalMatrix","totalMatrix","diffMatrix","total","gradientTransform","patternTransform","append","appendTo","prepend","insertBefore","prependTo","nextSibling","insertAfter","remove","asPX","use","xlink:href","cloneNode","toDefs","toPattern","patternUnits","refX","refY","cx","cy","markerWidth","markerHeight","orient","Animation","animation","inAnim","_attrs","_callback","curStatus","setter","eq","fkeys","tkeys","equal","eldata","removeData","outerSVG","innerSVG","toDataURL","btoa","contents","unescape","matrixproto","norm","normalize","mag","me","fromCharCode","offset","determinant","row","scalex","shear","scaley","isSimple","isSuperSimple","noRotation","shorter","fillStroke","grad","gradient","setFontSize","textExtract","chi","getFontSize","reURLValue","clipIt","gradrg","tokens","stops","toAbsolute","txt","baseVal","vb","rx","ry","tp","textPath","tuner","chunk","tuned","textContent","rgNotSpace","addClass","clazz","finalValue","classes","curClasses","removeClass","hasClass","toggleClass","flag","getNumber","getUnit","unit","operators","+","-","/","*","reUnit","reAddon","plus","evnt","atr","aUnit","op","isNaN","bplus","rect","circle","preload","onerror","src","img","cssText","image","offsetWidth","offsetHeight","ellipse","group","vbx","vby","vbw","vbh","ptrn","vx","vy","vw","vh","line","polyline","points","polygon","Gstops","GaddStop","GgetBBox","seed","step","unshift","gradientLinear","gradientRadial","gradientUnits","addStop","fx","fy","paths","ps","sleep","r1","r2","r0","rectPath","p2s","pathClone","pathArray","getPointAtSegmentLength","p1x","p1y","c1x","c1y","c2x","c2y","p2x","p2y","bezlen","findDotsAtSegment","getTotLen","getLengthFactory","istotal","subpath","O","onlystart","path2curve","point","sp","subpaths","t1","t13","t12","t2","t3","mx","my","nx","ny","ax","ay","alpha","bezierBBox","curveDim","isPointInsideBBox","isBBoxIntersect","bbox1","bbox2","base3","p1","p2","p3","p4","x4","y4","z2","Tvalues","Cvalues","sum","ct","xbase","ybase","comb","ll","intersect","denominator","px","py","px2","py2","interHelper","bez1","bez2","justCount","l1","l2","n1","n2","dots1","dots2","xy","di","di1","dj","dj1","ci","cj","pathIntersection","path1","path2","interPathHelper","pathIntersectionNumber","x1m","y1m","x2m","y2m","pi","pj","intr","kk","segment1","segment2","isPointInsidePath","pathBBox","dim","xmin","ymin","xmax","ymax","ellipsePath","pathToRelative","lowerCase","rel","pa","pathToAbsolute","pa0","crz","dots","pop","catmullRom2bezier","l2c","q2c","_13","_23","a2c","large_arc_flag","sweep_flag","recursive","_120","f1","rx2","ry2","df","f2old","x2old","y2old","c1","s1","c2","s2","hx","hy","m1","m2","m3","m4","newres","x0","y0","b2ac","sqrtb2ac","tvalues","bounds","mt","jlen","curve","bx","by","qx","qy","attrs2","processPath","pcom","T","fixArc","pp","pcoms1","pcoms2","fixM","a1","a2","pfirst","seg","seg2","seglen","seg2len","mapPath","pathi","crp","iLen","getSubpathsAtLength","getPath","getSubpath","closest","inside","found","intersection","intersectionNumber","isPointInside","toRelative","toCubic","Set","bindings","setproto","thisArg","each","begin","handler","cb","callbacker","aname","unbound","insertion","tail","todel","arglen","exclude","getEmpty","equaliseTransform","tt1","tt2","maxlength","path2array","getViewBox","getColour","isNumeric","arrayEqual","arr1","arr2","Number","bUnit","supportsTouch","touchMap","mousedown","mousemove","mouseup","getScroll","preventTouch","originalEvent","preventDefault","stopTouch","stopPropagation","addEvent","realName","scrollY","scrollX","targetTouches","olde","clientX","clientY","drag","dragMove","dragi","touch","touches","identifier","_drag","move_scope","dragUp","unmousemove","unmouseup","end_scope","start_scope","eventName","f_in","f_out","scope_in","scope_out","mouseover","mouseout","unhover","unmouseover","unmouseout","draggable","onmove","onstart","onend","init","origTransform","undrag","unmousedown","pproto","rgurl","filstr","filterUnits","blur","def","shadow","grayscale","amount","sepia","saturate","hueRotate","amount2","brightness","contrast","firstLetter","getAlign","way","align","./src/layouts/index.js","_possibleConstructorReturn","self","ReferenceError","_gatsbyLink","_gatsbyLink2","_reactResponsiveGrid","_arrowLeft","_arrowLeft2","_reactBurgerMenu","_typography","Template","_React$Component","mobile","check","substr","vendor","_props","location","header","title","pathname","handleSideNavigation","boxShadow","textDecoration","paddingBottom","minHeight","backgroundColor","fontFamily","rhythm","paddingTop","bottom","lineHeight","marginTop","function","route","bmMenu","bmMorphShape","bmItemList","bmItem","bmOverlay"],"mappings":"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","file":"component---src-layouts-index-js-9d93516b8231fdafe343.js","sourcesContent":["webpackJsonp([7489246917808536000,3954140758598355500],{\n\n/***/ \"./node_modules/json-loader/index.js!./.cache/json/layout-index.json\":\n/***/ (function(module, exports) {\n\n\tmodule.exports = {\"layoutContext\":{}}\n\n/***/ }),\n\n/***/ \"./node_modules/babel-loader/lib/index.js?{\\\"presets\\\":[\\\"/home/austin/newFusc/FuSC/node_modules/babel-preset-react/lib/index.js\\\",\\\"/home/austin/newFusc/FuSC/node_modules/babel-preset-es2015/lib/index.js\\\",\\\"/home/austin/newFusc/FuSC/node_modules/babel-preset-stage-1/lib/index.js\\\",\\\"/home/austin/newFusc/FuSC/node_modules/babel-preset-env/lib/index.js\\\",\\\"/home/austin/newFusc/FuSC/node_modules/babel-preset-stage-0/lib/index.js\\\",\\\"/home/austin/newFusc/FuSC/node_modules/babel-preset-react/lib/index.js\\\"],\\\"plugins\\\":[\\\"/home/austin/newFusc/FuSC/node_modules/gatsby/dist/utils/babel-plugin-extract-graphql.js\\\",\\\"/home/austin/newFusc/FuSC/node_modules/babel-plugin-add-module-exports/lib/index.js\\\",\\\"/home/austin/newFusc/FuSC/node_modules/babel-plugin-add-module-exports/lib/index.js\\\",\\\"/home/austin/newFusc/FuSC/node_modules/babel-plugin-transform-object-assign/lib/index.js\\\"],\\\"cacheDirectory\\\":true}!./.cache/layouts/index.js\":\n/***/ (function(module, exports, __webpack_require__) {\n\n\t\"use strict\";\n\t\n\tObject.defineProperty(exports, \"__esModule\", {\n\t  value: true\n\t});\n\t\n\tvar _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };\n\t\n\tvar _react = __webpack_require__(\"./node_modules/react/react.js\");\n\t\n\tvar _react2 = _interopRequireDefault(_react);\n\t\n\tvar _index = __webpack_require__(\"./src/layouts/index.js\");\n\t\n\tvar _index2 = _interopRequireDefault(_index);\n\t\n\tvar _layoutIndex = __webpack_require__(\"./node_modules/json-loader/index.js!./.cache/json/layout-index.json\");\n\t\n\tvar _layoutIndex2 = _interopRequireDefault(_layoutIndex);\n\t\n\tfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\t\n\texports.default = function (props) {\n\t  return _react2.default.createElement(_index2.default, _extends({}, props, _layoutIndex2.default));\n\t};\n\t\n\tmodule.exports = exports[\"default\"];\n\n/***/ }),\n\n/***/ \"./node_modules/element-resize-event/index.js\":\n/***/ (function(module, exports) {\n\n\tvar requestFrame = (function () {\n\t  var window = this\n\t  var raf = window.requestAnimationFrame ||\n\t    window.mozRequestAnimationFrame ||\n\t    window.webkitRequestAnimationFrame ||\n\t    function fallbackRAF(func) {\n\t      return window.setTimeout(func, 20)\n\t    }\n\t  return function requestFrameFunction(func) {\n\t    return raf(func)\n\t  }\n\t})()\n\t\n\tvar cancelFrame = (function () {\n\t  var window = this\n\t  var cancel = window.cancelAnimationFrame ||\n\t    window.mozCancelAnimationFrame ||\n\t    window.webkitCancelAnimationFrame ||\n\t    window.clearTimeout\n\t  return function cancelFrameFunction(id) {\n\t    return cancel(id)\n\t  }\n\t})()\n\t\n\tfunction resizeListener(e) {\n\t  var win = e.target || e.srcElement\n\t  if (win.__resizeRAF__) {\n\t    cancelFrame(win.__resizeRAF__)\n\t  }\n\t  win.__resizeRAF__ = requestFrame(function () {\n\t    var trigger = win.__resizeTrigger__\n\t    trigger.__resizeListeners__.forEach(function (fn) {\n\t      fn.call(trigger, e)\n\t    })\n\t  })\n\t}\n\t\n\tvar exports = function exports(element, fn) {\n\t  var window = this\n\t  var document = window.document\n\t  var isIE\n\t\n\t  var attachEvent = document.attachEvent\n\t  if (typeof navigator !== 'undefined') {\n\t    isIE = navigator.userAgent.match(/Trident/) ||\n\t      navigator.userAgent.match(/Edge/)\n\t  }\n\t\n\t  function objectLoad() {\n\t    this.contentDocument.defaultView.__resizeTrigger__ = this.__resizeElement__\n\t    this.contentDocument.defaultView.addEventListener('resize', resizeListener)\n\t  }\n\t\n\t  if (!element.__resizeListeners__) {\n\t    element.__resizeListeners__ = []\n\t    if (attachEvent) {\n\t      element.__resizeTrigger__ = element\n\t      element.attachEvent('onresize', resizeListener)\n\t    } else {\n\t      if (getComputedStyle(element).position === 'static') {\n\t        element.style.position = 'relative'\n\t      }\n\t      var obj = (element.__resizeTrigger__ = document.createElement('object'))\n\t      obj.setAttribute(\n\t        'style',\n\t        'display: block; position: absolute; top: 0; left: 0; height: 100%; width: 100%; overflow: hidden; pointer-events: none; z-index: -1; opacity: 0;'\n\t      )\n\t      obj.setAttribute('class', 'resize-sensor')\n\t      obj.__resizeElement__ = element\n\t      obj.onload = objectLoad\n\t      obj.type = 'text/html'\n\t      if (isIE) {\n\t        element.appendChild(obj)\n\t      }\n\t      obj.data = 'about:blank'\n\t      if (!isIE) {\n\t        element.appendChild(obj)\n\t      }\n\t    }\n\t  }\n\t  element.__resizeListeners__.push(fn)\n\t}\n\t\n\tmodule.exports = typeof window === 'undefined' ? exports : exports.bind(window)\n\t\n\tmodule.exports.unbind = function (element, fn) {\n\t  var attachEvent = document.attachEvent\n\t  if (fn) {\n\t    element.__resizeListeners__.splice(\n\t      element.__resizeListeners__.indexOf(fn),\n\t      1\n\t    )\n\t  } else {\n\t    element.__resizeListeners__ = []\n\t  }\n\t  if (!element.__resizeListeners__.length) {\n\t    if (attachEvent) {\n\t      element.detachEvent('onresize', resizeListener)\n\t    } else {\n\t      element.__resizeTrigger__.contentDocument.defaultView.removeEventListener(\n\t        'resize',\n\t        resizeListener\n\t      )\n\t      delete element.__resizeTrigger__.contentDocument.defaultView.__resizeTrigger__\n\t      element.__resizeTrigger__ = !element.removeChild(\n\t        element.__resizeTrigger__\n\t      )\n\t    }\n\t    delete element.__resizeListeners__\n\t  }\n\t}\n\n\n/***/ }),\n\n/***/ \"./node_modules/eve/eve.js\":\n/***/ (function(module, exports, __webpack_require__) {\n\n\tvar __WEBPACK_AMD_DEFINE_ARRAY__, __WEBPACK_AMD_DEFINE_RESULT__;// Copyright (c) 2013 Adobe Systems Incorporated. All rights reserved.\n\t// \n\t// Licensed under the Apache License, Version 2.0 (the \"License\");\n\t// you may not use this file except in compliance with the License.\n\t// You may obtain a copy of the License at\n\t// \n\t// http://www.apache.org/licenses/LICENSE-2.0\n\t// \n\t// Unless required by applicable law or agreed to in writing, software\n\t// distributed under the License is distributed on an \"AS IS\" BASIS,\n\t// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n\t// See the License for the specific language governing permissions and\n\t// limitations under the License.\n\t// ┌────────────────────────────────────────────────────────────┐ \\\\\n\t// │ Eve 0.4.2 - JavaScript Events Library                      │ \\\\\n\t// ├────────────────────────────────────────────────────────────┤ \\\\\n\t// │ Author Dmitry Baranovskiy (http://dmitry.baranovskiy.com/) │ \\\\\n\t// └────────────────────────────────────────────────────────────┘ \\\\\n\t\n\t(function (glob) {\n\t    var version = \"0.4.2\",\n\t        has = \"hasOwnProperty\",\n\t        separator = /[\\.\\/]/,\n\t        comaseparator = /\\s*,\\s*/,\n\t        wildcard = \"*\",\n\t        fun = function () {},\n\t        numsort = function (a, b) {\n\t            return a - b;\n\t        },\n\t        current_event,\n\t        stop,\n\t        events = {n: {}},\n\t        firstDefined = function () {\n\t            for (var i = 0, ii = this.length; i < ii; i++) {\n\t                if (typeof this[i] != \"undefined\") {\n\t                    return this[i];\n\t                }\n\t            }\n\t        },\n\t        lastDefined = function () {\n\t            var i = this.length;\n\t            while (--i) {\n\t                if (typeof this[i] != \"undefined\") {\n\t                    return this[i];\n\t                }\n\t            }\n\t        },\n\t    /*\\\n\t     * eve\n\t     [ method ]\n\t\n\t     * Fires event with given `name`, given scope and other parameters.\n\t\n\t     > Arguments\n\t\n\t     - name (string) name of the *event*, dot (`.`) or slash (`/`) separated\n\t     - scope (object) context for the event handlers\n\t     - varargs (...) the rest of arguments will be sent to event handlers\n\t\n\t     = (object) array of returned values from the listeners. Array has two methods `.firstDefined()` and `.lastDefined()` to get first or last not `undefined` value.\n\t    \\*/\n\t        eve = function (name, scope) {\n\t            name = String(name);\n\t            var e = events,\n\t                oldstop = stop,\n\t                args = Array.prototype.slice.call(arguments, 2),\n\t                listeners = eve.listeners(name),\n\t                z = 0,\n\t                f = false,\n\t                l,\n\t                indexed = [],\n\t                queue = {},\n\t                out = [],\n\t                ce = current_event,\n\t                errors = [];\n\t            out.firstDefined = firstDefined;\n\t            out.lastDefined = lastDefined;\n\t            current_event = name;\n\t            stop = 0;\n\t            for (var i = 0, ii = listeners.length; i < ii; i++) if (\"zIndex\" in listeners[i]) {\n\t                indexed.push(listeners[i].zIndex);\n\t                if (listeners[i].zIndex < 0) {\n\t                    queue[listeners[i].zIndex] = listeners[i];\n\t                }\n\t            }\n\t            indexed.sort(numsort);\n\t            while (indexed[z] < 0) {\n\t                l = queue[indexed[z++]];\n\t                out.push(l.apply(scope, args));\n\t                if (stop) {\n\t                    stop = oldstop;\n\t                    return out;\n\t                }\n\t            }\n\t            for (i = 0; i < ii; i++) {\n\t                l = listeners[i];\n\t                if (\"zIndex\" in l) {\n\t                    if (l.zIndex == indexed[z]) {\n\t                        out.push(l.apply(scope, args));\n\t                        if (stop) {\n\t                            break;\n\t                        }\n\t                        do {\n\t                            z++;\n\t                            l = queue[indexed[z]];\n\t                            l && out.push(l.apply(scope, args));\n\t                            if (stop) {\n\t                                break;\n\t                            }\n\t                        } while (l)\n\t                    } else {\n\t                        queue[l.zIndex] = l;\n\t                    }\n\t                } else {\n\t                    out.push(l.apply(scope, args));\n\t                    if (stop) {\n\t                        break;\n\t                    }\n\t                }\n\t            }\n\t            stop = oldstop;\n\t            current_event = ce;\n\t            return out;\n\t        };\n\t        // Undocumented. Debug only.\n\t        eve._events = events;\n\t    /*\\\n\t     * eve.listeners\n\t     [ method ]\n\t\n\t     * Internal method which gives you array of all event handlers that will be triggered by the given `name`.\n\t\n\t     > Arguments\n\t\n\t     - name (string) name of the event, dot (`.`) or slash (`/`) separated\n\t\n\t     = (array) array of event handlers\n\t    \\*/\n\t    eve.listeners = function (name) {\n\t        var names = name.split(separator),\n\t            e = events,\n\t            item,\n\t            items,\n\t            k,\n\t            i,\n\t            ii,\n\t            j,\n\t            jj,\n\t            nes,\n\t            es = [e],\n\t            out = [];\n\t        for (i = 0, ii = names.length; i < ii; i++) {\n\t            nes = [];\n\t            for (j = 0, jj = es.length; j < jj; j++) {\n\t                e = es[j].n;\n\t                items = [e[names[i]], e[wildcard]];\n\t                k = 2;\n\t                while (k--) {\n\t                    item = items[k];\n\t                    if (item) {\n\t                        nes.push(item);\n\t                        out = out.concat(item.f || []);\n\t                    }\n\t                }\n\t            }\n\t            es = nes;\n\t        }\n\t        return out;\n\t    };\n\t    \n\t    /*\\\n\t     * eve.on\n\t     [ method ]\n\t     **\n\t     * Binds given event handler with a given name. You can use wildcards “`*`” for the names:\n\t     | eve.on(\"*.under.*\", f);\n\t     | eve(\"mouse.under.floor\"); // triggers f\n\t     * Use @eve to trigger the listener.\n\t     **\n\t     > Arguments\n\t     **\n\t     - name (string) name of the event, dot (`.`) or slash (`/`) separated, with optional wildcards\n\t     - f (function) event handler function\n\t     **\n\t     = (function) returned function accepts a single numeric parameter that represents z-index of the handler. It is an optional feature and only used when you need to ensure that some subset of handlers will be invoked in a given order, despite of the order of assignment. \n\t     > Example:\n\t     | eve.on(\"mouse\", eatIt)(2);\n\t     | eve.on(\"mouse\", scream);\n\t     | eve.on(\"mouse\", catchIt)(1);\n\t     * This will ensure that `catchIt` function will be called before `eatIt`.\n\t     *\n\t     * If you want to put your handler before non-indexed handlers, specify a negative value.\n\t     * Note: I assume most of the time you don’t need to worry about z-index, but it’s nice to have this feature “just in case”.\n\t    \\*/\n\t    eve.on = function (name, f) {\n\t        name = String(name);\n\t        if (typeof f != \"function\") {\n\t            return function () {};\n\t        }\n\t        var names = name.split(comaseparator);\n\t        for (var i = 0, ii = names.length; i < ii; i++) {\n\t            (function (name) {\n\t                var names = name.split(separator),\n\t                    e = events,\n\t                    exist;\n\t                for (var i = 0, ii = names.length; i < ii; i++) {\n\t                    e = e.n;\n\t                    e = e.hasOwnProperty(names[i]) && e[names[i]] || (e[names[i]] = {n: {}});\n\t                }\n\t                e.f = e.f || [];\n\t                for (i = 0, ii = e.f.length; i < ii; i++) if (e.f[i] == f) {\n\t                    exist = true;\n\t                    break;\n\t                }\n\t                !exist && e.f.push(f);\n\t            }(names[i]));\n\t        }\n\t        return function (zIndex) {\n\t            if (+zIndex == +zIndex) {\n\t                f.zIndex = +zIndex;\n\t            }\n\t        };\n\t    };\n\t    /*\\\n\t     * eve.f\n\t     [ method ]\n\t     **\n\t     * Returns function that will fire given event with optional arguments.\n\t     * Arguments that will be passed to the result function will be also\n\t     * concated to the list of final arguments.\n\t     | el.onclick = eve.f(\"click\", 1, 2);\n\t     | eve.on(\"click\", function (a, b, c) {\n\t     |     console.log(a, b, c); // 1, 2, [event object]\n\t     | });\n\t     > Arguments\n\t     - event (string) event name\n\t     - varargs (…) and any other arguments\n\t     = (function) possible event handler function\n\t    \\*/\n\t    eve.f = function (event) {\n\t        var attrs = [].slice.call(arguments, 1);\n\t        return function () {\n\t            eve.apply(null, [event, null].concat(attrs).concat([].slice.call(arguments, 0)));\n\t        };\n\t    };\n\t    /*\\\n\t     * eve.stop\n\t     [ method ]\n\t     **\n\t     * Is used inside an event handler to stop the event, preventing any subsequent listeners from firing.\n\t    \\*/\n\t    eve.stop = function () {\n\t        stop = 1;\n\t    };\n\t    /*\\\n\t     * eve.nt\n\t     [ method ]\n\t     **\n\t     * Could be used inside event handler to figure out actual name of the event.\n\t     **\n\t     > Arguments\n\t     **\n\t     - subname (string) #optional subname of the event\n\t     **\n\t     = (string) name of the event, if `subname` is not specified\n\t     * or\n\t     = (boolean) `true`, if current event’s name contains `subname`\n\t    \\*/\n\t    eve.nt = function (subname) {\n\t        if (subname) {\n\t            return new RegExp(\"(?:\\\\.|\\\\/|^)\" + subname + \"(?:\\\\.|\\\\/|$)\").test(current_event);\n\t        }\n\t        return current_event;\n\t    };\n\t    /*\\\n\t     * eve.nts\n\t     [ method ]\n\t     **\n\t     * Could be used inside event handler to figure out actual name of the event.\n\t     **\n\t     **\n\t     = (array) names of the event\n\t    \\*/\n\t    eve.nts = function () {\n\t        return current_event.split(separator);\n\t    };\n\t    /*\\\n\t     * eve.off\n\t     [ method ]\n\t     **\n\t     * Removes given function from the list of event listeners assigned to given name.\n\t     * If no arguments specified all the events will be cleared.\n\t     **\n\t     > Arguments\n\t     **\n\t     - name (string) name of the event, dot (`.`) or slash (`/`) separated, with optional wildcards\n\t     - f (function) event handler function\n\t    \\*/\n\t    /*\\\n\t     * eve.unbind\n\t     [ method ]\n\t     **\n\t     * See @eve.off\n\t    \\*/\n\t    eve.off = eve.unbind = function (name, f) {\n\t        if (!name) {\n\t            eve._events = events = {n: {}};\n\t            return;\n\t        }\n\t        var names = name.split(comaseparator);\n\t        if (names.length > 1) {\n\t            for (var i = 0, ii = names.length; i < ii; i++) {\n\t                eve.off(names[i], f);\n\t            }\n\t            return;\n\t        }\n\t        names = name.split(separator);\n\t        var e,\n\t            key,\n\t            splice,\n\t            i, ii, j, jj,\n\t            cur = [events];\n\t        for (i = 0, ii = names.length; i < ii; i++) {\n\t            for (j = 0; j < cur.length; j += splice.length - 2) {\n\t                splice = [j, 1];\n\t                e = cur[j].n;\n\t                if (names[i] != wildcard) {\n\t                    if (e[names[i]]) {\n\t                        splice.push(e[names[i]]);\n\t                    }\n\t                } else {\n\t                    for (key in e) if (e[has](key)) {\n\t                        splice.push(e[key]);\n\t                    }\n\t                }\n\t                cur.splice.apply(cur, splice);\n\t            }\n\t        }\n\t        for (i = 0, ii = cur.length; i < ii; i++) {\n\t            e = cur[i];\n\t            while (e.n) {\n\t                if (f) {\n\t                    if (e.f) {\n\t                        for (j = 0, jj = e.f.length; j < jj; j++) if (e.f[j] == f) {\n\t                            e.f.splice(j, 1);\n\t                            break;\n\t                        }\n\t                        !e.f.length && delete e.f;\n\t                    }\n\t                    for (key in e.n) if (e.n[has](key) && e.n[key].f) {\n\t                        var funcs = e.n[key].f;\n\t                        for (j = 0, jj = funcs.length; j < jj; j++) if (funcs[j] == f) {\n\t                            funcs.splice(j, 1);\n\t                            break;\n\t                        }\n\t                        !funcs.length && delete e.n[key].f;\n\t                    }\n\t                } else {\n\t                    delete e.f;\n\t                    for (key in e.n) if (e.n[has](key) && e.n[key].f) {\n\t                        delete e.n[key].f;\n\t                    }\n\t                }\n\t                e = e.n;\n\t            }\n\t        }\n\t    };\n\t    /*\\\n\t     * eve.once\n\t     [ method ]\n\t     **\n\t     * Binds given event handler with a given name to only run once then unbind itself.\n\t     | eve.once(\"login\", f);\n\t     | eve(\"login\"); // triggers f\n\t     | eve(\"login\"); // no listeners\n\t     * Use @eve to trigger the listener.\n\t     **\n\t     > Arguments\n\t     **\n\t     - name (string) name of the event, dot (`.`) or slash (`/`) separated, with optional wildcards\n\t     - f (function) event handler function\n\t     **\n\t     = (function) same return function as @eve.on\n\t    \\*/\n\t    eve.once = function (name, f) {\n\t        var f2 = function () {\n\t            eve.unbind(name, f2);\n\t            return f.apply(this, arguments);\n\t        };\n\t        return eve.on(name, f2);\n\t    };\n\t    /*\\\n\t     * eve.version\n\t     [ property (string) ]\n\t     **\n\t     * Current version of the library.\n\t    \\*/\n\t    eve.version = version;\n\t    eve.toString = function () {\n\t        return \"You are running Eve \" + version;\n\t    };\n\t    (typeof module != \"undefined\" && module.exports) ? (module.exports = eve) : ( true ? (!(__WEBPACK_AMD_DEFINE_ARRAY__ = [], __WEBPACK_AMD_DEFINE_RESULT__ = function() { return eve; }.apply(exports, __WEBPACK_AMD_DEFINE_ARRAY__), __WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__))) : (glob.eve = eve));\n\t})(this);\n\n\n/***/ }),\n\n/***/ \"./node_modules/performance-now/lib/performance-now.js\":\n/***/ (function(module, exports, __webpack_require__) {\n\n\t/* WEBPACK VAR INJECTION */(function(process) {// Generated by CoffeeScript 1.6.3\n\t(function() {\n\t  var getNanoSeconds, hrtime, loadTime;\n\t\n\t  if ((typeof performance !== \"undefined\" && performance !== null) && performance.now) {\n\t    module.exports = function() {\n\t      return performance.now();\n\t    };\n\t  } else if ((typeof process !== \"undefined\" && process !== null) && process.hrtime) {\n\t    module.exports = function() {\n\t      return (getNanoSeconds() - loadTime) / 1e6;\n\t    };\n\t    hrtime = process.hrtime;\n\t    getNanoSeconds = function() {\n\t      var hr;\n\t      hr = hrtime();\n\t      return hr[0] * 1e9 + hr[1];\n\t    };\n\t    loadTime = getNanoSeconds();\n\t  } else if (Date.now) {\n\t    module.exports = function() {\n\t      return Date.now() - loadTime;\n\t    };\n\t    loadTime = Date.now();\n\t  } else {\n\t    module.exports = function() {\n\t      return new Date().getTime() - loadTime;\n\t    };\n\t    loadTime = new Date().getTime();\n\t  }\n\t\n\t}).call(this);\n\t\n\t/*\n\t//@ sourceMappingURL=performance-now.map\n\t*/\n\t\n\t/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(\"./node_modules/process/browser.js\")))\n\n/***/ }),\n\n/***/ \"./node_modules/raf/index.js\":\n/***/ (function(module, exports, __webpack_require__) {\n\n\tvar now = __webpack_require__(\"./node_modules/performance-now/lib/performance-now.js\")\n\t  , global = typeof window === 'undefined' ? {} : window\n\t  , vendors = ['moz', 'webkit']\n\t  , suffix = 'AnimationFrame'\n\t  , raf = global['request' + suffix]\n\t  , caf = global['cancel' + suffix] || global['cancelRequest' + suffix]\n\t  , isNative = true\n\t\n\tfor(var i = 0; i < vendors.length && !raf; i++) {\n\t  raf = global[vendors[i] + 'Request' + suffix]\n\t  caf = global[vendors[i] + 'Cancel' + suffix]\n\t      || global[vendors[i] + 'CancelRequest' + suffix]\n\t}\n\t\n\t// Some versions of FF have rAF but not cAF\n\tif(!raf || !caf) {\n\t  isNative = false\n\t\n\t  var last = 0\n\t    , id = 0\n\t    , queue = []\n\t    , frameDuration = 1000 / 60\n\t\n\t  raf = function(callback) {\n\t    if(queue.length === 0) {\n\t      var _now = now()\n\t        , next = Math.max(0, frameDuration - (_now - last))\n\t      last = next + _now\n\t      setTimeout(function() {\n\t        var cp = queue.slice(0)\n\t        // Clear queue here to prevent\n\t        // callbacks from appending listeners\n\t        // to the current frame's queue\n\t        queue.length = 0\n\t        for(var i = 0; i < cp.length; i++) {\n\t          if(!cp[i].cancelled) {\n\t            try{\n\t              cp[i].callback(last)\n\t            } catch(e) {\n\t              setTimeout(function() { throw e }, 0)\n\t            }\n\t          }\n\t        }\n\t      }, Math.round(next))\n\t    }\n\t    queue.push({\n\t      handle: ++id,\n\t      callback: callback,\n\t      cancelled: false\n\t    })\n\t    return id\n\t  }\n\t\n\t  caf = function(handle) {\n\t    for(var i = 0; i < queue.length; i++) {\n\t      if(queue[i].handle === handle) {\n\t        queue[i].cancelled = true\n\t      }\n\t    }\n\t  }\n\t}\n\t\n\tmodule.exports = function(fn) {\n\t  // Wrap in a new function to prevent\n\t  // `cancel` potentially being assigned\n\t  // to the native rAF function\n\t  if(!isNative) {\n\t    return raf.call(global, fn)\n\t  }\n\t  return raf.call(global, function() {\n\t    try{\n\t      fn.apply(this, arguments)\n\t    } catch(e) {\n\t      setTimeout(function() { throw e }, 0)\n\t    }\n\t  })\n\t}\n\tmodule.exports.cancel = function() {\n\t  caf.apply(global, arguments)\n\t}\n\n\n/***/ }),\n\n/***/ \"./node_modules/react-burger-menu/lib/BurgerIcon.js\":\n/***/ (function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t\n\tObject.defineProperty(exports, '__esModule', {\n\t  value: true\n\t});\n\t\n\tvar _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };\n\t\n\tvar _createClass = (function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ('value' in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; })();\n\t\n\tvar _get = function get(_x, _x2, _x3) { var _again = true; _function: while (_again) { var object = _x, property = _x2, receiver = _x3; _again = false; if (object === null) object = Function.prototype; var desc = Object.getOwnPropertyDescriptor(object, property); if (desc === undefined) { var parent = Object.getPrototypeOf(object); if (parent === null) { return undefined; } else { _x = parent; _x2 = property; _x3 = receiver; _again = true; desc = parent = undefined; continue _function; } } else if ('value' in desc) { return desc.value; } else { var getter = desc.get; if (getter === undefined) { return undefined; } return getter.call(receiver); } } };\n\t\n\tfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { 'default': obj }; }\n\t\n\tfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError('Cannot call a class as a function'); } }\n\t\n\tfunction _inherits(subClass, superClass) { if (typeof superClass !== 'function' && superClass !== null) { throw new TypeError('Super expression must either be null or a function, not ' + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }\n\t\n\tvar _react = __webpack_require__(\"./node_modules/react/react.js\");\n\t\n\tvar _react2 = _interopRequireDefault(_react);\n\t\n\tvar _propTypes = __webpack_require__(\"./node_modules/prop-types/index.js\");\n\t\n\tvar _propTypes2 = _interopRequireDefault(_propTypes);\n\t\n\tvar BurgerIcon = (function (_Component) {\n\t  _inherits(BurgerIcon, _Component);\n\t\n\t  function BurgerIcon(props) {\n\t    _classCallCheck(this, BurgerIcon);\n\t\n\t    _get(Object.getPrototypeOf(BurgerIcon.prototype), 'constructor', this).call(this, props);\n\t    this.state = {\n\t      hover: false\n\t    };\n\t  }\n\t\n\t  _createClass(BurgerIcon, [{\n\t    key: 'getLineStyle',\n\t    value: function getLineStyle(index) {\n\t      return {\n\t        position: 'absolute',\n\t        height: '20%',\n\t        left: 0,\n\t        right: 0,\n\t        top: 20 * (index * 2) + '%',\n\t        opacity: this.state.hover ? 0.6 : 1\n\t      };\n\t    }\n\t  }, {\n\t    key: 'render',\n\t    value: function render() {\n\t      var _this = this;\n\t\n\t      var icon = undefined;\n\t      var buttonStyle = {\n\t        position: 'absolute',\n\t        left: 0,\n\t        top: 0,\n\t        width: '100%',\n\t        height: '100%',\n\t        margin: 0,\n\t        padding: 0,\n\t        border: 'none',\n\t        opacity: 0,\n\t        fontSize: 8\n\t      };\n\t\n\t      if (this.props.customIcon) {\n\t        var extraProps = {\n\t          className: 'bm-icon',\n\t          style: _extends({ width: '100%', height: '100%' }, this.props.styles.bmIcon)\n\t        };\n\t        icon = _react2['default'].cloneElement(this.props.customIcon, extraProps);\n\t      } else {\n\t        icon = _react2['default'].createElement(\n\t          'span',\n\t          null,\n\t          [0, 1, 2].map(function (bar) {\n\t            return _react2['default'].createElement('span', {\n\t              key: bar,\n\t              className: 'bm-burger-bars ' + _this.props.barClassName,\n\t              style: _extends({}, _this.getLineStyle(bar), _this.props.styles.bmBurgerBars)\n\t            });\n\t          })\n\t        );\n\t      }\n\t\n\t      return _react2['default'].createElement(\n\t        'div',\n\t        {\n\t          className: 'bm-burger-button ' + this.props.className,\n\t          style: _extends({ zIndex: 1 }, this.props.styles.bmBurgerButton)\n\t        },\n\t        icon,\n\t        _react2['default'].createElement(\n\t          'button',\n\t          {\n\t            onClick: this.props.onClick,\n\t            onMouseOver: function () {\n\t              return _this.setState({ hover: true });\n\t            },\n\t            onMouseOut: function () {\n\t              return _this.setState({ hover: false });\n\t            },\n\t            style: buttonStyle\n\t          },\n\t          'Open Menu'\n\t        )\n\t      );\n\t    }\n\t  }]);\n\t\n\t  return BurgerIcon;\n\t})(_react.Component);\n\t\n\texports['default'] = BurgerIcon;\n\t\n\tBurgerIcon.propTypes = {\n\t  barClassName: _propTypes2['default'].string,\n\t  customIcon: _propTypes2['default'].element,\n\t  styles: _propTypes2['default'].object\n\t};\n\t\n\tBurgerIcon.defaultProps = {\n\t  barClassName: '',\n\t  className: '',\n\t  styles: {}\n\t};\n\tmodule.exports = exports['default'];\n\n/***/ }),\n\n/***/ \"./node_modules/react-burger-menu/lib/BurgerMenu.js\":\n/***/ (function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t\n\tObject.defineProperty(exports, '__esModule', {\n\t  value: true\n\t});\n\texports['default'] = {\n\t  slide: __webpack_require__(\"./node_modules/react-burger-menu/lib/menus/slide.js\"),\n\t  stack: __webpack_require__(\"./node_modules/react-burger-menu/lib/menus/stack.js\"),\n\t  elastic: __webpack_require__(\"./node_modules/react-burger-menu/lib/menus/elastic.js\"),\n\t  bubble: __webpack_require__(\"./node_modules/react-burger-menu/lib/menus/bubble.js\"),\n\t  push: __webpack_require__(\"./node_modules/react-burger-menu/lib/menus/push.js\"),\n\t  pushRotate: __webpack_require__(\"./node_modules/react-burger-menu/lib/menus/pushRotate.js\"),\n\t  scaleDown: __webpack_require__(\"./node_modules/react-burger-menu/lib/menus/scaleDown.js\"),\n\t  scaleRotate: __webpack_require__(\"./node_modules/react-burger-menu/lib/menus/scaleRotate.js\"),\n\t  fallDown: __webpack_require__(\"./node_modules/react-burger-menu/lib/menus/fallDown.js\")\n\t};\n\tmodule.exports = exports['default'];\n\n/***/ }),\n\n/***/ \"./node_modules/react-burger-menu/lib/CrossIcon.js\":\n/***/ (function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t\n\tObject.defineProperty(exports, '__esModule', {\n\t  value: true\n\t});\n\t\n\tvar _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };\n\t\n\tvar _createClass = (function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ('value' in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; })();\n\t\n\tvar _get = function get(_x, _x2, _x3) { var _again = true; _function: while (_again) { var object = _x, property = _x2, receiver = _x3; _again = false; if (object === null) object = Function.prototype; var desc = Object.getOwnPropertyDescriptor(object, property); if (desc === undefined) { var parent = Object.getPrototypeOf(object); if (parent === null) { return undefined; } else { _x = parent; _x2 = property; _x3 = receiver; _again = true; desc = parent = undefined; continue _function; } } else if ('value' in desc) { return desc.value; } else { var getter = desc.get; if (getter === undefined) { return undefined; } return getter.call(receiver); } } };\n\t\n\tfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { 'default': obj }; }\n\t\n\tfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError('Cannot call a class as a function'); } }\n\t\n\tfunction _inherits(subClass, superClass) { if (typeof superClass !== 'function' && superClass !== null) { throw new TypeError('Super expression must either be null or a function, not ' + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }\n\t\n\tvar _react = __webpack_require__(\"./node_modules/react/react.js\");\n\t\n\tvar _react2 = _interopRequireDefault(_react);\n\t\n\tvar _propTypes = __webpack_require__(\"./node_modules/prop-types/index.js\");\n\t\n\tvar _propTypes2 = _interopRequireDefault(_propTypes);\n\t\n\tvar CrossIcon = (function (_Component) {\n\t  _inherits(CrossIcon, _Component);\n\t\n\t  function CrossIcon() {\n\t    _classCallCheck(this, CrossIcon);\n\t\n\t    _get(Object.getPrototypeOf(CrossIcon.prototype), 'constructor', this).apply(this, arguments);\n\t  }\n\t\n\t  _createClass(CrossIcon, [{\n\t    key: 'getCrossStyle',\n\t    value: function getCrossStyle(type) {\n\t      return {\n\t        position: 'absolute',\n\t        width: 3,\n\t        height: 14,\n\t        transform: type === 'before' ? 'rotate(45deg)' : 'rotate(-45deg)'\n\t      };\n\t    }\n\t  }, {\n\t    key: 'render',\n\t    value: function render() {\n\t      var _this = this;\n\t\n\t      var icon;\n\t      var buttonWrapperStyle = {\n\t        position: 'absolute',\n\t        width: 24,\n\t        height: 24,\n\t        right: 8,\n\t        top: 8\n\t      };\n\t      var buttonStyle = {\n\t        position: 'absolute',\n\t        left: 0,\n\t        top: 0,\n\t        width: '100%',\n\t        height: '100%',\n\t        margin: 0,\n\t        padding: 0,\n\t        border: 'none',\n\t        textIndent: -9999,\n\t        background: 'transparent',\n\t        outline: 'none'\n\t      };\n\t\n\t      if (this.props.customIcon) {\n\t        var extraProps = {\n\t          className: 'bm-cross',\n\t          style: _extends({ width: '100%', height: '100%' }, this.props.styles.bmCross)\n\t        };\n\t        icon = _react2['default'].cloneElement(this.props.customIcon, extraProps);\n\t      } else {\n\t        icon = _react2['default'].createElement(\n\t          'span',\n\t          { style: { position: 'absolute', top: '6px', right: '14px' } },\n\t          ['before', 'after'].map(function (type, i) {\n\t            return _react2['default'].createElement('span', {\n\t              key: i,\n\t              className: 'bm-cross ' + _this.props.crossClassName,\n\t              style: _extends({}, _this.getCrossStyle(type), _this.props.styles.bmCross)\n\t            });\n\t          })\n\t        );\n\t      }\n\t\n\t      return _react2['default'].createElement(\n\t        'div',\n\t        {\n\t          className: 'bm-cross-button ' + this.props.className,\n\t          style: _extends({}, buttonWrapperStyle, this.props.styles.bmCrossButton)\n\t        },\n\t        icon,\n\t        _react2['default'].createElement(\n\t          'button',\n\t          { onClick: this.props.onClick, style: buttonStyle },\n\t          'Close Menu'\n\t        )\n\t      );\n\t    }\n\t  }]);\n\t\n\t  return CrossIcon;\n\t})(_react.Component);\n\t\n\texports['default'] = CrossIcon;\n\t\n\tCrossIcon.propTypes = {\n\t  crossClassName: _propTypes2['default'].string,\n\t  customIcon: _propTypes2['default'].element,\n\t  styles: _propTypes2['default'].object\n\t};\n\t\n\tCrossIcon.defaultProps = {\n\t  crossClassName: '',\n\t  className: '',\n\t  styles: {}\n\t};\n\tmodule.exports = exports['default'];\n\n/***/ }),\n\n/***/ \"./node_modules/react-burger-menu/lib/baseStyles.js\":\n/***/ (function(module, exports) {\n\n\t'use strict';\n\t\n\tObject.defineProperty(exports, '__esModule', {\n\t  value: true\n\t});\n\tvar styles = {\n\t\n\t  overlay: function overlay(isOpen) {\n\t    return {\n\t      position: 'fixed',\n\t      zIndex: 1,\n\t      width: '100%',\n\t      height: '100%',\n\t      background: 'rgba(0, 0, 0, 0.3)',\n\t      opacity: isOpen ? 1 : 0,\n\t      MozTransform: isOpen ? '' : 'translate3d(100%, 0, 0)',\n\t      MsTransform: isOpen ? '' : 'translate3d(100%, 0, 0)',\n\t      OTransform: isOpen ? '' : 'translate3d(100%, 0, 0)',\n\t      WebkitTransform: isOpen ? '' : 'translate3d(100%, 0, 0)',\n\t      transform: isOpen ? '' : 'translate3d(100%, 0, 0)',\n\t      transition: isOpen ? 'opacity 0.3s' : 'opacity 0.3s, transform 0s 0.3s'\n\t    };\n\t  },\n\t\n\t  menuWrap: function menuWrap(isOpen, width, right) {\n\t    return {\n\t      position: 'fixed',\n\t      right: right ? 0 : 'inherit',\n\t      zIndex: 2,\n\t      width: width,\n\t      height: '100%',\n\t      MozTransform: isOpen ? '' : right ? 'translate3d(100%, 0, 0)' : 'translate3d(-100%, 0, 0)',\n\t      MsTransform: isOpen ? '' : right ? 'translate3d(100%, 0, 0)' : 'translate3d(-100%, 0, 0)',\n\t      OTransform: isOpen ? '' : right ? 'translate3d(100%, 0, 0)' : 'translate3d(-100%, 0, 0)',\n\t      WebkitTransform: isOpen ? '' : right ? 'translate3d(100%, 0, 0)' : 'translate3d(-100%, 0, 0)',\n\t      transform: isOpen ? '' : right ? 'translate3d(100%, 0, 0)' : 'translate3d(-100%, 0, 0)',\n\t      transition: 'all 0.5s'\n\t    };\n\t  },\n\t\n\t  menu: function menu() {\n\t    return {\n\t      height: '100%',\n\t      boxSizing: 'border-box',\n\t      overflow: 'auto'\n\t    };\n\t  },\n\t\n\t  itemList: function itemList() {\n\t    return {\n\t      height: '100%'\n\t    };\n\t  },\n\t\n\t  item: function item() {\n\t    return {\n\t      display: 'block',\n\t      outline: 'none'\n\t    };\n\t  }\n\t\n\t};\n\t\n\texports['default'] = styles;\n\tmodule.exports = exports['default'];\n\n/***/ }),\n\n/***/ \"./node_modules/react-burger-menu/lib/menuFactory.js\":\n/***/ (function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t\n\tObject.defineProperty(exports, '__esModule', {\n\t  value: true\n\t});\n\t\n\tvar _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };\n\t\n\tvar _createClass = (function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ('value' in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; })();\n\t\n\tvar _get = function get(_x2, _x3, _x4) { var _again = true; _function: while (_again) { var object = _x2, property = _x3, receiver = _x4; _again = false; if (object === null) object = Function.prototype; var desc = Object.getOwnPropertyDescriptor(object, property); if (desc === undefined) { var parent = Object.getPrototypeOf(object); if (parent === null) { return undefined; } else { _x2 = parent; _x3 = property; _x4 = receiver; _again = true; desc = parent = undefined; continue _function; } } else if ('value' in desc) { return desc.value; } else { var getter = desc.get; if (getter === undefined) { return undefined; } return getter.call(receiver); } } };\n\t\n\tfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { 'default': obj }; }\n\t\n\tfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError('Cannot call a class as a function'); } }\n\t\n\tfunction _inherits(subClass, superClass) { if (typeof superClass !== 'function' && superClass !== null) { throw new TypeError('Super expression must either be null or a function, not ' + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }\n\t\n\tvar _react = __webpack_require__(\"./node_modules/react/react.js\");\n\t\n\tvar _react2 = _interopRequireDefault(_react);\n\t\n\tvar _reactDom = __webpack_require__(\"./node_modules/react-dom/index.js\");\n\t\n\tvar _reactDom2 = _interopRequireDefault(_reactDom);\n\t\n\tvar _propTypes = __webpack_require__(\"./node_modules/prop-types/index.js\");\n\t\n\tvar _propTypes2 = _interopRequireDefault(_propTypes);\n\t\n\tvar _baseStyles = __webpack_require__(\"./node_modules/react-burger-menu/lib/baseStyles.js\");\n\t\n\tvar _baseStyles2 = _interopRequireDefault(_baseStyles);\n\t\n\tvar _BurgerIcon = __webpack_require__(\"./node_modules/react-burger-menu/lib/BurgerIcon.js\");\n\t\n\tvar _BurgerIcon2 = _interopRequireDefault(_BurgerIcon);\n\t\n\tvar _CrossIcon = __webpack_require__(\"./node_modules/react-burger-menu/lib/CrossIcon.js\");\n\t\n\tvar _CrossIcon2 = _interopRequireDefault(_CrossIcon);\n\t\n\texports['default'] = function (styles) {\n\t  var Menu = (function (_Component) {\n\t    _inherits(Menu, _Component);\n\t\n\t    function Menu(props) {\n\t      _classCallCheck(this, Menu);\n\t\n\t      _get(Object.getPrototypeOf(Menu.prototype), 'constructor', this).call(this, props);\n\t      this.state = {\n\t        isOpen: props && typeof props.isOpen !== 'undefined' ? props.isOpen : false\n\t      };\n\t    }\n\t\n\t    _createClass(Menu, [{\n\t      key: 'toggleMenu',\n\t      value: function toggleMenu() {\n\t        var _this = this;\n\t\n\t        var newState = { isOpen: !this.state.isOpen };\n\t\n\t        this.applyWrapperStyles();\n\t\n\t        this.setState(newState, function () {\n\t          _this.props.onStateChange(newState);\n\t\n\t          // Timeout ensures wrappers are cleared after animation finishes.\n\t          _this.timeoutId && clearTimeout(_this.timeoutId);\n\t          _this.timeoutId = setTimeout(function () {\n\t            _this.timeoutId = null;\n\t            if (!newState.isOpen) {\n\t              _this.applyWrapperStyles(false);\n\t            }\n\t          }, 500);\n\t        });\n\t      }\n\t\n\t      // Applies component-specific styles to external wrapper elements.\n\t    }, {\n\t      key: 'applyWrapperStyles',\n\t      value: function applyWrapperStyles() {\n\t        var set = arguments.length <= 0 || arguments[0] === undefined ? true : arguments[0];\n\t\n\t        if (this.props.bodyClassName) {\n\t          var body = document.querySelector('body');\n\t          body.classList[set ? 'add' : 'remove'](this.props.bodyClassName);\n\t        }\n\t\n\t        if (styles.pageWrap && this.props.pageWrapId) {\n\t          this.handleExternalWrapper(this.props.pageWrapId, styles.pageWrap, set);\n\t        }\n\t\n\t        if (styles.outerContainer && this.props.outerContainerId) {\n\t          this.handleExternalWrapper(this.props.outerContainerId, styles.outerContainer, set);\n\t        }\n\t      }\n\t\n\t      // Sets or unsets styles on DOM elements outside the menu component.\n\t      // This is necessary for correct page interaction with some of the menus.\n\t      // Throws and returns if the required external elements don't exist,\n\t      // which means any external page animations won't be applied.\n\t    }, {\n\t      key: 'handleExternalWrapper',\n\t      value: function handleExternalWrapper(id, wrapperStyles, set) {\n\t        var html = document.querySelector('html');\n\t        var body = document.querySelector('body');\n\t        var wrapper = document.getElementById(id);\n\t\n\t        if (!wrapper) {\n\t          console.error(\"Element with ID '\" + id + \"' not found\");\n\t          return;\n\t        }\n\t\n\t        var builtStyles = this.getStyle(wrapperStyles);\n\t\n\t        for (var prop in builtStyles) {\n\t          if (builtStyles.hasOwnProperty(prop)) {\n\t            wrapper.style[prop] = set ? builtStyles[prop] : '';\n\t          }\n\t        }\n\t\n\t        // Prevent any horizontal scroll.\n\t        [html, body].forEach(function (element) {\n\t          element.style['overflow-x'] = set ? 'hidden' : '';\n\t        });\n\t      }\n\t\n\t      // Builds styles incrementally for a given element.\n\t    }, {\n\t      key: 'getStyles',\n\t      value: function getStyles(el, index, inline) {\n\t        var propName = 'bm' + el.replace(el.charAt(0), el.charAt(0).toUpperCase());\n\t\n\t        // Set base styles.\n\t        var output = _baseStyles2['default'][el] ? this.getStyle(_baseStyles2['default'][el]) : {};\n\t\n\t        // Add animation-specific styles.\n\t        if (styles[el]) {\n\t          output = _extends({}, output, this.getStyle(styles[el], index + 1));\n\t        }\n\t\n\t        // Add custom styles.\n\t        if (this.props.styles[propName]) {\n\t          output = _extends({}, output, this.props.styles[propName]);\n\t        }\n\t\n\t        // Add element inline styles.\n\t        if (inline) {\n\t          output = _extends({}, output, inline);\n\t        }\n\t\n\t        return output;\n\t      }\n\t    }, {\n\t      key: 'getStyle',\n\t      value: function getStyle(style, index) {\n\t        var width = this.props.width;\n\t        if (typeof width !== 'string') width = width + 'px';\n\t\n\t        return style(this.state.isOpen, width, this.props.right, index);\n\t      }\n\t    }, {\n\t      key: 'listenForClose',\n\t      value: function listenForClose(e) {\n\t        e = e || window.event;\n\t\n\t        if (this.state.isOpen && (e.key === 'Escape' || e.keyCode === 27)) {\n\t          this.toggleMenu();\n\t        }\n\t      }\n\t    }, {\n\t      key: 'componentWillMount',\n\t      value: function componentWillMount() {\n\t        if (!styles) {\n\t          throw new Error('No styles supplied');\n\t        }\n\t\n\t        // Allow initial open state to be set by props.\n\t        if (this.props.isOpen) {\n\t          this.toggleMenu();\n\t        }\n\t      }\n\t    }, {\n\t      key: 'componentDidMount',\n\t      value: function componentDidMount() {\n\t        window.onkeydown = this.listenForClose.bind(this);\n\t\n\t        // Allow initial open state to be set by props for animations with wrapper elements.\n\t        if (this.props.isOpen) {\n\t          this.toggleMenu();\n\t        }\n\t      }\n\t    }, {\n\t      key: 'componentWillUnmount',\n\t      value: function componentWillUnmount() {\n\t        window.onkeydown = null;\n\t\n\t        this.applyWrapperStyles(false);\n\t      }\n\t    }, {\n\t      key: 'componentDidUpdate',\n\t      value: function componentDidUpdate() {\n\t        var _this2 = this;\n\t\n\t        if (styles.svg) {\n\t          (function () {\n\t            var morphShape = _reactDom2['default'].findDOMNode(_this2, 'bm-morph-shape');\n\t            var path = styles.svg.lib(morphShape).select('path');\n\t\n\t            if (_this2.state.isOpen) {\n\t              // Animate SVG path.\n\t              styles.svg.animate(path);\n\t            } else {\n\t              // Reset path (timeout ensures animation happens off screen).\n\t              setTimeout(function () {\n\t                path.attr('d', styles.svg.pathInitial);\n\t              }, 300);\n\t            }\n\t          })();\n\t        }\n\t      }\n\t    }, {\n\t      key: 'componentWillReceiveProps',\n\t      value: function componentWillReceiveProps(nextProps) {\n\t        if (typeof nextProps.isOpen !== 'undefined' && nextProps.isOpen !== this.state.isOpen) {\n\t          this.toggleMenu();\n\t        }\n\t      }\n\t    }, {\n\t      key: 'render',\n\t      value: function render() {\n\t        var _this3 = this;\n\t\n\t        return _react2['default'].createElement(\n\t          'div',\n\t          null,\n\t          !this.props.noOverlay && _react2['default'].createElement('div', {\n\t            className: 'bm-overlay ' + this.props.overlayClassName,\n\t            onClick: function () {\n\t              return _this3.toggleMenu();\n\t            },\n\t            style: this.getStyles('overlay')\n\t          }),\n\t          _react2['default'].createElement(\n\t            'div',\n\t            {\n\t              id: this.props.id,\n\t              className: 'bm-menu-wrap ' + this.props.className,\n\t              style: this.getStyles('menuWrap')\n\t            },\n\t            styles.svg && _react2['default'].createElement(\n\t              'div',\n\t              { className: 'bm-morph-shape ' + this.props.morphShapeClassName, style: this.getStyles('morphShape') },\n\t              _react2['default'].createElement(\n\t                'svg',\n\t                { width: '100%', height: '100%', viewBox: '0 0 100 800', preserveAspectRatio: 'none' },\n\t                _react2['default'].createElement('path', { d: styles.svg.pathInitial })\n\t              )\n\t            ),\n\t            _react2['default'].createElement(\n\t              'div',\n\t              { className: 'bm-menu ' + this.props.menuClassName, style: this.getStyles('menu') },\n\t              _react2['default'].createElement(\n\t                'nav',\n\t                { className: 'bm-item-list ' + this.props.itemListClassName, style: this.getStyles('itemList') },\n\t                _react2['default'].Children.map(this.props.children, function (item, index) {\n\t                  if (item) {\n\t                    var extraProps = {\n\t                      key: index,\n\t                      style: _this3.getStyles('item', index, item.props.style)\n\t                    };\n\t                    return _react2['default'].cloneElement(item, extraProps);\n\t                  }\n\t                })\n\t              )\n\t            ),\n\t            this.props.customCrossIcon !== false && _react2['default'].createElement(\n\t              'div',\n\t              { style: this.getStyles('closeButton') },\n\t              _react2['default'].createElement(_CrossIcon2['default'], {\n\t                onClick: function () {\n\t                  return _this3.toggleMenu();\n\t                },\n\t                styles: this.props.styles,\n\t                customIcon: this.props.customCrossIcon,\n\t                className: this.props.crossButtonClassName,\n\t                crossClassName: this.props.crossClassName\n\t              })\n\t            )\n\t          ),\n\t          this.props.customBurgerIcon !== false && _react2['default'].createElement(_BurgerIcon2['default'], {\n\t            onClick: function () {\n\t              return _this3.toggleMenu();\n\t            },\n\t            styles: this.props.styles,\n\t            customIcon: this.props.customBurgerIcon,\n\t            className: this.props.burgerButtonClassName,\n\t            barClassName: this.props.burgerBarClassName\n\t          })\n\t        );\n\t      }\n\t    }]);\n\t\n\t    return Menu;\n\t  })(_react.Component);\n\t\n\t  Menu.propTypes = {\n\t    bodyClassName: _propTypes2['default'].string,\n\t    burgerBarClassName: _propTypes2['default'].string,\n\t    burgerButtonClassName: _propTypes2['default'].string,\n\t    crossButtonClassName: _propTypes2['default'].string,\n\t    crossClassName: _propTypes2['default'].string,\n\t    customBurgerIcon: _propTypes2['default'].oneOfType([_propTypes2['default'].element, _propTypes2['default'].oneOf([false])]),\n\t    customCrossIcon: _propTypes2['default'].oneOfType([_propTypes2['default'].element, _propTypes2['default'].oneOf([false])]),\n\t    id: _propTypes2['default'].string,\n\t    isOpen: _propTypes2['default'].bool,\n\t    itemListClassName: _propTypes2['default'].string,\n\t    menuClassName: _propTypes2['default'].string,\n\t    morphShapeClassName: _propTypes2['default'].string,\n\t    noOverlay: _propTypes2['default'].bool,\n\t    onStateChange: _propTypes2['default'].func,\n\t    outerContainerId: styles && styles.outerContainer ? _propTypes2['default'].string.isRequired : _propTypes2['default'].string,\n\t    overlayClassName: _propTypes2['default'].string,\n\t    pageWrapId: styles && styles.pageWrap ? _propTypes2['default'].string.isRequired : _propTypes2['default'].string,\n\t    right: _propTypes2['default'].bool,\n\t    styles: _propTypes2['default'].object,\n\t    width: _propTypes2['default'].oneOfType([_propTypes2['default'].number, _propTypes2['default'].string])\n\t  };\n\t\n\t  Menu.defaultProps = {\n\t    bodyClassName: '',\n\t    burgerBarClassName: '',\n\t    burgerButtonClassName: '',\n\t    className: '',\n\t    crossButtonClassName: '',\n\t    crossClassName: '',\n\t    id: '',\n\t    itemListClassName: '',\n\t    menuClassName: '',\n\t    morphShapeClassName: '',\n\t    noOverlay: false,\n\t    onStateChange: function onStateChange() {},\n\t    outerContainerId: '',\n\t    overlayClassName: '',\n\t    pageWrapId: '',\n\t    styles: {},\n\t    width: 300\n\t  };\n\t\n\t  return Menu;\n\t};\n\t\n\tmodule.exports = exports['default'];\n\n/***/ }),\n\n/***/ \"./node_modules/react-burger-menu/lib/menus/bubble.js\":\n/***/ (function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t\n\tObject.defineProperty(exports, '__esModule', {\n\t  value: true\n\t});\n\t\n\tfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { 'default': obj }; }\n\t\n\tvar _snapsvgImporter = __webpack_require__(\"./node_modules/react-burger-menu/lib/snapsvgImporter.js\");\n\t\n\tvar _snapsvgImporter2 = _interopRequireDefault(_snapsvgImporter);\n\t\n\tvar _menuFactory = __webpack_require__(\"./node_modules/react-burger-menu/lib/menuFactory.js\");\n\t\n\tvar _menuFactory2 = _interopRequireDefault(_menuFactory);\n\t\n\tvar styles = {\n\t\n\t  svg: {\n\t    lib: _snapsvgImporter2['default'],\n\t    pathInitial: 'M-7.312,0H0c0,0,0,113.839,0,400c0,264.506,0,400,0,400h-7.312V0z',\n\t    pathOpen: 'M-7.312,0H15c0,0,66,113.339,66,399.5C81,664.006,15,800,15,800H-7.312V0z;M-7.312,0H100c0,0,0,113.839,0,400c0,264.506,0,400,0,400H-7.312V0z',\n\t    animate: function animate(path) {\n\t      var pos = 0;\n\t      var steps = this.pathOpen.split(';');\n\t      var stepsTotal = steps.length;\n\t      var mina = window.mina;\n\t\n\t      var nextStep = function nextStep() {\n\t        if (pos > stepsTotal - 1) return;\n\t\n\t        path.animate({ path: steps[pos] }, pos === 0 ? 400 : 500, pos === 0 ? mina.easein : mina.elastic, function () {\n\t          nextStep();\n\t        });\n\t\n\t        pos++;\n\t      };\n\t\n\t      nextStep();\n\t    }\n\t  },\n\t\n\t  morphShape: function morphShape(isOpen, width, right) {\n\t    return {\n\t      position: 'absolute',\n\t      width: '100%',\n\t      height: '100%',\n\t      right: right ? 'inherit' : 0,\n\t      left: right ? 0 : 'inherit',\n\t      MozTransform: right ? 'rotateY(180deg)' : 'rotateY(0deg)',\n\t      MsTransform: right ? 'rotateY(180deg)' : 'rotateY(0deg)',\n\t      OTransform: right ? 'rotateY(180deg)' : 'rotateY(0deg)',\n\t      WebkitTransform: right ? 'rotateY(180deg)' : 'rotateY(0deg)',\n\t      transform: right ? 'rotateY(180deg)' : 'rotateY(0deg)'\n\t    };\n\t  },\n\t\n\t  menuWrap: function menuWrap(isOpen, width, right) {\n\t    return {\n\t      MozTransform: isOpen ? 'translate3d(0, 0, 0)' : right ? 'translate3d(100%, 0, 0)' : 'translate3d(-100%, 0, 0)',\n\t      MsTransform: isOpen ? 'translate3d(0, 0, 0)' : right ? 'translate3d(100%, 0, 0)' : 'translate3d(-100%, 0, 0)',\n\t      OTransform: isOpen ? 'translate3d(0, 0, 0)' : right ? 'translate3d(100%, 0, 0)' : 'translate3d(-100%, 0, 0)',\n\t      WebkitTransform: isOpen ? 'translate3d(0, 0, 0)' : right ? 'translate3d(100%, 0, 0)' : 'translate3d(-100%, 0, 0)',\n\t      transform: isOpen ? 'translate3d(0, 0, 0)' : right ? 'translate3d(100%, 0, 0)' : 'translate3d(-100%, 0, 0)',\n\t      transition: isOpen ? 'transform 0.4s 0s' : 'transform 0.4s'\n\t    };\n\t  },\n\t\n\t  menu: function menu(isOpen, width, right) {\n\t    width -= 140;\n\t    return {\n\t      position: 'fixed',\n\t      MozTransform: isOpen ? '' : right ? 'translate3d(' + width + ', 0, 0)' : 'translate3d(-' + width + ', 0, 0)',\n\t      MsTransform: isOpen ? '' : right ? 'translate3d(' + width + ', 0, 0)' : 'translate3d(-' + width + ', 0, 0)',\n\t      OTransform: isOpen ? '' : right ? 'translate3d(' + width + ', 0, 0)' : 'translate3d(-' + width + ', 0, 0)',\n\t      WebkitTransform: isOpen ? '' : right ? 'translate3d(' + width + ', 0, 0)' : 'translate3d(-' + width + ', 0, 0)',\n\t      transform: isOpen ? '' : right ? 'translate3d(' + width + ', 0, 0)' : 'translate3d(-' + width + ', 0, 0)',\n\t      transition: isOpen ? 'opacity 0.1s 0.4s cubic-bezier(.17, .67, .1, 1.27), transform 0.1s 0.4s cubic-bezier(.17, .67, .1, 1.27)' : 'opacity 0s 0.3s cubic-bezier(.17, .67, .1, 1.27), transform 0s 0.3s cubic-bezier(.17, .67, .1, 1.27)',\n\t      opacity: isOpen ? 1 : 0\n\t    };\n\t  },\n\t\n\t  item: function item(isOpen, width, right, nthChild) {\n\t    width -= 140;\n\t    return {\n\t      MozTransform: isOpen ? 'translate3d(0, 0, 0)' : right ? 'translate3d(' + width + ', 0, 0)' : 'translate3d(-' + width + ', 0, 0)',\n\t      MsTransform: isOpen ? 'translate3d(0, 0, 0)' : right ? 'translate3d(' + width + ', 0, 0)' : 'translate3d(-' + width + ', 0, 0)',\n\t      OTransform: isOpen ? 'translate3d(0, 0, 0)' : right ? 'translate3d(' + width + ', 0, 0)' : 'translate3d(-' + width + ', 0, 0)',\n\t      WebkitTransform: isOpen ? 'translate3d(0, 0, 0)' : right ? 'translate3d(' + width + ', 0, 0)' : 'translate3d(-' + width + ', 0, 0)',\n\t      transform: isOpen ? 'translate3d(0, 0, 0)' : right ? 'translate3d(' + width + ', 0, 0)' : 'translate3d(-' + width + ', 0, 0)',\n\t      transition: isOpen ? 'opacity 0.3s 0.4s, transform 0.3s 0.4s' : 'opacity 0s 0.3s cubic-bezier(.17, .67, .1, 1.27), transform 0s 0.3s cubic-bezier(.17, .67, .1, 1.27)',\n\t      opacity: isOpen ? 1 : 0\n\t    };\n\t  },\n\t\n\t  closeButton: function closeButton(isOpen, width, right) {\n\t    width -= 140;\n\t    return {\n\t      MozTransform: isOpen ? 'translate3d(0, 0, 0)' : right ? 'translate3d(' + width + ', 0, 0)' : 'translate3d(-' + width + ', 0, 0)',\n\t      MsTransform: isOpen ? 'translate3d(0, 0, 0)' : right ? 'translate3d(' + width + ', 0, 0)' : 'translate3d(-' + width + ', 0, 0)',\n\t      OTransform: isOpen ? 'translate3d(0, 0, 0)' : right ? 'translate3d(' + width + ', 0, 0)' : 'translate3d(-' + width + ', 0, 0)',\n\t      WebkitTransform: isOpen ? 'translate3d(0, 0, 0)' : right ? 'translate3d(' + width + ', 0, 0)' : 'translate3d(-' + width + ', 0, 0)',\n\t      transform: isOpen ? 'translate3d(0, 0, 0)' : right ? 'translate3d(' + width + ', 0, 0)' : 'translate3d(-' + width + ', 0, 0)',\n\t      transition: isOpen ? 'opacity 0.3s 0.4s cubic-bezier(.17, .67, .1, 1.27), transform 0.3s 0.4s cubic-bezier(.17, .67, .1, 1.27)' : 'opacity 0s 0.3s cubic-bezier(.17, .67, .1, 1.27), transform 0s 0.3s cubic-bezier(.17, .67, .1, 1.27)',\n\t      opacity: isOpen ? 1 : 0\n\t    };\n\t  }\n\t};\n\t\n\texports['default'] = (0, _menuFactory2['default'])(styles);\n\tmodule.exports = exports['default'];\n\n/***/ }),\n\n/***/ \"./node_modules/react-burger-menu/lib/menus/elastic.js\":\n/***/ (function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t\n\tObject.defineProperty(exports, '__esModule', {\n\t  value: true\n\t});\n\t\n\tfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { 'default': obj }; }\n\t\n\tvar _snapsvgImporter = __webpack_require__(\"./node_modules/react-burger-menu/lib/snapsvgImporter.js\");\n\t\n\tvar _snapsvgImporter2 = _interopRequireDefault(_snapsvgImporter);\n\t\n\tvar _menuFactory = __webpack_require__(\"./node_modules/react-burger-menu/lib/menuFactory.js\");\n\t\n\tvar _menuFactory2 = _interopRequireDefault(_menuFactory);\n\t\n\tvar styles = {\n\t\n\t  svg: {\n\t    lib: _snapsvgImporter2['default'],\n\t    pathInitial: 'M-1,0h101c0,0-97.833,153.603-97.833,396.167C2.167,627.579,100,800,100,800H-1V0z',\n\t    pathOpen: 'M-1,0h101c0,0,0-1,0,395c0,404,0,405,0,405H-1V0z',\n\t    animate: function animate(path) {\n\t      path.animate({ path: this.pathOpen }, 400, window.mina.easeinout);\n\t    }\n\t  },\n\t\n\t  morphShape: function morphShape(isOpen, width, right) {\n\t    return {\n\t      position: 'absolute',\n\t      width: 120,\n\t      height: '100%',\n\t      right: right ? 'inherit' : 0,\n\t      left: right ? 0 : 'inherit',\n\t      MozTransform: right ? 'rotateY(180deg)' : '',\n\t      MsTransform: right ? 'rotateY(180deg)' : '',\n\t      OTransform: right ? 'rotateY(180deg)' : '',\n\t      WebkitTransform: right ? 'rotateY(180deg)' : '',\n\t      transform: right ? 'rotateY(180deg)' : ''\n\t    };\n\t  },\n\t\n\t  menuWrap: function menuWrap(isOpen, width, right) {\n\t    return {\n\t      MozTransform: isOpen ? 'translate3d(0, 0, 0)' : right ? 'translate3d(100%, 0, 0)' : 'translate3d(-100%, 0, 0)',\n\t      MsTransform: isOpen ? 'translate3d(0, 0, 0)' : right ? 'translate3d(100%, 0, 0)' : 'translate3d(-100%, 0, 0)',\n\t      OTransform: isOpen ? 'translate3d(0, 0, 0)' : right ? 'translate3d(100%, 0, 0)' : 'translate3d(-100%, 0, 0)',\n\t      WebkitTransform: isOpen ? 'translate3d(0, 0, 0)' : right ? 'translate3d(100%, 0, 0)' : 'translate3d(-100%, 0, 0)',\n\t      transform: isOpen ? 'translate3d(0, 0, 0)' : right ? 'translate3d(100%, 0, 0)' : 'translate3d(-100%, 0, 0)',\n\t      transition: 'all 0.3s'\n\t    };\n\t  },\n\t\n\t  menu: function menu(isOpen, width, right) {\n\t    return {\n\t      position: 'fixed',\n\t      right: right ? 0 : 'inherit',\n\t      width: 180,\n\t      whiteSpace: 'nowrap',\n\t      boxSizing: 'border-box',\n\t      overflow: 'visible'\n\t    };\n\t  },\n\t\n\t  itemList: function itemList(isOpen, width, right) {\n\t    if (right) {\n\t      return {\n\t        position: 'relative',\n\t        left: '-110px',\n\t        width: '170%',\n\t        overflow: 'auto'\n\t      };\n\t    }\n\t  },\n\t\n\t  pageWrap: function pageWrap(isOpen, width, right) {\n\t    return {\n\t      MozTransform: isOpen ? '' : right ? 'translate3d(-100px, 0, 0)' : 'translate3d(100px, 0, 0)',\n\t      MsTransform: isOpen ? '' : right ? 'translate3d(-100px, 0, 0)' : 'translate3d(100px, 0, 0)',\n\t      OTransform: isOpen ? '' : right ? 'translate3d(-100px, 0, 0)' : 'translate3d(100px, 0, 0)',\n\t      WebkitTransform: isOpen ? '' : right ? 'translate3d(-100px, 0, 0)' : 'translate3d(100px, 0, 0)',\n\t      transform: isOpen ? '' : right ? 'translate3d(-100px, 0, 0)' : 'translate3d(100px, 0, 0)',\n\t      transition: isOpen ? 'all 0.3s' : 'all 0.3s 0.1s'\n\t    };\n\t  },\n\t\n\t  outerContainer: function outerContainer(isOpen) {\n\t    return {\n\t      overflow: isOpen ? '' : 'hidden'\n\t    };\n\t  }\n\t};\n\t\n\texports['default'] = (0, _menuFactory2['default'])(styles);\n\tmodule.exports = exports['default'];\n\n/***/ }),\n\n/***/ \"./node_modules/react-burger-menu/lib/menus/fallDown.js\":\n/***/ (function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t\n\tObject.defineProperty(exports, '__esModule', {\n\t  value: true\n\t});\n\t\n\tfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { 'default': obj }; }\n\t\n\tvar _menuFactory = __webpack_require__(\"./node_modules/react-burger-menu/lib/menuFactory.js\");\n\t\n\tvar _menuFactory2 = _interopRequireDefault(_menuFactory);\n\t\n\tvar styles = {\n\t\n\t  menuWrap: function menuWrap(isOpen) {\n\t    return {\n\t      MozTransform: isOpen ? '' : 'translate3d(0, -100%, 0)',\n\t      MsTransform: isOpen ? '' : 'translate3d(0, -100%, 0)',\n\t      OTransform: isOpen ? '' : 'translate3d(0, -100%, 0)',\n\t      WebkitTransform: isOpen ? '' : 'translate3d(0, -100%, 0)',\n\t      transform: isOpen ? '' : 'translate3d(0, -100%, 0)',\n\t      transition: 'all 0.5s ease-in-out'\n\t    };\n\t  },\n\t\n\t  pageWrap: function pageWrap(isOpen, width, right) {\n\t    return {\n\t      MozTransform: isOpen ? '' : right ? 'translate3d(-' + width + ', 0, 0)' : 'translate3d(' + width + ', 0, 0)',\n\t      MsTransform: isOpen ? '' : right ? 'translate3d(-' + width + ', 0, 0)' : 'translate3d(' + width + ', 0, 0)',\n\t      OTransform: isOpen ? '' : right ? 'translate3d(-' + width + ', 0, 0)' : 'translate3d(' + width + ', 0, 0)',\n\t      WebkitTransform: isOpen ? '' : right ? 'translate3d(-' + width + ', 0, 0)' : 'translate3d(' + width + ', 0, 0)',\n\t      transform: isOpen ? '' : right ? 'translate3d(-' + width + ', 0, 0)' : 'translate3d(' + width + ', 0, 0)',\n\t      transition: 'all 0.5s'\n\t    };\n\t  },\n\t\n\t  outerContainer: function outerContainer(isOpen) {\n\t    return {\n\t      perspective: '1500px',\n\t      perspectiveOrigin: '0% 50%',\n\t      overflow: isOpen ? '' : 'hidden'\n\t    };\n\t  }\n\t};\n\t\n\texports['default'] = (0, _menuFactory2['default'])(styles);\n\tmodule.exports = exports['default'];\n\n/***/ }),\n\n/***/ \"./node_modules/react-burger-menu/lib/menus/push.js\":\n/***/ (function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t\n\tObject.defineProperty(exports, '__esModule', {\n\t  value: true\n\t});\n\t\n\tfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { 'default': obj }; }\n\t\n\tvar _menuFactory = __webpack_require__(\"./node_modules/react-burger-menu/lib/menuFactory.js\");\n\t\n\tvar _menuFactory2 = _interopRequireDefault(_menuFactory);\n\t\n\tvar styles = {\n\t\n\t  pageWrap: function pageWrap(isOpen, width, right) {\n\t    return {\n\t      MozTransform: isOpen ? '' : right ? 'translate3d(-' + width + ', 0, 0)' : 'translate3d(' + width + ', 0, 0)',\n\t      MsTransform: isOpen ? '' : right ? 'translate3d(-' + width + ', 0, 0)' : 'translate3d(' + width + ', 0, 0)',\n\t      OTransform: isOpen ? '' : right ? 'translate3d(-' + width + ', 0, 0)' : 'translate3d(' + width + ', 0, 0)',\n\t      WebkitTransform: isOpen ? '' : right ? 'translate3d(-' + width + ', 0, 0)' : 'translate3d(' + width + ', 0, 0)',\n\t      transform: isOpen ? '' : right ? 'translate3d(-' + width + ', 0, 0)' : 'translate3d(' + width + ', 0, 0)',\n\t      transition: 'all 0.5s'\n\t    };\n\t  },\n\t\n\t  outerContainer: function outerContainer(isOpen) {\n\t    return {\n\t      overflow: isOpen ? '' : 'hidden'\n\t    };\n\t  }\n\t};\n\t\n\texports['default'] = (0, _menuFactory2['default'])(styles);\n\tmodule.exports = exports['default'];\n\n/***/ }),\n\n/***/ \"./node_modules/react-burger-menu/lib/menus/pushRotate.js\":\n/***/ (function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t\n\tObject.defineProperty(exports, '__esModule', {\n\t  value: true\n\t});\n\t\n\tfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { 'default': obj }; }\n\t\n\tvar _menuFactory = __webpack_require__(\"./node_modules/react-burger-menu/lib/menuFactory.js\");\n\t\n\tvar _menuFactory2 = _interopRequireDefault(_menuFactory);\n\t\n\tvar styles = {\n\t\n\t  pageWrap: function pageWrap(isOpen, width, right) {\n\t    return {\n\t      MozTransform: isOpen ? '' : right ? 'translate3d(-' + width + ', 0, 0) rotateY(15deg)' : 'translate3d(' + width + ', 0, 0) rotateY(-15deg)',\n\t      MsTransform: isOpen ? '' : right ? 'translate3d(-' + width + ', 0, 0) rotateY(15deg)' : 'translate3d(' + width + ', 0, 0) rotateY(-15deg)',\n\t      OTransform: isOpen ? '' : right ? 'translate3d(-' + width + ', 0, 0) rotateY(15deg)' : 'translate3d(' + width + ', 0, 0) rotateY(-15deg)',\n\t      WebkitTransform: isOpen ? '' : right ? 'translate3d(-' + width + ', 0, 0) rotateY(15deg)' : 'translate3d(' + width + ', 0, 0) rotateY(-15deg)',\n\t      transform: isOpen ? '' : right ? 'translate3d(-' + width + ', 0, 0) rotateY(15deg)' : 'translate3d(' + width + ', 0, 0) rotateY(-15deg)',\n\t      transformOrigin: right ? '100% 50%' : '0% 50%',\n\t      transformStyle: 'preserve-3d',\n\t      transition: 'all 0.5s'\n\t    };\n\t  },\n\t\n\t  outerContainer: function outerContainer(isOpen) {\n\t    return {\n\t      perspective: '1500px',\n\t      overflow: isOpen ? '' : 'hidden'\n\t    };\n\t  }\n\t};\n\t\n\texports['default'] = (0, _menuFactory2['default'])(styles);\n\tmodule.exports = exports['default'];\n\n/***/ }),\n\n/***/ \"./node_modules/react-burger-menu/lib/menus/scaleDown.js\":\n/***/ (function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t\n\tObject.defineProperty(exports, '__esModule', {\n\t  value: true\n\t});\n\t\n\tfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { 'default': obj }; }\n\t\n\tvar _menuFactory = __webpack_require__(\"./node_modules/react-burger-menu/lib/menuFactory.js\");\n\t\n\tvar _menuFactory2 = _interopRequireDefault(_menuFactory);\n\t\n\tvar styles = {\n\t\n\t  pageWrap: function pageWrap(isOpen, width) {\n\t    return {\n\t      MozTransform: isOpen ? '' : 'translate3d(0, 0, -' + width + ')',\n\t      MsTransform: isOpen ? '' : 'translate3d(0, 0, -' + width + ')',\n\t      OTransform: isOpen ? '' : 'translate3d(0, 0, -' + width + ')',\n\t      WebkitTransform: isOpen ? '' : 'translate3d(0, 0, -' + width + ')',\n\t      transform: isOpen ? '' : 'translate3d(0, 0, -' + width + ')',\n\t      transformOrigin: '100%',\n\t      transformStyle: 'preserve-3d',\n\t      transition: 'all 0.5s'\n\t    };\n\t  },\n\t\n\t  outerContainer: function outerContainer() {\n\t    return {\n\t      perspective: '1500px'\n\t    };\n\t  }\n\t};\n\t\n\texports['default'] = (0, _menuFactory2['default'])(styles);\n\tmodule.exports = exports['default'];\n\n/***/ }),\n\n/***/ \"./node_modules/react-burger-menu/lib/menus/scaleRotate.js\":\n/***/ (function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t\n\tObject.defineProperty(exports, '__esModule', {\n\t  value: true\n\t});\n\t\n\tfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { 'default': obj }; }\n\t\n\tvar _menuFactory = __webpack_require__(\"./node_modules/react-burger-menu/lib/menuFactory.js\");\n\t\n\tvar _menuFactory2 = _interopRequireDefault(_menuFactory);\n\t\n\tvar styles = {\n\t\n\t  pageWrap: function pageWrap(isOpen, width, right) {\n\t    return {\n\t      MozTransform: isOpen ? '' : right ? 'translate3d(-100px, 0, -600px) rotateY(20deg)' : 'translate3d(100px, 0, -600px) rotateY(-20deg)',\n\t      MsTransform: isOpen ? '' : right ? 'translate3d(-100px, 0, -600px) rotateY(20deg)' : 'translate3d(100px, 0, -600px) rotateY(-20deg)',\n\t      OTransform: isOpen ? '' : right ? 'translate3d(-100px, 0, -600px) rotateY(20deg)' : 'translate3d(100px, 0, -600px) rotateY(-20deg)',\n\t      WebkitTransform: isOpen ? '' : right ? 'translate3d(-100px, 0, -600px) rotateY(20deg)' : 'translate3d(100px, 0, -600px) rotateY(-20deg)',\n\t      transform: isOpen ? '' : right ? 'translate3d(-100px, 0, -600px) rotateY(20deg)' : 'translate3d(100px, 0, -600px) rotateY(-20deg)',\n\t      transformStyle: 'preserve-3d',\n\t      transition: 'all 0.5s',\n\t      overflow: isOpen ? '' : 'hidden'\n\t    };\n\t  },\n\t\n\t  outerContainer: function outerContainer(isOpen) {\n\t    return {\n\t      perspective: '1500px',\n\t      overflow: isOpen ? '' : 'hidden'\n\t    };\n\t  }\n\t};\n\t\n\texports['default'] = (0, _menuFactory2['default'])(styles);\n\tmodule.exports = exports['default'];\n\n/***/ }),\n\n/***/ \"./node_modules/react-burger-menu/lib/menus/slide.js\":\n/***/ (function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t\n\tObject.defineProperty(exports, '__esModule', {\n\t  value: true\n\t});\n\t\n\tfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { 'default': obj }; }\n\t\n\tvar _menuFactory = __webpack_require__(\"./node_modules/react-burger-menu/lib/menuFactory.js\");\n\t\n\tvar _menuFactory2 = _interopRequireDefault(_menuFactory);\n\t\n\tvar styles = {};\n\t\n\texports['default'] = (0, _menuFactory2['default'])(styles);\n\tmodule.exports = exports['default'];\n\n/***/ }),\n\n/***/ \"./node_modules/react-burger-menu/lib/menus/stack.js\":\n/***/ (function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t\n\tObject.defineProperty(exports, '__esModule', {\n\t  value: true\n\t});\n\t\n\tfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { 'default': obj }; }\n\t\n\tvar _menuFactory = __webpack_require__(\"./node_modules/react-burger-menu/lib/menuFactory.js\");\n\t\n\tvar _menuFactory2 = _interopRequireDefault(_menuFactory);\n\t\n\tvar styles = {\n\t\n\t  menuWrap: function menuWrap(isOpen, width, right) {\n\t    return {\n\t      MozTransform: isOpen ? '' : right ? 'translate3d(' + width + ', 0, 0)' : 'translate3d(-' + width + ', 0, 0)',\n\t      MsTransform: isOpen ? '' : right ? 'translate3d(' + width + ', 0, 0)' : 'translate3d(-' + width + ', 0, 0)',\n\t      OTransform: isOpen ? '' : right ? 'translate3d(' + width + ', 0, 0)' : 'translate3d(-' + width + ', 0, 0)',\n\t      WebkitTransform: isOpen ? '' : right ? 'translate3d(' + width + ', 0, 0)' : 'translate3d(-' + width + ', 0, 0)',\n\t      transform: isOpen ? '' : right ? 'translate3d(' + width + ', 0, 0)' : 'translate3d(-' + width + ', 0, 0)',\n\t      transition: isOpen ? 'transform 0.8s cubic-bezier(0.7, 0, 0.3, 1)' : 'transform 0.4s cubic-bezier(0.7, 0, 0.3, 1)'\n\t    };\n\t  },\n\t\n\t  item: function item(isOpen, width, right, nthChild) {\n\t    return {\n\t      MozTransform: isOpen ? '' : 'translate3d(0, ' + nthChild * 500 + 'px, 0)',\n\t      MsTransform: isOpen ? '' : 'translate3d(0, ' + nthChild * 500 + 'px, 0)',\n\t      OTransform: isOpen ? '' : 'translate3d(0, ' + nthChild * 500 + 'px, 0)',\n\t      WebkitTransform: isOpen ? '' : 'translate3d(0, ' + nthChild * 500 + 'px, 0)',\n\t      transform: isOpen ? '' : 'translate3d(0, ' + nthChild * 500 + 'px, 0)',\n\t      transition: isOpen ? 'transform 0.8s cubic-bezier(0.7, 0, 0.3, 1)' : 'transform 0s 0.2s cubic-bezier(0.7, 0, 0.3, 1)'\n\t    };\n\t  }\n\t};\n\t\n\texports['default'] = (0, _menuFactory2['default'])(styles);\n\tmodule.exports = exports['default'];\n\n/***/ }),\n\n/***/ \"./node_modules/react-burger-menu/lib/snapsvgImporter.js\":\n/***/ (function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t\n\tObject.defineProperty(exports, '__esModule', {\n\t  value: true\n\t});\n\t\n\texports['default'] = function () {\n\t  var Snap = undefined;\n\t  try {\n\t    Snap = __webpack_require__(\"./node_modules/snapsvg-cjs/dist/snap.svg-cjs.js\");\n\t  } finally {\n\t    return Snap;\n\t  }\n\t};\n\t\n\tmodule.exports = exports['default'];\n\n/***/ }),\n\n/***/ \"./node_modules/react-component-width-mixin/index.js\":\n/***/ (function(module, exports, __webpack_require__) {\n\n\tvar ReactDOM = __webpack_require__(\"./node_modules/react-dom/index.js\");\n\tvar elementResizeEvent = __webpack_require__(\"./node_modules/element-resize-event/index.js\");\n\t\n\tmodule.exports = {\n\t  getInitialState: function() {\n\t    if (this.props.initialComponentWidth !== undefined && this.props.initialComponentWidth !== null) {\n\t      return {\n\t        componentWidth: this.props.initialComponentWidth\n\t      };\n\t    } else {\n\t      return {};\n\t    }\n\t  },\n\t  // Add our resize sensor.\n\t  componentDidMount: function() {\n\t    this.setState({\n\t      componentWidth: ReactDOM.findDOMNode(this).getBoundingClientRect().width\n\t    });\n\t    elementResizeEvent(ReactDOM.findDOMNode(this), this.onResize);\n\t  },\n\t  // When the DOM updates, check that our resize sensor is still there.\n\t  componentDidUpdate: function() {\n\t    if (0 === ReactDOM.findDOMNode(this).getElementsByClassName('resize-sensor').length) {\n\t      elementResizeEvent(ReactDOM.findDOMNode(this), this.onResize);\n\t    }\n\t  },\n\t  onResize: function() {\n\t    this.setState({\n\t      componentWidth: ReactDOM.findDOMNode(this).getBoundingClientRect().width\n\t    });\n\t  }\n\t};\n\n\n/***/ }),\n\n/***/ \"./node_modules/react-icon-base/lib/index.js\":\n/***/ (function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t\n\tObject.defineProperty(exports, \"__esModule\", {\n\t  value: true\n\t});\n\t\n\tvar _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };\n\t\n\tvar _react = __webpack_require__(\"./node_modules/react/react.js\");\n\t\n\tvar _react2 = _interopRequireDefault(_react);\n\t\n\tvar _propTypes = __webpack_require__(\"./node_modules/prop-types/index.js\");\n\t\n\tvar _propTypes2 = _interopRequireDefault(_propTypes);\n\t\n\tfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\t\n\tfunction _objectWithoutProperties(obj, keys) { var target = {}; for (var i in obj) { if (keys.indexOf(i) >= 0) continue; if (!Object.prototype.hasOwnProperty.call(obj, i)) continue; target[i] = obj[i]; } return target; }\n\t\n\tvar IconBase = function IconBase(_ref, _ref2) {\n\t  var children = _ref.children;\n\t  var color = _ref.color;\n\t  var size = _ref.size;\n\t  var style = _ref.style;\n\t\n\t  var props = _objectWithoutProperties(_ref, ['children', 'color', 'size', 'style']);\n\t\n\t  var _ref2$reactIconBase = _ref2.reactIconBase;\n\t  var reactIconBase = _ref2$reactIconBase === undefined ? {} : _ref2$reactIconBase;\n\t\n\t  var computedSize = size || reactIconBase.size || '1em';\n\t  return _react2.default.createElement('svg', _extends({\n\t    children: children,\n\t    fill: 'currentColor',\n\t    preserveAspectRatio: 'xMidYMid meet',\n\t    height: computedSize,\n\t    width: computedSize\n\t  }, reactIconBase, props, {\n\t    style: _extends({\n\t      verticalAlign: 'middle',\n\t      color: color || reactIconBase.color\n\t    }, reactIconBase.style || {}, style)\n\t  }));\n\t};\n\t\n\tIconBase.propTypes = {\n\t  color: _propTypes2.default.string,\n\t  size: _propTypes2.default.oneOfType([_propTypes2.default.string, _propTypes2.default.number]),\n\t  style: _propTypes2.default.object\n\t};\n\t\n\tIconBase.contextTypes = {\n\t  reactIconBase: _propTypes2.default.shape(IconBase.propTypes)\n\t};\n\t\n\texports.default = IconBase;\n\tmodule.exports = exports['default'];\n\n/***/ }),\n\n/***/ \"./node_modules/react-icons/lib/fa/arrow-left.js\":\n/***/ (function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t\n\tObject.defineProperty(exports, \"__esModule\", {\n\t    value: true\n\t});\n\t\n\tvar _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };\n\t\n\tvar _react = __webpack_require__(\"./node_modules/react/react.js\");\n\t\n\tvar _react2 = _interopRequireDefault(_react);\n\t\n\tvar _reactIconBase = __webpack_require__(\"./node_modules/react-icon-base/lib/index.js\");\n\t\n\tvar _reactIconBase2 = _interopRequireDefault(_reactIconBase);\n\t\n\tfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\t\n\tvar FaArrowLeft = function FaArrowLeft(props) {\n\t    return _react2.default.createElement(\n\t        _reactIconBase2.default,\n\t        _extends({ viewBox: '0 0 40 40' }, props),\n\t        _react2.default.createElement(\n\t            'g',\n\t            null,\n\t            _react2.default.createElement('path', { d: 'm36.3 20v2.9q0 1.1-0.7 2t-1.9 0.8h-15.7l6.5 6.6q0.9 0.8 0.9 2t-0.9 2l-1.7 1.7q-0.8 0.8-2 0.8-1.1 0-2-0.8l-14.5-14.6q-0.9-0.8-0.9-2 0-1.1 0.9-2l14.5-14.5q0.8-0.9 2-0.9 1.2 0 2 0.9l1.7 1.6q0.9 0.9 0.9 2.1t-0.9 2l-6.5 6.5h15.7q1.1 0 1.9 0.9t0.7 2z' })\n\t        )\n\t    );\n\t};\n\t\n\texports.default = FaArrowLeft;\n\tmodule.exports = exports['default'];\n\n/***/ }),\n\n/***/ \"./node_modules/react-page-width/dist/index.js\":\n/***/ (function(module, exports, __webpack_require__) {\n\n\t// Generated by CoffeeScript 1.9.2\n\tvar resizeListener;\n\t\n\tresizeListener = __webpack_require__(\"./node_modules/react-page-width/dist/resizeListener.js\");\n\t\n\tmodule.exports = {\n\t  getInitialState: function() {\n\t    if (this.props.initialPageWidth) {\n\t      return {\n\t        pageWidth: this.props.initialPageWidth\n\t      };\n\t    } else {\n\t      return {};\n\t    }\n\t  },\n\t  componentDidMount: function() {\n\t    return resizeListener.on(this.onResize);\n\t  },\n\t  componentWillUnmount: function() {\n\t    return resizeListener.off(this.onResize);\n\t  },\n\t  onResize: function(pageWidth) {\n\t    return this.setState({\n\t      pageWidth: pageWidth\n\t    });\n\t  }\n\t};\n\n\n/***/ }),\n\n/***/ \"./node_modules/react-page-width/dist/resizeListener.js\":\n/***/ (function(module, exports, __webpack_require__) {\n\n\t// Generated by CoffeeScript 1.9.2\n\tvar currentWidth, onResize, raf, subscribers, ticking, update;\n\t\n\traf = __webpack_require__(\"./node_modules/raf/index.js\");\n\t\n\tcurrentWidth = void 0;\n\t\n\tsubscribers = [];\n\t\n\tticking = false;\n\t\n\tif (typeof window !== \"undefined\" && window !== null) {\n\t  currentWidth = window.innerWidth;\n\t}\n\t\n\tonResize = function() {\n\t  if (!ticking) {\n\t    ticking = true;\n\t    return raf(update);\n\t  }\n\t};\n\t\n\tupdate = function() {\n\t  var i, len, subscriber;\n\t  currentWidth = window.innerWidth;\n\t  for (i = 0, len = subscribers.length; i < len; i++) {\n\t    subscriber = subscribers[i];\n\t    subscriber(currentWidth);\n\t  }\n\t  return ticking = false;\n\t};\n\t\n\tif (typeof window !== \"undefined\" && window !== null) {\n\t  window.addEventListener(\"resize\", onResize);\n\t}\n\t\n\tmodule.exports = {\n\t  on: function(subscribeFn) {\n\t    subscribeFn(currentWidth);\n\t    return subscribers.push(subscribeFn);\n\t  },\n\t  off: function(subscribeFn) {\n\t    return subscribers.splice(subscribers.indexOf(subscribeFn), 1);\n\t  }\n\t};\n\n\n/***/ }),\n\n/***/ \"./node_modules/react-responsive-grid/dist/components/Breakpoint.js\":\n/***/ (function(module, exports, __webpack_require__) {\n\n\t// Generated by CoffeeScript 1.10.0\n\tvar ComponentWidthComponent, PageWidthComponent, PageWidthMixin, React, componentWidthMixin, objectAssign;\n\t\n\tReact = __webpack_require__(\"./node_modules/react/react.js\");\n\t\n\tcomponentWidthMixin = __webpack_require__(\"./node_modules/react-component-width-mixin/index.js\");\n\t\n\tPageWidthMixin = __webpack_require__(\"./node_modules/react-page-width/dist/index.js\");\n\t\n\tobjectAssign = __webpack_require__(\"./node_modules/object-assign/index.js\");\n\t\n\tComponentWidthComponent = React.createClass({\n\t  displayName: \"Breakpoint\",\n\t  mixins: [componentWidthMixin],\n\t  propTypes: {\n\t    minWidth: React.PropTypes.number,\n\t    maxWidth: React.PropTypes.number\n\t  },\n\t  getDefaultProps: function() {\n\t    return {\n\t      minWidth: 0,\n\t      maxWidth: 1000000000000000000000\n\t    };\n\t  },\n\t  renderChildren: function() {\n\t    return React.Children.map(this.props.children, (function(_this) {\n\t      return function(child) {\n\t        var ref;\n\t        if ((child != null ? (ref = child.type) != null ? ref.displayName : void 0 : void 0) === \"Span\") {\n\t          return React.cloneElement(child, {\n\t            context: _this.props.context\n\t          });\n\t        } else {\n\t          return child;\n\t        }\n\t      };\n\t    })(this));\n\t  },\n\t  render: function() {\n\t    var props, ref;\n\t    props = objectAssign({}, this.props);\n\t    delete props.maxWidth;\n\t    delete props.minWidth;\n\t    delete props.widthMethod;\n\t    if (this.state.componentWidth) {\n\t      if ((this.props.minWidth <= (ref = this.state.componentWidth) && ref < this.props.maxWidth)) {\n\t        return React.createElement(\"div\", Object.assign({}, props), this.renderChildren());\n\t      } else {\n\t        return React.createElement(\"div\", null);\n\t      }\n\t    } else {\n\t      return React.createElement(\"div\", null);\n\t    }\n\t  }\n\t});\n\t\n\tPageWidthComponent = React.createClass({\n\t  displayName: \"Breakpoint\",\n\t  mixins: [PageWidthMixin],\n\t  propTypes: {\n\t    minWidth: React.PropTypes.number,\n\t    maxWidth: React.PropTypes.number\n\t  },\n\t  getDefaultProps: function() {\n\t    return {\n\t      minWidth: 0,\n\t      maxWidth: 1000000000000000000000\n\t    };\n\t  },\n\t  renderChildren: function() {\n\t    return React.Children.map(this.props.children, (function(_this) {\n\t      return function(child) {\n\t        var ref;\n\t        if (((ref = child.type) != null ? ref.displayName : void 0) === \"Span\") {\n\t          return React.cloneElement(child, {\n\t            context: _this.props.context\n\t          });\n\t        } else {\n\t          return child;\n\t        }\n\t      };\n\t    })(this));\n\t  },\n\t  render: function() {\n\t    var props, ref;\n\t    props = objectAssign({}, this.props);\n\t    delete props.maxWidth;\n\t    delete props.minWidth;\n\t    delete props.widthMethod;\n\t    if (this.state.pageWidth) {\n\t      if ((this.props.minWidth <= (ref = this.state.pageWidth) && ref < this.props.maxWidth)) {\n\t        return React.createElement(\"div\", Object.assign({}, props), this.renderChildren());\n\t      } else {\n\t        return React.createElement(\"div\", null);\n\t      }\n\t    } else {\n\t      return React.createElement(\"div\", null);\n\t    }\n\t  }\n\t});\n\t\n\tmodule.exports = React.createClass({\n\t  displayName: 'Breakpoint',\n\t  propTypes: {\n\t    widthMethod: React.PropTypes.string.isRequired,\n\t    minWidth: React.PropTypes.number,\n\t    maxWidth: React.PropTypes.number\n\t  },\n\t  getDefaultProps: function() {\n\t    return {\n\t      widthMethod: 'pageWidth'\n\t    };\n\t  },\n\t  render: function() {\n\t    if (this.props.widthMethod === \"pageWidth\") {\n\t      return React.createElement(PageWidthComponent, Object.assign({}, this.props));\n\t    } else if (this.props.widthMethod === \"componentWidth\") {\n\t      return React.createElement(ComponentWidthComponent, Object.assign({}, this.props));\n\t    }\n\t  }\n\t});\n\n\n/***/ }),\n\n/***/ \"./node_modules/react-responsive-grid/dist/components/Container.js\":\n/***/ (function(module, exports, __webpack_require__) {\n\n\t// Generated by CoffeeScript 1.10.0\n\tvar React, objectAssign;\n\t\n\tReact = __webpack_require__(\"./node_modules/react/react.js\");\n\t\n\tobjectAssign = __webpack_require__(\"./node_modules/object-assign/index.js\");\n\t\n\tmodule.exports = React.createClass({\n\t  displayName: \"Container\",\n\t  render: function() {\n\t    var children, defaultStyles, props, styles;\n\t    defaultStyles = {\n\t      maxWidth: '960px',\n\t      marginLeft: 'auto',\n\t      marginRight: 'auto'\n\t    };\n\t    styles = objectAssign(defaultStyles, this.props.style);\n\t    children = this.props.children;\n\t    props = objectAssign({}, this.props);\n\t    delete props.children;\n\t    delete props.style;\n\t    return React.createElement(\"div\", Object.assign({}, props, {\n\t      \"style\": styles\n\t    }), children, React.createElement(\"span\", {\n\t      \"style\": {\n\t        display: 'block',\n\t        clear: 'both'\n\t      }\n\t    }, ' '));\n\t  }\n\t});\n\n\n/***/ }),\n\n/***/ \"./node_modules/react-responsive-grid/dist/components/Grid.js\":\n/***/ (function(module, exports, __webpack_require__) {\n\n\t// Generated by CoffeeScript 1.10.0\n\tvar React, objectAssign;\n\t\n\tReact = __webpack_require__(\"./node_modules/react/react.js\");\n\t\n\tobjectAssign = __webpack_require__(\"./node_modules/object-assign/index.js\");\n\t\n\tmodule.exports = React.createClass({\n\t  displayName: \"Grid\",\n\t  propTypes: {\n\t    columns: React.PropTypes.number,\n\t    gutterRatio: React.PropTypes.number\n\t  },\n\t  getDefaultProps: function() {\n\t    return {\n\t      columns: 12,\n\t      gutterRatio: 1 / 4\n\t    };\n\t  },\n\t  renderChildren: function() {\n\t    return React.Children.map(this.props.children, (function(_this) {\n\t      return function(child) {\n\t        var ref, ref1;\n\t        if ((ref = (ref1 = child.type) != null ? ref1.displayName : void 0) === \"Breakpoint\" || ref === \"Span\") {\n\t          return React.cloneElement(child, {\n\t            context: {\n\t              columns: _this.props.columns,\n\t              gutterRatio: _this.props.gutterRatio\n\t            }\n\t          });\n\t        } else {\n\t          return child;\n\t        }\n\t      };\n\t    })(this));\n\t  },\n\t  render: function() {\n\t    var props;\n\t    props = objectAssign({}, this.props);\n\t    delete props.gutterRatio;\n\t    delete props.columns;\n\t    return React.createElement(\"div\", Object.assign({}, props), this.renderChildren(), React.createElement(\"span\", {\n\t      \"style\": {\n\t        display: 'block',\n\t        clear: 'both'\n\t      }\n\t    }, ' '));\n\t  }\n\t});\n\n\n/***/ }),\n\n/***/ \"./node_modules/react-responsive-grid/dist/components/Span.js\":\n/***/ (function(module, exports, __webpack_require__) {\n\n\t// Generated by CoffeeScript 1.10.0\n\tvar React, objectAssign, spanCalculate;\n\t\n\tReact = __webpack_require__(\"./node_modules/react/react.js\");\n\t\n\tobjectAssign = __webpack_require__(\"./node_modules/object-assign/index.js\");\n\t\n\tspanCalculate = __webpack_require__(\"./node_modules/react-responsive-grid/dist/utils/SpanCalculate.js\");\n\t\n\tmodule.exports = React.createClass({\n\t  displayName: \"Span\",\n\t  propTypes: {\n\t    context: React.PropTypes.object,\n\t    columns: React.PropTypes.number,\n\t    at: React.PropTypes.number,\n\t    pre: React.PropTypes.number,\n\t    post: React.PropTypes.number,\n\t    squish: React.PropTypes.number,\n\t    last: React.PropTypes.bool,\n\t    \"break\": React.PropTypes.bool\n\t  },\n\t  getDefaultProps: function() {\n\t    return {\n\t      at: 0,\n\t      pre: 0,\n\t      post: 0,\n\t      squish: 0,\n\t      last: false,\n\t      first: false,\n\t      \"break\": false\n\t    };\n\t  },\n\t  renderChildren: function() {\n\t    return React.Children.map(this.props.children, (function(_this) {\n\t      return function(child) {\n\t        var ref;\n\t        if ((child != null ? (ref = child.type) != null ? ref.displayName : void 0 : void 0) === \"Span\") {\n\t          return React.cloneElement(child, {\n\t            context: {\n\t              columns: _this.props.columns,\n\t              gutterRatio: _this.props.context.gutterRatio\n\t            }\n\t          });\n\t        } else {\n\t          return child;\n\t        }\n\t      };\n\t    })(this));\n\t  },\n\t  render: function() {\n\t    var props, style;\n\t    style = spanCalculate({\n\t      contextColumns: this.props.context.columns,\n\t      gutterRatio: this.props.context.gutterRatio,\n\t      columns: this.props.columns,\n\t      at: this.props.at,\n\t      pre: this.props.pre,\n\t      post: this.props.post,\n\t      squish: this.props.squish,\n\t      last: this.props.last,\n\t      \"break\": this.props[\"break\"]\n\t    });\n\t    style = objectAssign(style, this.props.style);\n\t    props = objectAssign({}, this.props, {\n\t      \"style\": style\n\t    });\n\t    delete props.at;\n\t    delete props[\"break\"];\n\t    delete props.columns;\n\t    delete props.context;\n\t    delete props.first;\n\t    delete props.last;\n\t    delete props.post;\n\t    delete props.pre;\n\t    delete props.squish;\n\t    delete props.style;\n\t    return React.createElement(\"div\", Object.assign({}, props, {\n\t      \"style\": style\n\t    }), this.renderChildren(), React.createElement(\"span\", {\n\t      \"style\": {\n\t        display: 'block',\n\t        clear: 'both'\n\t      }\n\t    }, ' '));\n\t  }\n\t});\n\n\n/***/ }),\n\n/***/ \"./node_modules/react-responsive-grid/dist/index.js\":\n/***/ (function(module, exports, __webpack_require__) {\n\n\t// Generated by CoffeeScript 1.10.0\n\texports.Container = __webpack_require__(\"./node_modules/react-responsive-grid/dist/components/Container.js\");\n\t\n\texports.Grid = __webpack_require__(\"./node_modules/react-responsive-grid/dist/components/Grid.js\");\n\t\n\texports.Breakpoint = __webpack_require__(\"./node_modules/react-responsive-grid/dist/components/Breakpoint.js\");\n\t\n\texports.Span = __webpack_require__(\"./node_modules/react-responsive-grid/dist/components/Span.js\");\n\n\n/***/ }),\n\n/***/ \"./node_modules/react-responsive-grid/dist/utils/SpanCalculate.js\":\n/***/ (function(module, exports, __webpack_require__) {\n\n\t// Generated by CoffeeScript 1.10.0\n\tvar objectAssign;\n\t\n\tobjectAssign = __webpack_require__(\"./node_modules/object-assign/index.js\");\n\t\n\tmodule.exports = function(options) {\n\t  var calcSpacing, calcSpanWidth, defaults, float, gutterWidth, marginLeft, marginRight, n, ops, width;\n\t  defaults = {\n\t    columns: 3,\n\t    at: 0,\n\t    pre: 0,\n\t    post: 0,\n\t    squish: 0,\n\t    contextColumns: 12,\n\t    gutterRatio: 1 / 4,\n\t    first: false,\n\t    last: false\n\t  };\n\t  ops = objectAssign(defaults, options);\n\t  n = 100 / (ops.contextColumns + ((ops.contextColumns - 1) * ops.gutterRatio));\n\t  gutterWidth = ops.gutterRatio * n;\n\t  calcSpanWidth = function(numColumns) {\n\t    return n * numColumns + gutterWidth * (numColumns - 1);\n\t  };\n\t  calcSpacing = function(numColumns) {\n\t    if (numColumns === 0) {\n\t      return 0;\n\t    } else {\n\t      return calcSpanWidth(numColumns) + gutterWidth;\n\t    }\n\t  };\n\t  width = calcSpanWidth(ops.columns);\n\t  if (ops.at === 0 && ops.pre === 0 && ops.squish === 0) {\n\t    marginLeft = 0;\n\t  } else {\n\t    marginLeft = calcSpacing(ops.at) + calcSpacing(ops.pre) + calcSpacing(ops.squish);\n\t  }\n\t  if (ops.last && ops.post === 0 && ops.squish === 0) {\n\t    marginRight = 0;\n\t  } else if (ops.post !== 0 || ops.squish !== 0) {\n\t    marginRight = calcSpacing(ops.post) + calcSpacing(ops.squish);\n\t    if (!ops.last) {\n\t      marginRight = marginRight + gutterWidth;\n\t    }\n\t  } else {\n\t    marginRight = gutterWidth;\n\t  }\n\t  if (ops.last) {\n\t    float = \"right\";\n\t  } else {\n\t    float = \"left\";\n\t  }\n\t  width = width + \"%\";\n\t  marginLeft = marginLeft + \"%\";\n\t  marginRight = marginRight + \"%\";\n\t  return {\n\t    float: float,\n\t    marginLeft: marginLeft,\n\t    marginRight: marginRight,\n\t    width: width,\n\t    clear: ops[\"break\"] ? 'both' : 'none'\n\t  };\n\t};\n\n\n/***/ }),\n\n/***/ \"./node_modules/snapsvg-cjs/dist/snap.svg-cjs.js\":\n/***/ (function(module, exports, __webpack_require__) {\n\n\twindow.eve = __webpack_require__(\"./node_modules/eve/eve.js\")\n\t\n\t// Copyright (c) 2013 Adobe Systems Incorporated. All rights reserved.\n\t//\n\t// Licensed under the Apache License, Version 2.0 (the \"License\");\n\t// you may not use this file except in compliance with the License.\n\t// You may obtain a copy of the License at\n\t//\n\t// http://www.apache.org/licenses/LICENSE-2.0\n\t//\n\t// Unless required by applicable law or agreed to in writing, software\n\t// distributed under the License is distributed on an \"AS IS\" BASIS,\n\t// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n\t// See the License for the specific language governing permissions and\n\t// limitations under the License.\n\tvar mina = (function (eve) {\n\t    var animations = {},\n\t    requestAnimFrame = window.requestAnimationFrame       ||\n\t                       window.webkitRequestAnimationFrame ||\n\t                       window.mozRequestAnimationFrame    ||\n\t                       window.oRequestAnimationFrame      ||\n\t                       window.msRequestAnimationFrame     ||\n\t                       function (callback) {\n\t                           setTimeout(callback, 16);\n\t                       },\n\t    isArray = Array.isArray || function (a) {\n\t        return a instanceof Array ||\n\t            Object.prototype.toString.call(a) == \"[object Array]\";\n\t    },\n\t    idgen = 0,\n\t    idprefix = \"M\" + (+new Date).toString(36),\n\t    ID = function () {\n\t        return idprefix + (idgen++).toString(36);\n\t    },\n\t    diff = function (a, b, A, B) {\n\t        if (isArray(a)) {\n\t            res = [];\n\t            for (var i = 0, ii = a.length; i < ii; i++) {\n\t                res[i] = diff(a[i], b, A[i], B);\n\t            }\n\t            return res;\n\t        }\n\t        var dif = (A - a) / (B - b);\n\t        return function (bb) {\n\t            return a + dif * (bb - b);\n\t        };\n\t    },\n\t    timer = Date.now || function () {\n\t        return +new Date;\n\t    },\n\t    sta = function (val) {\n\t        var a = this;\n\t        if (val == null) {\n\t            return a.s;\n\t        }\n\t        var ds = a.s - val;\n\t        a.b += a.dur * ds;\n\t        a.B += a.dur * ds;\n\t        a.s = val;\n\t    },\n\t    speed = function (val) {\n\t        var a = this;\n\t        if (val == null) {\n\t            return a.spd;\n\t        }\n\t        a.spd = val;\n\t    },\n\t    duration = function (val) {\n\t        var a = this;\n\t        if (val == null) {\n\t            return a.dur;\n\t        }\n\t        a.s = a.s * val / a.dur;\n\t        a.dur = val;\n\t    },\n\t    stopit = function () {\n\t        var a = this;\n\t        delete animations[a.id];\n\t        a.update();\n\t        eve(\"mina.stop.\" + a.id, a);\n\t    },\n\t    pause = function () {\n\t        var a = this;\n\t        if (a.pdif) {\n\t            return;\n\t        }\n\t        delete animations[a.id];\n\t        a.update();\n\t        a.pdif = a.get() - a.b;\n\t    },\n\t    resume = function () {\n\t        var a = this;\n\t        if (!a.pdif) {\n\t            return;\n\t        }\n\t        a.b = a.get() - a.pdif;\n\t        delete a.pdif;\n\t        animations[a.id] = a;\n\t    },\n\t    update = function () {\n\t        var a = this,\n\t            res;\n\t        if (isArray(a.start)) {\n\t            res = [];\n\t            for (var j = 0, jj = a.start.length; j < jj; j++) {\n\t                res[j] = +a.start[j] +\n\t                    (a.end[j] - a.start[j]) * a.easing(a.s);\n\t            }\n\t        } else {\n\t            res = +a.start + (a.end - a.start) * a.easing(a.s);\n\t        }\n\t        a.set(res);\n\t    },\n\t    frame = function () {\n\t        var len = 0;\n\t        for (var i in animations) if (animations.hasOwnProperty(i)) {\n\t            var a = animations[i],\n\t                b = a.get(),\n\t                res;\n\t            len++;\n\t            a.s = (b - a.b) / (a.dur / a.spd);\n\t            if (a.s >= 1) {\n\t                delete animations[i];\n\t                a.s = 1;\n\t                len--;\n\t                (function (a) {\n\t                    setTimeout(function () {\n\t                        eve(\"mina.finish.\" + a.id, a);\n\t                    });\n\t                }(a));\n\t            }\n\t            a.update();\n\t        }\n\t        len && requestAnimFrame(frame);\n\t    },\n\t    /*\\\n\t     * mina\n\t     [ method ]\n\t     **\n\t     * Generic animation of numbers\n\t     **\n\t     - a (number) start _slave_ number\n\t     - A (number) end _slave_ number\n\t     - b (number) start _master_ number (start time in general case)\n\t     - B (number) end _master_ number (end time in gereal case)\n\t     - get (function) getter of _master_ number (see @mina.time)\n\t     - set (function) setter of _slave_ number\n\t     - easing (function) #optional easing function, default is @mina.linear\n\t     = (object) animation descriptor\n\t     o {\n\t     o         id (string) animation id,\n\t     o         start (number) start _slave_ number,\n\t     o         end (number) end _slave_ number,\n\t     o         b (number) start _master_ number,\n\t     o         s (number) animation status (0..1),\n\t     o         dur (number) animation duration,\n\t     o         spd (number) animation speed,\n\t     o         get (function) getter of _master_ number (see @mina.time),\n\t     o         set (function) setter of _slave_ number,\n\t     o         easing (function) easing function, default is @mina.linear,\n\t     o         status (function) status getter/setter,\n\t     o         speed (function) speed getter/setter,\n\t     o         duration (function) duration getter/setter,\n\t     o         stop (function) animation stopper\n\t     o         pause (function) pauses the animation\n\t     o         resume (function) resumes the animation\n\t     o         update (function) calles setter with the right value of the animation\n\t     o }\n\t    \\*/\n\t    mina = function (a, A, b, B, get, set, easing) {\n\t        var anim = {\n\t            id: ID(),\n\t            start: a,\n\t            end: A,\n\t            b: b,\n\t            s: 0,\n\t            dur: B - b,\n\t            spd: 1,\n\t            get: get,\n\t            set: set,\n\t            easing: easing || mina.linear,\n\t            status: sta,\n\t            speed: speed,\n\t            duration: duration,\n\t            stop: stopit,\n\t            pause: pause,\n\t            resume: resume,\n\t            update: update\n\t        };\n\t        animations[anim.id] = anim;\n\t        var len = 0, i;\n\t        for (i in animations) if (animations.hasOwnProperty(i)) {\n\t            len++;\n\t            if (len == 2) {\n\t                break;\n\t            }\n\t        }\n\t        len == 1 && requestAnimFrame(frame);\n\t        return anim;\n\t    };\n\t    /*\\\n\t     * mina.time\n\t     [ method ]\n\t     **\n\t     * Returns the current time. Equivalent to:\n\t     | function () {\n\t     |     return (new Date).getTime();\n\t     | }\n\t    \\*/\n\t    mina.time = timer;\n\t    /*\\\n\t     * mina.getById\n\t     [ method ]\n\t     **\n\t     * Returns an animation by its id\n\t     - id (string) animation's id\n\t     = (object) See @mina\n\t    \\*/\n\t    mina.getById = function (id) {\n\t        return animations[id] || null;\n\t    };\n\t\n\t    /*\\\n\t     * mina.linear\n\t     [ method ]\n\t     **\n\t     * Default linear easing\n\t     - n (number) input 0..1\n\t     = (number) output 0..1\n\t    \\*/\n\t    mina.linear = function (n) {\n\t        return n;\n\t    };\n\t    /*\\\n\t     * mina.easeout\n\t     [ method ]\n\t     **\n\t     * Easeout easing\n\t     - n (number) input 0..1\n\t     = (number) output 0..1\n\t    \\*/\n\t    mina.easeout = function (n) {\n\t        return Math.pow(n, 1.7);\n\t    };\n\t    /*\\\n\t     * mina.easein\n\t     [ method ]\n\t     **\n\t     * Easein easing\n\t     - n (number) input 0..1\n\t     = (number) output 0..1\n\t    \\*/\n\t    mina.easein = function (n) {\n\t        return Math.pow(n, .48);\n\t    };\n\t    /*\\\n\t     * mina.easeinout\n\t     [ method ]\n\t     **\n\t     * Easeinout easing\n\t     - n (number) input 0..1\n\t     = (number) output 0..1\n\t    \\*/\n\t    mina.easeinout = function (n) {\n\t        if (n == 1) {\n\t            return 1;\n\t        }\n\t        if (n == 0) {\n\t            return 0;\n\t        }\n\t        var q = .48 - n / 1.04,\n\t            Q = Math.sqrt(.1734 + q * q),\n\t            x = Q - q,\n\t            X = Math.pow(Math.abs(x), 1 / 3) * (x < 0 ? -1 : 1),\n\t            y = -Q - q,\n\t            Y = Math.pow(Math.abs(y), 1 / 3) * (y < 0 ? -1 : 1),\n\t            t = X + Y + .5;\n\t        return (1 - t) * 3 * t * t + t * t * t;\n\t    };\n\t    /*\\\n\t     * mina.backin\n\t     [ method ]\n\t     **\n\t     * Backin easing\n\t     - n (number) input 0..1\n\t     = (number) output 0..1\n\t    \\*/\n\t    mina.backin = function (n) {\n\t        if (n == 1) {\n\t            return 1;\n\t        }\n\t        var s = 1.70158;\n\t        return n * n * ((s + 1) * n - s);\n\t    };\n\t    /*\\\n\t     * mina.backout\n\t     [ method ]\n\t     **\n\t     * Backout easing\n\t     - n (number) input 0..1\n\t     = (number) output 0..1\n\t    \\*/\n\t    mina.backout = function (n) {\n\t        if (n == 0) {\n\t            return 0;\n\t        }\n\t        n = n - 1;\n\t        var s = 1.70158;\n\t        return n * n * ((s + 1) * n + s) + 1;\n\t    };\n\t    /*\\\n\t     * mina.elastic\n\t     [ method ]\n\t     **\n\t     * Elastic easing\n\t     - n (number) input 0..1\n\t     = (number) output 0..1\n\t    \\*/\n\t    mina.elastic = function (n) {\n\t        if (n == !!n) {\n\t            return n;\n\t        }\n\t        return Math.pow(2, -10 * n) * Math.sin((n - .075) *\n\t            (2 * Math.PI) / .3) + 1;\n\t    };\n\t    /*\\\n\t     * mina.bounce\n\t     [ method ]\n\t     **\n\t     * Bounce easing\n\t     - n (number) input 0..1\n\t     = (number) output 0..1\n\t    \\*/\n\t    mina.bounce = function (n) {\n\t        var s = 7.5625,\n\t            p = 2.75,\n\t            l;\n\t        if (n < (1 / p)) {\n\t            l = s * n * n;\n\t        } else {\n\t            if (n < (2 / p)) {\n\t                n -= (1.5 / p);\n\t                l = s * n * n + .75;\n\t            } else {\n\t                if (n < (2.5 / p)) {\n\t                    n -= (2.25 / p);\n\t                    l = s * n * n + .9375;\n\t                } else {\n\t                    n -= (2.625 / p);\n\t                    l = s * n * n + .984375;\n\t                }\n\t            }\n\t        }\n\t        return l;\n\t    };\n\t    window.mina = mina;\n\t    return mina;\n\t})(typeof eve == \"undefined\" ? function () {} : eve);\n\t// Copyright (c) 2013 - 2015 Adobe Systems Incorporated. All rights reserved.\n\t//\n\t// Licensed under the Apache License, Version 2.0 (the \"License\");\n\t// you may not use this file except in compliance with the License.\n\t// You may obtain a copy of the License at\n\t//\n\t// http://www.apache.org/licenses/LICENSE-2.0\n\t//\n\t// Unless required by applicable law or agreed to in writing, software\n\t// distributed under the License is distributed on an \"AS IS\" BASIS,\n\t// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n\t// See the License for the specific language governing permissions and\n\t// limitations under the License.\n\t\n\tvar Snap = (function(root) {\n\tSnap.version = \"0.4.0\";\n\t/*\\\n\t * Snap\n\t [ method ]\n\t **\n\t * Creates a drawing surface or wraps existing SVG element.\n\t **\n\t - width (number|string) width of surface\n\t - height (number|string) height of surface\n\t * or\n\t - DOM (SVGElement) element to be wrapped into Snap structure\n\t * or\n\t - array (array) array of elements (will return set of elements)\n\t * or\n\t - query (string) CSS query selector\n\t = (object) @Element\n\t\\*/\n\tfunction Snap(w, h) {\n\t    if (w) {\n\t        if (w.nodeType) {\n\t            return wrap(w);\n\t        }\n\t        if (is(w, \"array\") && Snap.set) {\n\t            return Snap.set.apply(Snap, w);\n\t        }\n\t        if (w instanceof Element) {\n\t            return w;\n\t        }\n\t        if (h == null) {\n\t            w = glob.doc.querySelector(String(w));\n\t            return wrap(w);\n\t        }\n\t    }\n\t    w = w == null ? \"100%\" : w;\n\t    h = h == null ? \"100%\" : h;\n\t    return new Paper(w, h);\n\t}\n\tSnap.toString = function () {\n\t    return \"Snap v\" + this.version;\n\t};\n\tSnap._ = {};\n\tvar glob = {\n\t    win: root.window,\n\t    doc: root.window.document\n\t};\n\tSnap._.glob = glob;\n\tvar has = \"hasOwnProperty\",\n\t    Str = String,\n\t    toFloat = parseFloat,\n\t    toInt = parseInt,\n\t    math = Math,\n\t    mmax = math.max,\n\t    mmin = math.min,\n\t    abs = math.abs,\n\t    pow = math.pow,\n\t    PI = math.PI,\n\t    round = math.round,\n\t    E = \"\",\n\t    S = \" \",\n\t    objectToString = Object.prototype.toString,\n\t    ISURL = /^url\\(['\"]?([^\\)]+?)['\"]?\\)$/i,\n\t    colourRegExp = /^\\s*((#[a-f\\d]{6})|(#[a-f\\d]{3})|rgba?\\(\\s*([\\d\\.]+%?\\s*,\\s*[\\d\\.]+%?\\s*,\\s*[\\d\\.]+%?(?:\\s*,\\s*[\\d\\.]+%?)?)\\s*\\)|hsba?\\(\\s*([\\d\\.]+(?:deg|\\xb0|%)?\\s*,\\s*[\\d\\.]+%?\\s*,\\s*[\\d\\.]+(?:%?\\s*,\\s*[\\d\\.]+)?%?)\\s*\\)|hsla?\\(\\s*([\\d\\.]+(?:deg|\\xb0|%)?\\s*,\\s*[\\d\\.]+%?\\s*,\\s*[\\d\\.]+(?:%?\\s*,\\s*[\\d\\.]+)?%?)\\s*\\))\\s*$/i,\n\t    bezierrg = /^(?:cubic-)?bezier\\(([^,]+),([^,]+),([^,]+),([^\\)]+)\\)/,\n\t    reURLValue = /^url\\(#?([^)]+)\\)$/,\n\t    separator = Snap._.separator = /[,\\s]+/,\n\t    whitespace = /[\\s]/g,\n\t    commaSpaces = /[\\s]*,[\\s]*/,\n\t    hsrg = {hs: 1, rg: 1},\n\t    pathCommand = /([a-z])[\\s,]*((-?\\d*\\.?\\d*(?:e[\\-+]?\\d+)?[\\s]*,?[\\s]*)+)/ig,\n\t    tCommand = /([rstm])[\\s,]*((-?\\d*\\.?\\d*(?:e[\\-+]?\\d+)?[\\s]*,?[\\s]*)+)/ig,\n\t    pathValues = /(-?\\d*\\.?\\d*(?:e[\\-+]?\\\\d+)?)[\\s]*,?[\\s]*/ig,\n\t    idgen = 0,\n\t    idprefix = \"S\" + (+new Date).toString(36),\n\t    ID = function (el) {\n\t        return (el && el.type ? el.type : E) + idprefix + (idgen++).toString(36);\n\t    },\n\t    xlink = \"http://www.w3.org/1999/xlink\",\n\t    xmlns = \"http://www.w3.org/2000/svg\",\n\t    hub = {},\n\t    URL = Snap.url = function (url) {\n\t        return \"url('#\" + url + \"')\";\n\t    };\n\t\n\tfunction $(el, attr) {\n\t    if (attr) {\n\t        if (el == \"#text\") {\n\t            el = glob.doc.createTextNode(attr.text || attr[\"#text\"] || \"\");\n\t        }\n\t        if (el == \"#comment\") {\n\t            el = glob.doc.createComment(attr.text || attr[\"#text\"] || \"\");\n\t        }\n\t        if (typeof el == \"string\") {\n\t            el = $(el);\n\t        }\n\t        if (typeof attr == \"string\") {\n\t            if (el.nodeType == 1) {\n\t                if (attr.substring(0, 6) == \"xlink:\") {\n\t                    return el.getAttributeNS(xlink, attr.substring(6));\n\t                }\n\t                if (attr.substring(0, 4) == \"xml:\") {\n\t                    return el.getAttributeNS(xmlns, attr.substring(4));\n\t                }\n\t                return el.getAttribute(attr);\n\t            } else if (attr == \"text\") {\n\t                return el.nodeValue;\n\t            } else {\n\t                return null;\n\t            }\n\t        }\n\t        if (el.nodeType == 1) {\n\t            for (var key in attr) if (attr[has](key)) {\n\t                var val = Str(attr[key]);\n\t                if (val) {\n\t                    if (key.substring(0, 6) == \"xlink:\") {\n\t                        el.setAttributeNS(xlink, key.substring(6), val);\n\t                    } else if (key.substring(0, 4) == \"xml:\") {\n\t                        el.setAttributeNS(xmlns, key.substring(4), val);\n\t                    } else {\n\t                        el.setAttribute(key, val);\n\t                    }\n\t                } else {\n\t                    el.removeAttribute(key);\n\t                }\n\t            }\n\t        } else if (\"text\" in attr) {\n\t            el.nodeValue = attr.text;\n\t        }\n\t    } else {\n\t        el = glob.doc.createElementNS(xmlns, el);\n\t    }\n\t    return el;\n\t}\n\tSnap._.$ = $;\n\tSnap._.id = ID;\n\tfunction getAttrs(el) {\n\t    var attrs = el.attributes,\n\t        name,\n\t        out = {};\n\t    for (var i = 0; i < attrs.length; i++) {\n\t        if (attrs[i].namespaceURI == xlink) {\n\t            name = \"xlink:\";\n\t        } else {\n\t            name = \"\";\n\t        }\n\t        name += attrs[i].name;\n\t        out[name] = attrs[i].textContent;\n\t    }\n\t    return out;\n\t}\n\tfunction is(o, type) {\n\t    type = Str.prototype.toLowerCase.call(type);\n\t    if (type == \"finite\") {\n\t        return isFinite(o);\n\t    }\n\t    if (type == \"array\" &&\n\t        (o instanceof Array || Array.isArray && Array.isArray(o))) {\n\t        return true;\n\t    }\n\t    return  (type == \"null\" && o === null) ||\n\t            (type == typeof o && o !== null) ||\n\t            (type == \"object\" && o === Object(o)) ||\n\t            objectToString.call(o).slice(8, -1).toLowerCase() == type;\n\t}\n\t/*\\\n\t * Snap.format\n\t [ method ]\n\t **\n\t * Replaces construction of type `{<name>}` to the corresponding argument\n\t **\n\t - token (string) string to format\n\t - json (object) object which properties are used as a replacement\n\t = (string) formatted string\n\t > Usage\n\t | // this draws a rectangular shape equivalent to \"M10,20h40v50h-40z\"\n\t | paper.path(Snap.format(\"M{x},{y}h{dim.width}v{dim.height}h{dim['negative width']}z\", {\n\t |     x: 10,\n\t |     y: 20,\n\t |     dim: {\n\t |         width: 40,\n\t |         height: 50,\n\t |         \"negative width\": -40\n\t |     }\n\t | }));\n\t\\*/\n\tSnap.format = (function () {\n\t    var tokenRegex = /\\{([^\\}]+)\\}/g,\n\t        objNotationRegex = /(?:(?:^|\\.)(.+?)(?=\\[|\\.|$|\\()|\\[('|\")(.+?)\\2\\])(\\(\\))?/g, // matches .xxxxx or [\"xxxxx\"] to run over object properties\n\t        replacer = function (all, key, obj) {\n\t            var res = obj;\n\t            key.replace(objNotationRegex, function (all, name, quote, quotedName, isFunc) {\n\t                name = name || quotedName;\n\t                if (res) {\n\t                    if (name in res) {\n\t                        res = res[name];\n\t                    }\n\t                    typeof res == \"function\" && isFunc && (res = res());\n\t                }\n\t            });\n\t            res = (res == null || res == obj ? all : res) + \"\";\n\t            return res;\n\t        };\n\t    return function (str, obj) {\n\t        return Str(str).replace(tokenRegex, function (all, key) {\n\t            return replacer(all, key, obj);\n\t        });\n\t    };\n\t})();\n\tfunction clone(obj) {\n\t    if (typeof obj == \"function\" || Object(obj) !== obj) {\n\t        return obj;\n\t    }\n\t    var res = new obj.constructor;\n\t    for (var key in obj) if (obj[has](key)) {\n\t        res[key] = clone(obj[key]);\n\t    }\n\t    return res;\n\t}\n\tSnap._.clone = clone;\n\tfunction repush(array, item) {\n\t    for (var i = 0, ii = array.length; i < ii; i++) if (array[i] === item) {\n\t        return array.push(array.splice(i, 1)[0]);\n\t    }\n\t}\n\tfunction cacher(f, scope, postprocessor) {\n\t    function newf() {\n\t        var arg = Array.prototype.slice.call(arguments, 0),\n\t            args = arg.join(\"\\u2400\"),\n\t            cache = newf.cache = newf.cache || {},\n\t            count = newf.count = newf.count || [];\n\t        if (cache[has](args)) {\n\t            repush(count, args);\n\t            return postprocessor ? postprocessor(cache[args]) : cache[args];\n\t        }\n\t        count.length >= 1e3 && delete cache[count.shift()];\n\t        count.push(args);\n\t        cache[args] = f.apply(scope, arg);\n\t        return postprocessor ? postprocessor(cache[args]) : cache[args];\n\t    }\n\t    return newf;\n\t}\n\tSnap._.cacher = cacher;\n\tfunction angle(x1, y1, x2, y2, x3, y3) {\n\t    if (x3 == null) {\n\t        var x = x1 - x2,\n\t            y = y1 - y2;\n\t        if (!x && !y) {\n\t            return 0;\n\t        }\n\t        return (180 + math.atan2(-y, -x) * 180 / PI + 360) % 360;\n\t    } else {\n\t        return angle(x1, y1, x3, y3) - angle(x2, y2, x3, y3);\n\t    }\n\t}\n\tfunction rad(deg) {\n\t    return deg % 360 * PI / 180;\n\t}\n\tfunction deg(rad) {\n\t    return rad * 180 / PI % 360;\n\t}\n\tfunction x_y() {\n\t    return this.x + S + this.y;\n\t}\n\tfunction x_y_w_h() {\n\t    return this.x + S + this.y + S + this.width + \" \\xd7 \" + this.height;\n\t}\n\t\n\t/*\\\n\t * Snap.rad\n\t [ method ]\n\t **\n\t * Transform angle to radians\n\t - deg (number) angle in degrees\n\t = (number) angle in radians\n\t\\*/\n\tSnap.rad = rad;\n\t/*\\\n\t * Snap.deg\n\t [ method ]\n\t **\n\t * Transform angle to degrees\n\t - rad (number) angle in radians\n\t = (number) angle in degrees\n\t\\*/\n\tSnap.deg = deg;\n\t/*\\\n\t * Snap.sin\n\t [ method ]\n\t **\n\t * Equivalent to `Math.sin()` only works with degrees, not radians.\n\t - angle (number) angle in degrees\n\t = (number) sin\n\t\\*/\n\tSnap.sin = function (angle) {\n\t    return math.sin(Snap.rad(angle));\n\t};\n\t/*\\\n\t * Snap.tan\n\t [ method ]\n\t **\n\t * Equivalent to `Math.tan()` only works with degrees, not radians.\n\t - angle (number) angle in degrees\n\t = (number) tan\n\t\\*/\n\tSnap.tan = function (angle) {\n\t    return math.tan(Snap.rad(angle));\n\t};\n\t/*\\\n\t * Snap.cos\n\t [ method ]\n\t **\n\t * Equivalent to `Math.cos()` only works with degrees, not radians.\n\t - angle (number) angle in degrees\n\t = (number) cos\n\t\\*/\n\tSnap.cos = function (angle) {\n\t    return math.cos(Snap.rad(angle));\n\t};\n\t/*\\\n\t * Snap.asin\n\t [ method ]\n\t **\n\t * Equivalent to `Math.asin()` only works with degrees, not radians.\n\t - num (number) value\n\t = (number) asin in degrees\n\t\\*/\n\tSnap.asin = function (num) {\n\t    return Snap.deg(math.asin(num));\n\t};\n\t/*\\\n\t * Snap.acos\n\t [ method ]\n\t **\n\t * Equivalent to `Math.acos()` only works with degrees, not radians.\n\t - num (number) value\n\t = (number) acos in degrees\n\t\\*/\n\tSnap.acos = function (num) {\n\t    return Snap.deg(math.acos(num));\n\t};\n\t/*\\\n\t * Snap.atan\n\t [ method ]\n\t **\n\t * Equivalent to `Math.atan()` only works with degrees, not radians.\n\t - num (number) value\n\t = (number) atan in degrees\n\t\\*/\n\tSnap.atan = function (num) {\n\t    return Snap.deg(math.atan(num));\n\t};\n\t/*\\\n\t * Snap.atan2\n\t [ method ]\n\t **\n\t * Equivalent to `Math.atan2()` only works with degrees, not radians.\n\t - num (number) value\n\t = (number) atan2 in degrees\n\t\\*/\n\tSnap.atan2 = function (num) {\n\t    return Snap.deg(math.atan2(num));\n\t};\n\t/*\\\n\t * Snap.angle\n\t [ method ]\n\t **\n\t * Returns an angle between two or three points\n\t > Parameters\n\t - x1 (number) x coord of first point\n\t - y1 (number) y coord of first point\n\t - x2 (number) x coord of second point\n\t - y2 (number) y coord of second point\n\t - x3 (number) #optional x coord of third point\n\t - y3 (number) #optional y coord of third point\n\t = (number) angle in degrees\n\t\\*/\n\tSnap.angle = angle;\n\t/*\\\n\t * Snap.len\n\t [ method ]\n\t **\n\t * Returns distance between two points\n\t > Parameters\n\t - x1 (number) x coord of first point\n\t - y1 (number) y coord of first point\n\t - x2 (number) x coord of second point\n\t - y2 (number) y coord of second point\n\t = (number) distance\n\t\\*/\n\tSnap.len = function (x1, y1, x2, y2) {\n\t    return Math.sqrt(Snap.len2(x1, y1, x2, y2));\n\t};\n\t/*\\\n\t * Snap.len2\n\t [ method ]\n\t **\n\t * Returns squared distance between two points\n\t > Parameters\n\t - x1 (number) x coord of first point\n\t - y1 (number) y coord of first point\n\t - x2 (number) x coord of second point\n\t - y2 (number) y coord of second point\n\t = (number) distance\n\t\\*/\n\tSnap.len2 = function (x1, y1, x2, y2) {\n\t    return (x1 - x2) * (x1 - x2) + (y1 - y2) * (y1 - y2);\n\t};\n\t/*\\\n\t * Snap.closestPoint\n\t [ method ]\n\t **\n\t * Returns closest point to a given one on a given path.\n\t > Parameters\n\t - path (Element) path element\n\t - x (number) x coord of a point\n\t - y (number) y coord of a point\n\t = (object) in format\n\t {\n\t    x (number) x coord of the point on the path\n\t    y (number) y coord of the point on the path\n\t    length (number) length of the path to the point\n\t    distance (number) distance from the given point to the path\n\t }\n\t\\*/\n\t// Copied from http://bl.ocks.org/mbostock/8027637\n\tSnap.closestPoint = function (path, x, y) {\n\t    function distance2(p) {\n\t        var dx = p.x - x,\n\t            dy = p.y - y;\n\t        return dx * dx + dy * dy;\n\t    }\n\t    var pathNode = path.node,\n\t        pathLength = pathNode.getTotalLength(),\n\t        precision = pathLength / pathNode.pathSegList.numberOfItems * .125,\n\t        best,\n\t        bestLength,\n\t        bestDistance = Infinity;\n\t\n\t    // linear scan for coarse approximation\n\t    for (var scan, scanLength = 0, scanDistance; scanLength <= pathLength; scanLength += precision) {\n\t        if ((scanDistance = distance2(scan = pathNode.getPointAtLength(scanLength))) < bestDistance) {\n\t            best = scan, bestLength = scanLength, bestDistance = scanDistance;\n\t        }\n\t    }\n\t\n\t    // binary search for precise estimate\n\t    precision *= .5;\n\t    while (precision > .5) {\n\t        var before,\n\t            after,\n\t            beforeLength,\n\t            afterLength,\n\t            beforeDistance,\n\t            afterDistance;\n\t        if ((beforeLength = bestLength - precision) >= 0 && (beforeDistance = distance2(before = pathNode.getPointAtLength(beforeLength))) < bestDistance) {\n\t            best = before, bestLength = beforeLength, bestDistance = beforeDistance;\n\t        } else if ((afterLength = bestLength + precision) <= pathLength && (afterDistance = distance2(after = pathNode.getPointAtLength(afterLength))) < bestDistance) {\n\t            best = after, bestLength = afterLength, bestDistance = afterDistance;\n\t        } else {\n\t            precision *= .5;\n\t        }\n\t    }\n\t\n\t    best = {\n\t        x: best.x,\n\t        y: best.y,\n\t        length: bestLength,\n\t        distance: Math.sqrt(bestDistance)\n\t    };\n\t    return best;\n\t}\n\t/*\\\n\t * Snap.is\n\t [ method ]\n\t **\n\t * Handy replacement for the `typeof` operator\n\t - o (…) any object or primitive\n\t - type (string) name of the type, e.g., `string`, `function`, `number`, etc.\n\t = (boolean) `true` if given value is of given type\n\t\\*/\n\tSnap.is = is;\n\t/*\\\n\t * Snap.snapTo\n\t [ method ]\n\t **\n\t * Snaps given value to given grid\n\t - values (array|number) given array of values or step of the grid\n\t - value (number) value to adjust\n\t - tolerance (number) #optional maximum distance to the target value that would trigger the snap. Default is `10`.\n\t = (number) adjusted value\n\t\\*/\n\tSnap.snapTo = function (values, value, tolerance) {\n\t    tolerance = is(tolerance, \"finite\") ? tolerance : 10;\n\t    if (is(values, \"array\")) {\n\t        var i = values.length;\n\t        while (i--) if (abs(values[i] - value) <= tolerance) {\n\t            return values[i];\n\t        }\n\t    } else {\n\t        values = +values;\n\t        var rem = value % values;\n\t        if (rem < tolerance) {\n\t            return value - rem;\n\t        }\n\t        if (rem > values - tolerance) {\n\t            return value - rem + values;\n\t        }\n\t    }\n\t    return value;\n\t};\n\t// Colour\n\t/*\\\n\t * Snap.getRGB\n\t [ method ]\n\t **\n\t * Parses color string as RGB object\n\t - color (string) color string in one of the following formats:\n\t # <ul>\n\t #     <li>Color name (<code>red</code>, <code>green</code>, <code>cornflowerblue</code>, etc)</li>\n\t #     <li>#••• — shortened HTML color: (<code>#000</code>, <code>#fc0</code>, etc.)</li>\n\t #     <li>#•••••• — full length HTML color: (<code>#000000</code>, <code>#bd2300</code>)</li>\n\t #     <li>rgb(•••, •••, •••) — red, green and blue channels values: (<code>rgb(200,&nbsp;100,&nbsp;0)</code>)</li>\n\t #     <li>rgba(•••, •••, •••, •••) — also with opacity</li>\n\t #     <li>rgb(•••%, •••%, •••%) — same as above, but in %: (<code>rgb(100%,&nbsp;175%,&nbsp;0%)</code>)</li>\n\t #     <li>rgba(•••%, •••%, •••%, •••%) — also with opacity</li>\n\t #     <li>hsb(•••, •••, •••) — hue, saturation and brightness values: (<code>hsb(0.5,&nbsp;0.25,&nbsp;1)</code>)</li>\n\t #     <li>hsba(•••, •••, •••, •••) — also with opacity</li>\n\t #     <li>hsb(•••%, •••%, •••%) — same as above, but in %</li>\n\t #     <li>hsba(•••%, •••%, •••%, •••%) — also with opacity</li>\n\t #     <li>hsl(•••, •••, •••) — hue, saturation and luminosity values: (<code>hsb(0.5,&nbsp;0.25,&nbsp;0.5)</code>)</li>\n\t #     <li>hsla(•••, •••, •••, •••) — also with opacity</li>\n\t #     <li>hsl(•••%, •••%, •••%) — same as above, but in %</li>\n\t #     <li>hsla(•••%, •••%, •••%, •••%) — also with opacity</li>\n\t # </ul>\n\t * Note that `%` can be used any time: `rgb(20%, 255, 50%)`.\n\t = (object) RGB object in the following format:\n\t o {\n\t o     r (number) red,\n\t o     g (number) green,\n\t o     b (number) blue,\n\t o     hex (string) color in HTML/CSS format: #••••••,\n\t o     error (boolean) true if string can't be parsed\n\t o }\n\t\\*/\n\tSnap.getRGB = cacher(function (colour) {\n\t    if (!colour || !!((colour = Str(colour)).indexOf(\"-\") + 1)) {\n\t        return {r: -1, g: -1, b: -1, hex: \"none\", error: 1, toString: rgbtoString};\n\t    }\n\t    if (colour == \"none\") {\n\t        return {r: -1, g: -1, b: -1, hex: \"none\", toString: rgbtoString};\n\t    }\n\t    !(hsrg[has](colour.toLowerCase().substring(0, 2)) || colour.charAt() == \"#\") && (colour = toHex(colour));\n\t    if (!colour) {\n\t        return {r: -1, g: -1, b: -1, hex: \"none\", error: 1, toString: rgbtoString};\n\t    }\n\t    var res,\n\t        red,\n\t        green,\n\t        blue,\n\t        opacity,\n\t        t,\n\t        values,\n\t        rgb = colour.match(colourRegExp);\n\t    if (rgb) {\n\t        if (rgb[2]) {\n\t            blue = toInt(rgb[2].substring(5), 16);\n\t            green = toInt(rgb[2].substring(3, 5), 16);\n\t            red = toInt(rgb[2].substring(1, 3), 16);\n\t        }\n\t        if (rgb[3]) {\n\t            blue = toInt((t = rgb[3].charAt(3)) + t, 16);\n\t            green = toInt((t = rgb[3].charAt(2)) + t, 16);\n\t            red = toInt((t = rgb[3].charAt(1)) + t, 16);\n\t        }\n\t        if (rgb[4]) {\n\t            values = rgb[4].split(commaSpaces);\n\t            red = toFloat(values[0]);\n\t            values[0].slice(-1) == \"%\" && (red *= 2.55);\n\t            green = toFloat(values[1]);\n\t            values[1].slice(-1) == \"%\" && (green *= 2.55);\n\t            blue = toFloat(values[2]);\n\t            values[2].slice(-1) == \"%\" && (blue *= 2.55);\n\t            rgb[1].toLowerCase().slice(0, 4) == \"rgba\" && (opacity = toFloat(values[3]));\n\t            values[3] && values[3].slice(-1) == \"%\" && (opacity /= 100);\n\t        }\n\t        if (rgb[5]) {\n\t            values = rgb[5].split(commaSpaces);\n\t            red = toFloat(values[0]);\n\t            values[0].slice(-1) == \"%\" && (red /= 100);\n\t            green = toFloat(values[1]);\n\t            values[1].slice(-1) == \"%\" && (green /= 100);\n\t            blue = toFloat(values[2]);\n\t            values[2].slice(-1) == \"%\" && (blue /= 100);\n\t            (values[0].slice(-3) == \"deg\" || values[0].slice(-1) == \"\\xb0\") && (red /= 360);\n\t            rgb[1].toLowerCase().slice(0, 4) == \"hsba\" && (opacity = toFloat(values[3]));\n\t            values[3] && values[3].slice(-1) == \"%\" && (opacity /= 100);\n\t            return Snap.hsb2rgb(red, green, blue, opacity);\n\t        }\n\t        if (rgb[6]) {\n\t            values = rgb[6].split(commaSpaces);\n\t            red = toFloat(values[0]);\n\t            values[0].slice(-1) == \"%\" && (red /= 100);\n\t            green = toFloat(values[1]);\n\t            values[1].slice(-1) == \"%\" && (green /= 100);\n\t            blue = toFloat(values[2]);\n\t            values[2].slice(-1) == \"%\" && (blue /= 100);\n\t            (values[0].slice(-3) == \"deg\" || values[0].slice(-1) == \"\\xb0\") && (red /= 360);\n\t            rgb[1].toLowerCase().slice(0, 4) == \"hsla\" && (opacity = toFloat(values[3]));\n\t            values[3] && values[3].slice(-1) == \"%\" && (opacity /= 100);\n\t            return Snap.hsl2rgb(red, green, blue, opacity);\n\t        }\n\t        red = mmin(math.round(red), 255);\n\t        green = mmin(math.round(green), 255);\n\t        blue = mmin(math.round(blue), 255);\n\t        opacity = mmin(mmax(opacity, 0), 1);\n\t        rgb = {r: red, g: green, b: blue, toString: rgbtoString};\n\t        rgb.hex = \"#\" + (16777216 | blue | (green << 8) | (red << 16)).toString(16).slice(1);\n\t        rgb.opacity = is(opacity, \"finite\") ? opacity : 1;\n\t        return rgb;\n\t    }\n\t    return {r: -1, g: -1, b: -1, hex: \"none\", error: 1, toString: rgbtoString};\n\t}, Snap);\n\t/*\\\n\t * Snap.hsb\n\t [ method ]\n\t **\n\t * Converts HSB values to a hex representation of the color\n\t - h (number) hue\n\t - s (number) saturation\n\t - b (number) value or brightness\n\t = (string) hex representation of the color\n\t\\*/\n\tSnap.hsb = cacher(function (h, s, b) {\n\t    return Snap.hsb2rgb(h, s, b).hex;\n\t});\n\t/*\\\n\t * Snap.hsl\n\t [ method ]\n\t **\n\t * Converts HSL values to a hex representation of the color\n\t - h (number) hue\n\t - s (number) saturation\n\t - l (number) luminosity\n\t = (string) hex representation of the color\n\t\\*/\n\tSnap.hsl = cacher(function (h, s, l) {\n\t    return Snap.hsl2rgb(h, s, l).hex;\n\t});\n\t/*\\\n\t * Snap.rgb\n\t [ method ]\n\t **\n\t * Converts RGB values to a hex representation of the color\n\t - r (number) red\n\t - g (number) green\n\t - b (number) blue\n\t = (string) hex representation of the color\n\t\\*/\n\tSnap.rgb = cacher(function (r, g, b, o) {\n\t    if (is(o, \"finite\")) {\n\t        var round = math.round;\n\t        return \"rgba(\" + [round(r), round(g), round(b), +o.toFixed(2)] + \")\";\n\t    }\n\t    return \"#\" + (16777216 | b | (g << 8) | (r << 16)).toString(16).slice(1);\n\t});\n\tvar toHex = function (color) {\n\t    var i = glob.doc.getElementsByTagName(\"head\")[0] || glob.doc.getElementsByTagName(\"svg\")[0],\n\t        red = \"rgb(255, 0, 0)\";\n\t    toHex = cacher(function (color) {\n\t        if (color.toLowerCase() == \"red\") {\n\t            return red;\n\t        }\n\t        i.style.color = red;\n\t        i.style.color = color;\n\t        var out = glob.doc.defaultView.getComputedStyle(i, E).getPropertyValue(\"color\");\n\t        return out == red ? null : out;\n\t    });\n\t    return toHex(color);\n\t},\n\thsbtoString = function () {\n\t    return \"hsb(\" + [this.h, this.s, this.b] + \")\";\n\t},\n\thsltoString = function () {\n\t    return \"hsl(\" + [this.h, this.s, this.l] + \")\";\n\t},\n\trgbtoString = function () {\n\t    return this.opacity == 1 || this.opacity == null ?\n\t            this.hex :\n\t            \"rgba(\" + [this.r, this.g, this.b, this.opacity] + \")\";\n\t},\n\tprepareRGB = function (r, g, b) {\n\t    if (g == null && is(r, \"object\") && \"r\" in r && \"g\" in r && \"b\" in r) {\n\t        b = r.b;\n\t        g = r.g;\n\t        r = r.r;\n\t    }\n\t    if (g == null && is(r, string)) {\n\t        var clr = Snap.getRGB(r);\n\t        r = clr.r;\n\t        g = clr.g;\n\t        b = clr.b;\n\t    }\n\t    if (r > 1 || g > 1 || b > 1) {\n\t        r /= 255;\n\t        g /= 255;\n\t        b /= 255;\n\t    }\n\t\n\t    return [r, g, b];\n\t},\n\tpackageRGB = function (r, g, b, o) {\n\t    r = math.round(r * 255);\n\t    g = math.round(g * 255);\n\t    b = math.round(b * 255);\n\t    var rgb = {\n\t        r: r,\n\t        g: g,\n\t        b: b,\n\t        opacity: is(o, \"finite\") ? o : 1,\n\t        hex: Snap.rgb(r, g, b),\n\t        toString: rgbtoString\n\t    };\n\t    is(o, \"finite\") && (rgb.opacity = o);\n\t    return rgb;\n\t};\n\t/*\\\n\t * Snap.color\n\t [ method ]\n\t **\n\t * Parses the color string and returns an object featuring the color's component values\n\t - clr (string) color string in one of the supported formats (see @Snap.getRGB)\n\t = (object) Combined RGB/HSB object in the following format:\n\t o {\n\t o     r (number) red,\n\t o     g (number) green,\n\t o     b (number) blue,\n\t o     hex (string) color in HTML/CSS format: #••••••,\n\t o     error (boolean) `true` if string can't be parsed,\n\t o     h (number) hue,\n\t o     s (number) saturation,\n\t o     v (number) value (brightness),\n\t o     l (number) lightness\n\t o }\n\t\\*/\n\tSnap.color = function (clr) {\n\t    var rgb;\n\t    if (is(clr, \"object\") && \"h\" in clr && \"s\" in clr && \"b\" in clr) {\n\t        rgb = Snap.hsb2rgb(clr);\n\t        clr.r = rgb.r;\n\t        clr.g = rgb.g;\n\t        clr.b = rgb.b;\n\t        clr.opacity = 1;\n\t        clr.hex = rgb.hex;\n\t    } else if (is(clr, \"object\") && \"h\" in clr && \"s\" in clr && \"l\" in clr) {\n\t        rgb = Snap.hsl2rgb(clr);\n\t        clr.r = rgb.r;\n\t        clr.g = rgb.g;\n\t        clr.b = rgb.b;\n\t        clr.opacity = 1;\n\t        clr.hex = rgb.hex;\n\t    } else {\n\t        if (is(clr, \"string\")) {\n\t            clr = Snap.getRGB(clr);\n\t        }\n\t        if (is(clr, \"object\") && \"r\" in clr && \"g\" in clr && \"b\" in clr && !(\"error\" in clr)) {\n\t            rgb = Snap.rgb2hsl(clr);\n\t            clr.h = rgb.h;\n\t            clr.s = rgb.s;\n\t            clr.l = rgb.l;\n\t            rgb = Snap.rgb2hsb(clr);\n\t            clr.v = rgb.b;\n\t        } else {\n\t            clr = {hex: \"none\"};\n\t            clr.r = clr.g = clr.b = clr.h = clr.s = clr.v = clr.l = -1;\n\t            clr.error = 1;\n\t        }\n\t    }\n\t    clr.toString = rgbtoString;\n\t    return clr;\n\t};\n\t/*\\\n\t * Snap.hsb2rgb\n\t [ method ]\n\t **\n\t * Converts HSB values to an RGB object\n\t - h (number) hue\n\t - s (number) saturation\n\t - v (number) value or brightness\n\t = (object) RGB object in the following format:\n\t o {\n\t o     r (number) red,\n\t o     g (number) green,\n\t o     b (number) blue,\n\t o     hex (string) color in HTML/CSS format: #••••••\n\t o }\n\t\\*/\n\tSnap.hsb2rgb = function (h, s, v, o) {\n\t    if (is(h, \"object\") && \"h\" in h && \"s\" in h && \"b\" in h) {\n\t        v = h.b;\n\t        s = h.s;\n\t        o = h.o;\n\t        h = h.h;\n\t    }\n\t    h *= 360;\n\t    var R, G, B, X, C;\n\t    h = (h % 360) / 60;\n\t    C = v * s;\n\t    X = C * (1 - abs(h % 2 - 1));\n\t    R = G = B = v - C;\n\t\n\t    h = ~~h;\n\t    R += [C, X, 0, 0, X, C][h];\n\t    G += [X, C, C, X, 0, 0][h];\n\t    B += [0, 0, X, C, C, X][h];\n\t    return packageRGB(R, G, B, o);\n\t};\n\t/*\\\n\t * Snap.hsl2rgb\n\t [ method ]\n\t **\n\t * Converts HSL values to an RGB object\n\t - h (number) hue\n\t - s (number) saturation\n\t - l (number) luminosity\n\t = (object) RGB object in the following format:\n\t o {\n\t o     r (number) red,\n\t o     g (number) green,\n\t o     b (number) blue,\n\t o     hex (string) color in HTML/CSS format: #••••••\n\t o }\n\t\\*/\n\tSnap.hsl2rgb = function (h, s, l, o) {\n\t    if (is(h, \"object\") && \"h\" in h && \"s\" in h && \"l\" in h) {\n\t        l = h.l;\n\t        s = h.s;\n\t        h = h.h;\n\t    }\n\t    if (h > 1 || s > 1 || l > 1) {\n\t        h /= 360;\n\t        s /= 100;\n\t        l /= 100;\n\t    }\n\t    h *= 360;\n\t    var R, G, B, X, C;\n\t    h = (h % 360) / 60;\n\t    C = 2 * s * (l < .5 ? l : 1 - l);\n\t    X = C * (1 - abs(h % 2 - 1));\n\t    R = G = B = l - C / 2;\n\t\n\t    h = ~~h;\n\t    R += [C, X, 0, 0, X, C][h];\n\t    G += [X, C, C, X, 0, 0][h];\n\t    B += [0, 0, X, C, C, X][h];\n\t    return packageRGB(R, G, B, o);\n\t};\n\t/*\\\n\t * Snap.rgb2hsb\n\t [ method ]\n\t **\n\t * Converts RGB values to an HSB object\n\t - r (number) red\n\t - g (number) green\n\t - b (number) blue\n\t = (object) HSB object in the following format:\n\t o {\n\t o     h (number) hue,\n\t o     s (number) saturation,\n\t o     b (number) brightness\n\t o }\n\t\\*/\n\tSnap.rgb2hsb = function (r, g, b) {\n\t    b = prepareRGB(r, g, b);\n\t    r = b[0];\n\t    g = b[1];\n\t    b = b[2];\n\t\n\t    var H, S, V, C;\n\t    V = mmax(r, g, b);\n\t    C = V - mmin(r, g, b);\n\t    H = (C == 0 ? null :\n\t         V == r ? (g - b) / C :\n\t         V == g ? (b - r) / C + 2 :\n\t                  (r - g) / C + 4\n\t        );\n\t    H = ((H + 360) % 6) * 60 / 360;\n\t    S = C == 0 ? 0 : C / V;\n\t    return {h: H, s: S, b: V, toString: hsbtoString};\n\t};\n\t/*\\\n\t * Snap.rgb2hsl\n\t [ method ]\n\t **\n\t * Converts RGB values to an HSL object\n\t - r (number) red\n\t - g (number) green\n\t - b (number) blue\n\t = (object) HSL object in the following format:\n\t o {\n\t o     h (number) hue,\n\t o     s (number) saturation,\n\t o     l (number) luminosity\n\t o }\n\t\\*/\n\tSnap.rgb2hsl = function (r, g, b) {\n\t    b = prepareRGB(r, g, b);\n\t    r = b[0];\n\t    g = b[1];\n\t    b = b[2];\n\t\n\t    var H, S, L, M, m, C;\n\t    M = mmax(r, g, b);\n\t    m = mmin(r, g, b);\n\t    C = M - m;\n\t    H = (C == 0 ? null :\n\t         M == r ? (g - b) / C :\n\t         M == g ? (b - r) / C + 2 :\n\t                  (r - g) / C + 4);\n\t    H = ((H + 360) % 6) * 60 / 360;\n\t    L = (M + m) / 2;\n\t    S = (C == 0 ? 0 :\n\t         L < .5 ? C / (2 * L) :\n\t                  C / (2 - 2 * L));\n\t    return {h: H, s: S, l: L, toString: hsltoString};\n\t};\n\t\n\t// Transformations\n\t/*\\\n\t * Snap.parsePathString\n\t [ method ]\n\t **\n\t * Utility method\n\t **\n\t * Parses given path string into an array of arrays of path segments\n\t - pathString (string|array) path string or array of segments (in the last case it is returned straight away)\n\t = (array) array of segments\n\t\\*/\n\tSnap.parsePathString = function (pathString) {\n\t    if (!pathString) {\n\t        return null;\n\t    }\n\t    var pth = Snap.path(pathString);\n\t    if (pth.arr) {\n\t        return Snap.path.clone(pth.arr);\n\t    }\n\t\n\t    var paramCounts = {a: 7, c: 6, o: 2, h: 1, l: 2, m: 2, r: 4, q: 4, s: 4, t: 2, v: 1, u: 3, z: 0},\n\t        data = [];\n\t    if (is(pathString, \"array\") && is(pathString[0], \"array\")) { // rough assumption\n\t        data = Snap.path.clone(pathString);\n\t    }\n\t    if (!data.length) {\n\t        Str(pathString).replace(pathCommand, function (a, b, c) {\n\t            var params = [],\n\t                name = b.toLowerCase();\n\t            c.replace(pathValues, function (a, b) {\n\t                b && params.push(+b);\n\t            });\n\t            if (name == \"m\" && params.length > 2) {\n\t                data.push([b].concat(params.splice(0, 2)));\n\t                name = \"l\";\n\t                b = b == \"m\" ? \"l\" : \"L\";\n\t            }\n\t            if (name == \"o\" && params.length == 1) {\n\t                data.push([b, params[0]]);\n\t            }\n\t            if (name == \"r\") {\n\t                data.push([b].concat(params));\n\t            } else while (params.length >= paramCounts[name]) {\n\t                data.push([b].concat(params.splice(0, paramCounts[name])));\n\t                if (!paramCounts[name]) {\n\t                    break;\n\t                }\n\t            }\n\t        });\n\t    }\n\t    data.toString = Snap.path.toString;\n\t    pth.arr = Snap.path.clone(data);\n\t    return data;\n\t};\n\t/*\\\n\t * Snap.parseTransformString\n\t [ method ]\n\t **\n\t * Utility method\n\t **\n\t * Parses given transform string into an array of transformations\n\t - TString (string|array) transform string or array of transformations (in the last case it is returned straight away)\n\t = (array) array of transformations\n\t\\*/\n\tvar parseTransformString = Snap.parseTransformString = function (TString) {\n\t    if (!TString) {\n\t        return null;\n\t    }\n\t    var paramCounts = {r: 3, s: 4, t: 2, m: 6},\n\t        data = [];\n\t    if (is(TString, \"array\") && is(TString[0], \"array\")) { // rough assumption\n\t        data = Snap.path.clone(TString);\n\t    }\n\t    if (!data.length) {\n\t        Str(TString).replace(tCommand, function (a, b, c) {\n\t            var params = [],\n\t                name = b.toLowerCase();\n\t            c.replace(pathValues, function (a, b) {\n\t                b && params.push(+b);\n\t            });\n\t            data.push([b].concat(params));\n\t        });\n\t    }\n\t    data.toString = Snap.path.toString;\n\t    return data;\n\t};\n\tfunction svgTransform2string(tstr) {\n\t    var res = [];\n\t    tstr = tstr.replace(/(?:^|\\s)(\\w+)\\(([^)]+)\\)/g, function (all, name, params) {\n\t        params = params.split(/\\s*,\\s*|\\s+/);\n\t        if (name == \"rotate\" && params.length == 1) {\n\t            params.push(0, 0);\n\t        }\n\t        if (name == \"scale\") {\n\t            if (params.length > 2) {\n\t                params = params.slice(0, 2);\n\t            } else if (params.length == 2) {\n\t                params.push(0, 0);\n\t            }\n\t            if (params.length == 1) {\n\t                params.push(params[0], 0, 0);\n\t            }\n\t        }\n\t        if (name == \"skewX\") {\n\t            res.push([\"m\", 1, 0, math.tan(rad(params[0])), 1, 0, 0]);\n\t        } else if (name == \"skewY\") {\n\t            res.push([\"m\", 1, math.tan(rad(params[0])), 0, 1, 0, 0]);\n\t        } else {\n\t            res.push([name.charAt(0)].concat(params));\n\t        }\n\t        return all;\n\t    });\n\t    return res;\n\t}\n\tSnap._.svgTransform2string = svgTransform2string;\n\tSnap._.rgTransform = /^[a-z][\\s]*-?\\.?\\d/i;\n\tfunction transform2matrix(tstr, bbox) {\n\t    var tdata = parseTransformString(tstr),\n\t        m = new Snap.Matrix;\n\t    if (tdata) {\n\t        for (var i = 0, ii = tdata.length; i < ii; i++) {\n\t            var t = tdata[i],\n\t                tlen = t.length,\n\t                command = Str(t[0]).toLowerCase(),\n\t                absolute = t[0] != command,\n\t                inver = absolute ? m.invert() : 0,\n\t                x1,\n\t                y1,\n\t                x2,\n\t                y2,\n\t                bb;\n\t            if (command == \"t\" && tlen == 2){\n\t                m.translate(t[1], 0);\n\t            } else if (command == \"t\" && tlen == 3) {\n\t                if (absolute) {\n\t                    x1 = inver.x(0, 0);\n\t                    y1 = inver.y(0, 0);\n\t                    x2 = inver.x(t[1], t[2]);\n\t                    y2 = inver.y(t[1], t[2]);\n\t                    m.translate(x2 - x1, y2 - y1);\n\t                } else {\n\t                    m.translate(t[1], t[2]);\n\t                }\n\t            } else if (command == \"r\") {\n\t                if (tlen == 2) {\n\t                    bb = bb || bbox;\n\t                    m.rotate(t[1], bb.x + bb.width / 2, bb.y + bb.height / 2);\n\t                } else if (tlen == 4) {\n\t                    if (absolute) {\n\t                        x2 = inver.x(t[2], t[3]);\n\t                        y2 = inver.y(t[2], t[3]);\n\t                        m.rotate(t[1], x2, y2);\n\t                    } else {\n\t                        m.rotate(t[1], t[2], t[3]);\n\t                    }\n\t                }\n\t            } else if (command == \"s\") {\n\t                if (tlen == 2 || tlen == 3) {\n\t                    bb = bb || bbox;\n\t                    m.scale(t[1], t[tlen - 1], bb.x + bb.width / 2, bb.y + bb.height / 2);\n\t                } else if (tlen == 4) {\n\t                    if (absolute) {\n\t                        x2 = inver.x(t[2], t[3]);\n\t                        y2 = inver.y(t[2], t[3]);\n\t                        m.scale(t[1], t[1], x2, y2);\n\t                    } else {\n\t                        m.scale(t[1], t[1], t[2], t[3]);\n\t                    }\n\t                } else if (tlen == 5) {\n\t                    if (absolute) {\n\t                        x2 = inver.x(t[3], t[4]);\n\t                        y2 = inver.y(t[3], t[4]);\n\t                        m.scale(t[1], t[2], x2, y2);\n\t                    } else {\n\t                        m.scale(t[1], t[2], t[3], t[4]);\n\t                    }\n\t                }\n\t            } else if (command == \"m\" && tlen == 7) {\n\t                m.add(t[1], t[2], t[3], t[4], t[5], t[6]);\n\t            }\n\t        }\n\t    }\n\t    return m;\n\t}\n\tSnap._.transform2matrix = transform2matrix;\n\tSnap._unit2px = unit2px;\n\tvar contains = glob.doc.contains || glob.doc.compareDocumentPosition ?\n\t    function (a, b) {\n\t        var adown = a.nodeType == 9 ? a.documentElement : a,\n\t            bup = b && b.parentNode;\n\t            return a == bup || !!(bup && bup.nodeType == 1 && (\n\t                adown.contains ?\n\t                    adown.contains(bup) :\n\t                    a.compareDocumentPosition && a.compareDocumentPosition(bup) & 16\n\t            ));\n\t    } :\n\t    function (a, b) {\n\t        if (b) {\n\t            while (b) {\n\t                b = b.parentNode;\n\t                if (b == a) {\n\t                    return true;\n\t                }\n\t            }\n\t        }\n\t        return false;\n\t    };\n\tfunction getSomeDefs(el) {\n\t    var p = (el.node.ownerSVGElement && wrap(el.node.ownerSVGElement)) ||\n\t            (el.node.parentNode && wrap(el.node.parentNode)) ||\n\t            Snap.select(\"svg\") ||\n\t            Snap(0, 0),\n\t        pdefs = p.select(\"defs\"),\n\t        defs  = pdefs == null ? false : pdefs.node;\n\t    if (!defs) {\n\t        defs = make(\"defs\", p.node).node;\n\t    }\n\t    return defs;\n\t}\n\tfunction getSomeSVG(el) {\n\t    return el.node.ownerSVGElement && wrap(el.node.ownerSVGElement) || Snap.select(\"svg\");\n\t}\n\tSnap._.getSomeDefs = getSomeDefs;\n\tSnap._.getSomeSVG = getSomeSVG;\n\tfunction unit2px(el, name, value) {\n\t    var svg = getSomeSVG(el).node,\n\t        out = {},\n\t        mgr = svg.querySelector(\".svg---mgr\");\n\t    if (!mgr) {\n\t        mgr = $(\"rect\");\n\t        $(mgr, {x: -9e9, y: -9e9, width: 10, height: 10, \"class\": \"svg---mgr\", fill: \"none\"});\n\t        svg.appendChild(mgr);\n\t    }\n\t    function getW(val) {\n\t        if (val == null) {\n\t            return E;\n\t        }\n\t        if (val == +val) {\n\t            return val;\n\t        }\n\t        $(mgr, {width: val});\n\t        try {\n\t            return mgr.getBBox().width;\n\t        } catch (e) {\n\t            return 0;\n\t        }\n\t    }\n\t    function getH(val) {\n\t        if (val == null) {\n\t            return E;\n\t        }\n\t        if (val == +val) {\n\t            return val;\n\t        }\n\t        $(mgr, {height: val});\n\t        try {\n\t            return mgr.getBBox().height;\n\t        } catch (e) {\n\t            return 0;\n\t        }\n\t    }\n\t    function set(nam, f) {\n\t        if (name == null) {\n\t            out[nam] = f(el.attr(nam) || 0);\n\t        } else if (nam == name) {\n\t            out = f(value == null ? el.attr(nam) || 0 : value);\n\t        }\n\t    }\n\t    switch (el.type) {\n\t        case \"rect\":\n\t            set(\"rx\", getW);\n\t            set(\"ry\", getH);\n\t        case \"image\":\n\t            set(\"width\", getW);\n\t            set(\"height\", getH);\n\t        case \"text\":\n\t            set(\"x\", getW);\n\t            set(\"y\", getH);\n\t        break;\n\t        case \"circle\":\n\t            set(\"cx\", getW);\n\t            set(\"cy\", getH);\n\t            set(\"r\", getW);\n\t        break;\n\t        case \"ellipse\":\n\t            set(\"cx\", getW);\n\t            set(\"cy\", getH);\n\t            set(\"rx\", getW);\n\t            set(\"ry\", getH);\n\t        break;\n\t        case \"line\":\n\t            set(\"x1\", getW);\n\t            set(\"x2\", getW);\n\t            set(\"y1\", getH);\n\t            set(\"y2\", getH);\n\t        break;\n\t        case \"marker\":\n\t            set(\"refX\", getW);\n\t            set(\"markerWidth\", getW);\n\t            set(\"refY\", getH);\n\t            set(\"markerHeight\", getH);\n\t        break;\n\t        case \"radialGradient\":\n\t            set(\"fx\", getW);\n\t            set(\"fy\", getH);\n\t        break;\n\t        case \"tspan\":\n\t            set(\"dx\", getW);\n\t            set(\"dy\", getH);\n\t        break;\n\t        default:\n\t            set(name, getW);\n\t    }\n\t    svg.removeChild(mgr);\n\t    return out;\n\t}\n\t/*\\\n\t * Snap.select\n\t [ method ]\n\t **\n\t * Wraps a DOM element specified by CSS selector as @Element\n\t - query (string) CSS selector of the element\n\t = (Element) the current element\n\t\\*/\n\tSnap.select = function (query) {\n\t    query = Str(query).replace(/([^\\\\]):/g, \"$1\\\\:\");\n\t    return wrap(glob.doc.querySelector(query));\n\t};\n\t/*\\\n\t * Snap.selectAll\n\t [ method ]\n\t **\n\t * Wraps DOM elements specified by CSS selector as set or array of @Element\n\t - query (string) CSS selector of the element\n\t = (Element) the current element\n\t\\*/\n\tSnap.selectAll = function (query) {\n\t    var nodelist = glob.doc.querySelectorAll(query),\n\t        set = (Snap.set || Array)();\n\t    for (var i = 0; i < nodelist.length; i++) {\n\t        set.push(wrap(nodelist[i]));\n\t    }\n\t    return set;\n\t};\n\t\n\tfunction add2group(list) {\n\t    if (!is(list, \"array\")) {\n\t        list = Array.prototype.slice.call(arguments, 0);\n\t    }\n\t    var i = 0,\n\t        j = 0,\n\t        node = this.node;\n\t    while (this[i]) delete this[i++];\n\t    for (i = 0; i < list.length; i++) {\n\t        if (list[i].type == \"set\") {\n\t            list[i].forEach(function (el) {\n\t                node.appendChild(el.node);\n\t            });\n\t        } else {\n\t            node.appendChild(list[i].node);\n\t        }\n\t    }\n\t    var children = node.childNodes;\n\t    for (i = 0; i < children.length; i++) {\n\t        this[j++] = wrap(children[i]);\n\t    }\n\t    return this;\n\t}\n\t// Hub garbage collector every 10s\n\tsetInterval(function () {\n\t    for (var key in hub) if (hub[has](key)) {\n\t        var el = hub[key],\n\t            node = el.node;\n\t        if (el.type != \"svg\" && !node.ownerSVGElement || el.type == \"svg\" && (!node.parentNode || \"ownerSVGElement\" in node.parentNode && !node.ownerSVGElement)) {\n\t            delete hub[key];\n\t        }\n\t    }\n\t}, 1e4);\n\tfunction Element(el) {\n\t    if (el.snap in hub) {\n\t        return hub[el.snap];\n\t    }\n\t    var svg;\n\t    try {\n\t        svg = el.ownerSVGElement;\n\t    } catch(e) {}\n\t    /*\\\n\t     * Element.node\n\t     [ property (object) ]\n\t     **\n\t     * Gives you a reference to the DOM object, so you can assign event handlers or just mess around.\n\t     > Usage\n\t     | // draw a circle at coordinate 10,10 with radius of 10\n\t     | var c = paper.circle(10, 10, 10);\n\t     | c.node.onclick = function () {\n\t     |     c.attr(\"fill\", \"red\");\n\t     | };\n\t    \\*/\n\t    this.node = el;\n\t    if (svg) {\n\t        this.paper = new Paper(svg);\n\t    }\n\t    /*\\\n\t     * Element.type\n\t     [ property (string) ]\n\t     **\n\t     * SVG tag name of the given element.\n\t    \\*/\n\t    this.type = el.tagName || el.nodeName;\n\t    var id = this.id = ID(this);\n\t    this.anims = {};\n\t    this._ = {\n\t        transform: []\n\t    };\n\t    el.snap = id;\n\t    hub[id] = this;\n\t    if (this.type == \"g\") {\n\t        this.add = add2group;\n\t    }\n\t    if (this.type in {g: 1, mask: 1, pattern: 1, symbol: 1}) {\n\t        for (var method in Paper.prototype) if (Paper.prototype[has](method)) {\n\t            this[method] = Paper.prototype[method];\n\t        }\n\t    }\n\t}\n\t   /*\\\n\t     * Element.attr\n\t     [ method ]\n\t     **\n\t     * Gets or sets given attributes of the element.\n\t     **\n\t     - params (object) contains key-value pairs of attributes you want to set\n\t     * or\n\t     - param (string) name of the attribute\n\t     = (Element) the current element\n\t     * or\n\t     = (string) value of attribute\n\t     > Usage\n\t     | el.attr({\n\t     |     fill: \"#fc0\",\n\t     |     stroke: \"#000\",\n\t     |     strokeWidth: 2, // CamelCase...\n\t     |     \"fill-opacity\": 0.5, // or dash-separated names\n\t     |     width: \"*=2\" // prefixed values\n\t     | });\n\t     | console.log(el.attr(\"fill\")); // #fc0\n\t     * Prefixed values in format `\"+=10\"` supported. All four operations\n\t     * (`+`, `-`, `*` and `/`) could be used. Optionally you can use units for `+`\n\t     * and `-`: `\"+=2em\"`.\n\t    \\*/\n\t    Element.prototype.attr = function (params, value) {\n\t        var el = this,\n\t            node = el.node;\n\t        if (!params) {\n\t            if (node.nodeType != 1) {\n\t                return {\n\t                    text: node.nodeValue\n\t                };\n\t            }\n\t            var attr = node.attributes,\n\t                out = {};\n\t            for (var i = 0, ii = attr.length; i < ii; i++) {\n\t                out[attr[i].nodeName] = attr[i].nodeValue;\n\t            }\n\t            return out;\n\t        }\n\t        if (is(params, \"string\")) {\n\t            if (arguments.length > 1) {\n\t                var json = {};\n\t                json[params] = value;\n\t                params = json;\n\t            } else {\n\t                return eve(\"snap.util.getattr.\" + params, el).firstDefined();\n\t            }\n\t        }\n\t        for (var att in params) {\n\t            if (params[has](att)) {\n\t                eve(\"snap.util.attr.\" + att, el, params[att]);\n\t            }\n\t        }\n\t        return el;\n\t    };\n\t/*\\\n\t * Snap.parse\n\t [ method ]\n\t **\n\t * Parses SVG fragment and converts it into a @Fragment\n\t **\n\t - svg (string) SVG string\n\t = (Fragment) the @Fragment\n\t\\*/\n\tSnap.parse = function (svg) {\n\t    var f = glob.doc.createDocumentFragment(),\n\t        full = true,\n\t        div = glob.doc.createElement(\"div\");\n\t    svg = Str(svg);\n\t    if (!svg.match(/^\\s*<\\s*svg(?:\\s|>)/)) {\n\t        svg = \"<svg>\" + svg + \"</svg>\";\n\t        full = false;\n\t    }\n\t    div.innerHTML = svg;\n\t    svg = div.getElementsByTagName(\"svg\")[0];\n\t    if (svg) {\n\t        if (full) {\n\t            f = svg;\n\t        } else {\n\t            while (svg.firstChild) {\n\t                f.appendChild(svg.firstChild);\n\t            }\n\t        }\n\t    }\n\t    return new Fragment(f);\n\t};\n\tfunction Fragment(frag) {\n\t    this.node = frag;\n\t}\n\t/*\\\n\t * Snap.fragment\n\t [ method ]\n\t **\n\t * Creates a DOM fragment from a given list of elements or strings\n\t **\n\t - varargs (…) SVG string\n\t = (Fragment) the @Fragment\n\t\\*/\n\tSnap.fragment = function () {\n\t    var args = Array.prototype.slice.call(arguments, 0),\n\t        f = glob.doc.createDocumentFragment();\n\t    for (var i = 0, ii = args.length; i < ii; i++) {\n\t        var item = args[i];\n\t        if (item.node && item.node.nodeType) {\n\t            f.appendChild(item.node);\n\t        }\n\t        if (item.nodeType) {\n\t            f.appendChild(item);\n\t        }\n\t        if (typeof item == \"string\") {\n\t            f.appendChild(Snap.parse(item).node);\n\t        }\n\t    }\n\t    return new Fragment(f);\n\t};\n\t\n\tfunction make(name, parent) {\n\t    var res = $(name);\n\t    parent.appendChild(res);\n\t    var el = wrap(res);\n\t    return el;\n\t}\n\tfunction Paper(w, h) {\n\t    var res,\n\t        desc,\n\t        defs,\n\t        proto = Paper.prototype;\n\t    if (w && w.tagName == \"svg\") {\n\t        if (w.snap in hub) {\n\t            return hub[w.snap];\n\t        }\n\t        var doc = w.ownerDocument;\n\t        res = new Element(w);\n\t        desc = w.getElementsByTagName(\"desc\")[0];\n\t        defs = w.getElementsByTagName(\"defs\")[0];\n\t        if (!desc) {\n\t            desc = $(\"desc\");\n\t            desc.appendChild(doc.createTextNode(\"Created with Snap\"));\n\t            res.node.appendChild(desc);\n\t        }\n\t        if (!defs) {\n\t            defs = $(\"defs\");\n\t            res.node.appendChild(defs);\n\t        }\n\t        res.defs = defs;\n\t        for (var key in proto) if (proto[has](key)) {\n\t            res[key] = proto[key];\n\t        }\n\t        res.paper = res.root = res;\n\t    } else {\n\t        res = make(\"svg\", glob.doc.body);\n\t        $(res.node, {\n\t            height: h,\n\t            version: 1.1,\n\t            width: w,\n\t            xmlns: xmlns\n\t        });\n\t    }\n\t    return res;\n\t}\n\tfunction wrap(dom) {\n\t    if (!dom) {\n\t        return dom;\n\t    }\n\t    if (dom instanceof Element || dom instanceof Fragment) {\n\t        return dom;\n\t    }\n\t    if (dom.tagName && dom.tagName.toLowerCase() == \"svg\") {\n\t        return new Paper(dom);\n\t    }\n\t    if (dom.tagName && dom.tagName.toLowerCase() == \"object\" && dom.type == \"image/svg+xml\") {\n\t        return new Paper(dom.contentDocument.getElementsByTagName(\"svg\")[0]);\n\t    }\n\t    return new Element(dom);\n\t}\n\t\n\tSnap._.make = make;\n\tSnap._.wrap = wrap;\n\t/*\\\n\t * Paper.el\n\t [ method ]\n\t **\n\t * Creates an element on paper with a given name and no attributes\n\t **\n\t - name (string) tag name\n\t - attr (object) attributes\n\t = (Element) the current element\n\t > Usage\n\t | var c = paper.circle(10, 10, 10); // is the same as...\n\t | var c = paper.el(\"circle\").attr({\n\t |     cx: 10,\n\t |     cy: 10,\n\t |     r: 10\n\t | });\n\t | // and the same as\n\t | var c = paper.el(\"circle\", {\n\t |     cx: 10,\n\t |     cy: 10,\n\t |     r: 10\n\t | });\n\t\\*/\n\tPaper.prototype.el = function (name, attr) {\n\t    var el = make(name, this.node);\n\t    attr && el.attr(attr);\n\t    return el;\n\t};\n\t/*\\\n\t * Element.children\n\t [ method ]\n\t **\n\t * Returns array of all the children of the element.\n\t = (array) array of Elements\n\t\\*/\n\tElement.prototype.children = function () {\n\t    var out = [],\n\t        ch = this.node.childNodes;\n\t    for (var i = 0, ii = ch.length; i < ii; i++) {\n\t        out[i] = Snap(ch[i]);\n\t    }\n\t    return out;\n\t};\n\tfunction jsonFiller(root, o) {\n\t    for (var i = 0, ii = root.length; i < ii; i++) {\n\t        var item = {\n\t                type: root[i].type,\n\t                attr: root[i].attr()\n\t            },\n\t            children = root[i].children();\n\t        o.push(item);\n\t        if (children.length) {\n\t            jsonFiller(children, item.childNodes = []);\n\t        }\n\t    }\n\t}\n\t/*\\\n\t * Element.toJSON\n\t [ method ]\n\t **\n\t * Returns object representation of the given element and all its children.\n\t = (object) in format\n\t o {\n\t o     type (string) this.type,\n\t o     attr (object) attributes map,\n\t o     childNodes (array) optional array of children in the same format\n\t o }\n\t\\*/\n\tElement.prototype.toJSON = function () {\n\t    var out = [];\n\t    jsonFiller([this], out);\n\t    return out[0];\n\t};\n\t// default\n\teve.on(\"snap.util.getattr\", function () {\n\t    var att = eve.nt();\n\t    att = att.substring(att.lastIndexOf(\".\") + 1);\n\t    var css = att.replace(/[A-Z]/g, function (letter) {\n\t        return \"-\" + letter.toLowerCase();\n\t    });\n\t    if (cssAttr[has](css)) {\n\t        return this.node.ownerDocument.defaultView.getComputedStyle(this.node, null).getPropertyValue(css);\n\t    } else {\n\t        return $(this.node, att);\n\t    }\n\t});\n\tvar cssAttr = {\n\t    \"alignment-baseline\": 0,\n\t    \"baseline-shift\": 0,\n\t    \"clip\": 0,\n\t    \"clip-path\": 0,\n\t    \"clip-rule\": 0,\n\t    \"color\": 0,\n\t    \"color-interpolation\": 0,\n\t    \"color-interpolation-filters\": 0,\n\t    \"color-profile\": 0,\n\t    \"color-rendering\": 0,\n\t    \"cursor\": 0,\n\t    \"direction\": 0,\n\t    \"display\": 0,\n\t    \"dominant-baseline\": 0,\n\t    \"enable-background\": 0,\n\t    \"fill\": 0,\n\t    \"fill-opacity\": 0,\n\t    \"fill-rule\": 0,\n\t    \"filter\": 0,\n\t    \"flood-color\": 0,\n\t    \"flood-opacity\": 0,\n\t    \"font\": 0,\n\t    \"font-family\": 0,\n\t    \"font-size\": 0,\n\t    \"font-size-adjust\": 0,\n\t    \"font-stretch\": 0,\n\t    \"font-style\": 0,\n\t    \"font-variant\": 0,\n\t    \"font-weight\": 0,\n\t    \"glyph-orientation-horizontal\": 0,\n\t    \"glyph-orientation-vertical\": 0,\n\t    \"image-rendering\": 0,\n\t    \"kerning\": 0,\n\t    \"letter-spacing\": 0,\n\t    \"lighting-color\": 0,\n\t    \"marker\": 0,\n\t    \"marker-end\": 0,\n\t    \"marker-mid\": 0,\n\t    \"marker-start\": 0,\n\t    \"mask\": 0,\n\t    \"opacity\": 0,\n\t    \"overflow\": 0,\n\t    \"pointer-events\": 0,\n\t    \"shape-rendering\": 0,\n\t    \"stop-color\": 0,\n\t    \"stop-opacity\": 0,\n\t    \"stroke\": 0,\n\t    \"stroke-dasharray\": 0,\n\t    \"stroke-dashoffset\": 0,\n\t    \"stroke-linecap\": 0,\n\t    \"stroke-linejoin\": 0,\n\t    \"stroke-miterlimit\": 0,\n\t    \"stroke-opacity\": 0,\n\t    \"stroke-width\": 0,\n\t    \"text-anchor\": 0,\n\t    \"text-decoration\": 0,\n\t    \"text-rendering\": 0,\n\t    \"unicode-bidi\": 0,\n\t    \"visibility\": 0,\n\t    \"word-spacing\": 0,\n\t    \"writing-mode\": 0\n\t};\n\t\n\teve.on(\"snap.util.attr\", function (value) {\n\t    var att = eve.nt(),\n\t        attr = {};\n\t    att = att.substring(att.lastIndexOf(\".\") + 1);\n\t    attr[att] = value;\n\t    var style = att.replace(/-(\\w)/gi, function (all, letter) {\n\t            return letter.toUpperCase();\n\t        }),\n\t        css = att.replace(/[A-Z]/g, function (letter) {\n\t            return \"-\" + letter.toLowerCase();\n\t        });\n\t    if (cssAttr[has](css)) {\n\t        this.node.style[style] = value == null ? E : value;\n\t    } else {\n\t        $(this.node, attr);\n\t    }\n\t});\n\t(function (proto) {}(Paper.prototype));\n\t\n\t// simple ajax\n\t/*\\\n\t * Snap.ajax\n\t [ method ]\n\t **\n\t * Simple implementation of Ajax\n\t **\n\t - url (string) URL\n\t - postData (object|string) data for post request\n\t - callback (function) callback\n\t - scope (object) #optional scope of callback\n\t * or\n\t - url (string) URL\n\t - callback (function) callback\n\t - scope (object) #optional scope of callback\n\t = (XMLHttpRequest) the XMLHttpRequest object, just in case\n\t\\*/\n\tSnap.ajax = function (url, postData, callback, scope){\n\t    var req = new XMLHttpRequest,\n\t        id = ID();\n\t    if (req) {\n\t        if (is(postData, \"function\")) {\n\t            scope = callback;\n\t            callback = postData;\n\t            postData = null;\n\t        } else if (is(postData, \"object\")) {\n\t            var pd = [];\n\t            for (var key in postData) if (postData.hasOwnProperty(key)) {\n\t                pd.push(encodeURIComponent(key) + \"=\" + encodeURIComponent(postData[key]));\n\t            }\n\t            postData = pd.join(\"&\");\n\t        }\n\t        req.open((postData ? \"POST\" : \"GET\"), url, true);\n\t        if (postData) {\n\t            req.setRequestHeader(\"X-Requested-With\", \"XMLHttpRequest\");\n\t            req.setRequestHeader(\"Content-type\", \"application/x-www-form-urlencoded\");\n\t        }\n\t        if (callback) {\n\t            eve.once(\"snap.ajax.\" + id + \".0\", callback);\n\t            eve.once(\"snap.ajax.\" + id + \".200\", callback);\n\t            eve.once(\"snap.ajax.\" + id + \".304\", callback);\n\t        }\n\t        req.onreadystatechange = function() {\n\t            if (req.readyState != 4) return;\n\t            eve(\"snap.ajax.\" + id + \".\" + req.status, scope, req);\n\t        };\n\t        if (req.readyState == 4) {\n\t            return req;\n\t        }\n\t        req.send(postData);\n\t        return req;\n\t    }\n\t};\n\t/*\\\n\t * Snap.load\n\t [ method ]\n\t **\n\t * Loads external SVG file as a @Fragment (see @Snap.ajax for more advanced AJAX)\n\t **\n\t - url (string) URL\n\t - callback (function) callback\n\t - scope (object) #optional scope of callback\n\t\\*/\n\tSnap.load = function (url, callback, scope) {\n\t    Snap.ajax(url, function (req) {\n\t        var f = Snap.parse(req.responseText);\n\t        scope ? callback.call(scope, f) : callback(f);\n\t    });\n\t};\n\tvar getOffset = function (elem) {\n\t    var box = elem.getBoundingClientRect(),\n\t        doc = elem.ownerDocument,\n\t        body = doc.body,\n\t        docElem = doc.documentElement,\n\t        clientTop = docElem.clientTop || body.clientTop || 0, clientLeft = docElem.clientLeft || body.clientLeft || 0,\n\t        top  = box.top  + (g.win.pageYOffset || docElem.scrollTop || body.scrollTop ) - clientTop,\n\t        left = box.left + (g.win.pageXOffset || docElem.scrollLeft || body.scrollLeft) - clientLeft;\n\t    return {\n\t        y: top,\n\t        x: left\n\t    };\n\t};\n\t/*\\\n\t * Snap.getElementByPoint\n\t [ method ]\n\t **\n\t * Returns you topmost element under given point.\n\t **\n\t = (object) Snap element object\n\t - x (number) x coordinate from the top left corner of the window\n\t - y (number) y coordinate from the top left corner of the window\n\t > Usage\n\t | Snap.getElementByPoint(mouseX, mouseY).attr({stroke: \"#f00\"});\n\t\\*/\n\tSnap.getElementByPoint = function (x, y) {\n\t    var paper = this,\n\t        svg = paper.canvas,\n\t        target = glob.doc.elementFromPoint(x, y);\n\t    if (glob.win.opera && target.tagName == \"svg\") {\n\t        var so = getOffset(target),\n\t            sr = target.createSVGRect();\n\t        sr.x = x - so.x;\n\t        sr.y = y - so.y;\n\t        sr.width = sr.height = 1;\n\t        var hits = target.getIntersectionList(sr, null);\n\t        if (hits.length) {\n\t            target = hits[hits.length - 1];\n\t        }\n\t    }\n\t    if (!target) {\n\t        return null;\n\t    }\n\t    return wrap(target);\n\t};\n\t/*\\\n\t * Snap.plugin\n\t [ method ]\n\t **\n\t * Let you write plugins. You pass in a function with five arguments, like this:\n\t | Snap.plugin(function (Snap, Element, Paper, global, Fragment) {\n\t |     Snap.newmethod = function () {};\n\t |     Element.prototype.newmethod = function () {};\n\t |     Paper.prototype.newmethod = function () {};\n\t | });\n\t * Inside the function you have access to all main objects (and their\n\t * prototypes). This allow you to extend anything you want.\n\t **\n\t - f (function) your plugin body\n\t\\*/\n\tSnap.plugin = function (f) {\n\t    f(Snap, Element, Paper, glob, Fragment);\n\t};\n\tglob.win.Snap = Snap;\n\treturn Snap;\n\t}(window || this));\n\t\n\t// Copyright (c) 2013 Adobe Systems Incorporated. All rights reserved.\n\t//\n\t// Licensed under the Apache License, Version 2.0 (the \"License\");\n\t// you may not use this file except in compliance with the License.\n\t// You may obtain a copy of the License at\n\t//\n\t// http://www.apache.org/licenses/LICENSE-2.0\n\t//\n\t// Unless required by applicable law or agreed to in writing, software\n\t// distributed under the License is distributed on an \"AS IS\" BASIS,\n\t// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n\t// See the License for the specific language governing permissions and\n\t// limitations under the License.\n\tSnap.plugin(function (Snap, Element, Paper, glob, Fragment) {\n\t    var elproto = Element.prototype,\n\t        is = Snap.is,\n\t        Str = String,\n\t        unit2px = Snap._unit2px,\n\t        $ = Snap._.$,\n\t        make = Snap._.make,\n\t        getSomeDefs = Snap._.getSomeDefs,\n\t        has = \"hasOwnProperty\",\n\t        wrap = Snap._.wrap;\n\t    /*\\\n\t     * Element.getBBox\n\t     [ method ]\n\t     **\n\t     * Returns the bounding box descriptor for the given element\n\t     **\n\t     = (object) bounding box descriptor:\n\t     o {\n\t     o     cx: (number) x of the center,\n\t     o     cy: (number) x of the center,\n\t     o     h: (number) height,\n\t     o     height: (number) height,\n\t     o     path: (string) path command for the box,\n\t     o     r0: (number) radius of a circle that fully encloses the box,\n\t     o     r1: (number) radius of the smallest circle that can be enclosed,\n\t     o     r2: (number) radius of the largest circle that can be enclosed,\n\t     o     vb: (string) box as a viewbox command,\n\t     o     w: (number) width,\n\t     o     width: (number) width,\n\t     o     x2: (number) x of the right side,\n\t     o     x: (number) x of the left side,\n\t     o     y2: (number) y of the bottom edge,\n\t     o     y: (number) y of the top edge\n\t     o }\n\t    \\*/\n\t    elproto.getBBox = function (isWithoutTransform) {\n\t        if (!Snap.Matrix || !Snap.path) {\n\t            return this.node.getBBox();\n\t        }\n\t        var el = this,\n\t            m = new Snap.Matrix;\n\t        if (el.removed) {\n\t            return Snap._.box();\n\t        }\n\t        while (el.type == \"use\") {\n\t            if (!isWithoutTransform) {\n\t                m = m.add(el.transform().localMatrix.translate(el.attr(\"x\") || 0, el.attr(\"y\") || 0));\n\t            }\n\t            if (el.original) {\n\t                el = el.original;\n\t            } else {\n\t                var href = el.attr(\"xlink:href\");\n\t                el = el.original = el.node.ownerDocument.getElementById(href.substring(href.indexOf(\"#\") + 1));\n\t            }\n\t        }\n\t        var _ = el._,\n\t            pathfinder = Snap.path.get[el.type] || Snap.path.get.deflt;\n\t        try {\n\t            if (isWithoutTransform) {\n\t                _.bboxwt = pathfinder ? Snap.path.getBBox(el.realPath = pathfinder(el)) : Snap._.box(el.node.getBBox());\n\t                return Snap._.box(_.bboxwt);\n\t            } else {\n\t                el.realPath = pathfinder(el);\n\t                el.matrix = el.transform().localMatrix;\n\t                _.bbox = Snap.path.getBBox(Snap.path.map(el.realPath, m.add(el.matrix)));\n\t                return Snap._.box(_.bbox);\n\t            }\n\t        } catch (e) {\n\t            // Firefox doesn’t give you bbox of hidden element\n\t            return Snap._.box();\n\t        }\n\t    };\n\t    var propString = function () {\n\t        return this.string;\n\t    };\n\t    function extractTransform(el, tstr) {\n\t        if (tstr == null) {\n\t            var doReturn = true;\n\t            if (el.type == \"linearGradient\" || el.type == \"radialGradient\") {\n\t                tstr = el.node.getAttribute(\"gradientTransform\");\n\t            } else if (el.type == \"pattern\") {\n\t                tstr = el.node.getAttribute(\"patternTransform\");\n\t            } else {\n\t                tstr = el.node.getAttribute(\"transform\");\n\t            }\n\t            if (!tstr) {\n\t                return new Snap.Matrix;\n\t            }\n\t            tstr = Snap._.svgTransform2string(tstr);\n\t        } else {\n\t            if (!Snap._.rgTransform.test(tstr)) {\n\t                tstr = Snap._.svgTransform2string(tstr);\n\t            } else {\n\t                tstr = Str(tstr).replace(/\\.{3}|\\u2026/g, el._.transform || E);\n\t            }\n\t            if (is(tstr, \"array\")) {\n\t                tstr = Snap.path ? Snap.path.toString.call(tstr) : Str(tstr);\n\t            }\n\t            el._.transform = tstr;\n\t        }\n\t        var m = Snap._.transform2matrix(tstr, el.getBBox(1));\n\t        if (doReturn) {\n\t            return m;\n\t        } else {\n\t            el.matrix = m;\n\t        }\n\t    }\n\t    /*\\\n\t     * Element.transform\n\t     [ method ]\n\t     **\n\t     * Gets or sets transformation of the element\n\t     **\n\t     - tstr (string) transform string in Snap or SVG format\n\t     = (Element) the current element\n\t     * or\n\t     = (object) transformation descriptor:\n\t     o {\n\t     o     string (string) transform string,\n\t     o     globalMatrix (Matrix) matrix of all transformations applied to element or its parents,\n\t     o     localMatrix (Matrix) matrix of transformations applied only to the element,\n\t     o     diffMatrix (Matrix) matrix of difference between global and local transformations,\n\t     o     global (string) global transformation as string,\n\t     o     local (string) local transformation as string,\n\t     o     toString (function) returns `string` property\n\t     o }\n\t    \\*/\n\t    elproto.transform = function (tstr) {\n\t        var _ = this._;\n\t        if (tstr == null) {\n\t            var papa = this,\n\t                global = new Snap.Matrix(this.node.getCTM()),\n\t                local = extractTransform(this),\n\t                ms = [local],\n\t                m = new Snap.Matrix,\n\t                i,\n\t                localString = local.toTransformString(),\n\t                string = Str(local) == Str(this.matrix) ?\n\t                            Str(_.transform) : localString;\n\t            while (papa.type != \"svg\" && (papa = papa.parent())) {\n\t                ms.push(extractTransform(papa));\n\t            }\n\t            i = ms.length;\n\t            while (i--) {\n\t                m.add(ms[i]);\n\t            }\n\t            return {\n\t                string: string,\n\t                globalMatrix: global,\n\t                totalMatrix: m,\n\t                localMatrix: local,\n\t                diffMatrix: global.clone().add(local.invert()),\n\t                global: global.toTransformString(),\n\t                total: m.toTransformString(),\n\t                local: localString,\n\t                toString: propString\n\t            };\n\t        }\n\t        if (tstr instanceof Snap.Matrix) {\n\t            this.matrix = tstr;\n\t            this._.transform = tstr.toTransformString();\n\t        } else {\n\t            extractTransform(this, tstr);\n\t        }\n\t\n\t        if (this.node) {\n\t            if (this.type == \"linearGradient\" || this.type == \"radialGradient\") {\n\t                $(this.node, {gradientTransform: this.matrix});\n\t            } else if (this.type == \"pattern\") {\n\t                $(this.node, {patternTransform: this.matrix});\n\t            } else {\n\t                $(this.node, {transform: this.matrix});\n\t            }\n\t        }\n\t\n\t        return this;\n\t    };\n\t    /*\\\n\t     * Element.parent\n\t     [ method ]\n\t     **\n\t     * Returns the element's parent\n\t     **\n\t     = (Element) the parent element\n\t    \\*/\n\t    elproto.parent = function () {\n\t        return wrap(this.node.parentNode);\n\t    };\n\t    /*\\\n\t     * Element.append\n\t     [ method ]\n\t     **\n\t     * Appends the given element to current one\n\t     **\n\t     - el (Element|Set) element to append\n\t     = (Element) the parent element\n\t    \\*/\n\t    /*\\\n\t     * Element.add\n\t     [ method ]\n\t     **\n\t     * See @Element.append\n\t    \\*/\n\t    elproto.append = elproto.add = function (el) {\n\t        if (el) {\n\t            if (el.type == \"set\") {\n\t                var it = this;\n\t                el.forEach(function (el) {\n\t                    it.add(el);\n\t                });\n\t                return this;\n\t            }\n\t            el = wrap(el);\n\t            this.node.appendChild(el.node);\n\t            el.paper = this.paper;\n\t        }\n\t        return this;\n\t    };\n\t    /*\\\n\t     * Element.appendTo\n\t     [ method ]\n\t     **\n\t     * Appends the current element to the given one\n\t     **\n\t     - el (Element) parent element to append to\n\t     = (Element) the child element\n\t    \\*/\n\t    elproto.appendTo = function (el) {\n\t        if (el) {\n\t            el = wrap(el);\n\t            el.append(this);\n\t        }\n\t        return this;\n\t    };\n\t    /*\\\n\t     * Element.prepend\n\t     [ method ]\n\t     **\n\t     * Prepends the given element to the current one\n\t     **\n\t     - el (Element) element to prepend\n\t     = (Element) the parent element\n\t    \\*/\n\t    elproto.prepend = function (el) {\n\t        if (el) {\n\t            if (el.type == \"set\") {\n\t                var it = this,\n\t                    first;\n\t                el.forEach(function (el) {\n\t                    if (first) {\n\t                        first.after(el);\n\t                    } else {\n\t                        it.prepend(el);\n\t                    }\n\t                    first = el;\n\t                });\n\t                return this;\n\t            }\n\t            el = wrap(el);\n\t            var parent = el.parent();\n\t            this.node.insertBefore(el.node, this.node.firstChild);\n\t            this.add && this.add();\n\t            el.paper = this.paper;\n\t            this.parent() && this.parent().add();\n\t            parent && parent.add();\n\t        }\n\t        return this;\n\t    };\n\t    /*\\\n\t     * Element.prependTo\n\t     [ method ]\n\t     **\n\t     * Prepends the current element to the given one\n\t     **\n\t     - el (Element) parent element to prepend to\n\t     = (Element) the child element\n\t    \\*/\n\t    elproto.prependTo = function (el) {\n\t        el = wrap(el);\n\t        el.prepend(this);\n\t        return this;\n\t    };\n\t    /*\\\n\t     * Element.before\n\t     [ method ]\n\t     **\n\t     * Inserts given element before the current one\n\t     **\n\t     - el (Element) element to insert\n\t     = (Element) the parent element\n\t    \\*/\n\t    elproto.before = function (el) {\n\t        if (el.type == \"set\") {\n\t            var it = this;\n\t            el.forEach(function (el) {\n\t                var parent = el.parent();\n\t                it.node.parentNode.insertBefore(el.node, it.node);\n\t                parent && parent.add();\n\t            });\n\t            this.parent().add();\n\t            return this;\n\t        }\n\t        el = wrap(el);\n\t        var parent = el.parent();\n\t        this.node.parentNode.insertBefore(el.node, this.node);\n\t        this.parent() && this.parent().add();\n\t        parent && parent.add();\n\t        el.paper = this.paper;\n\t        return this;\n\t    };\n\t    /*\\\n\t     * Element.after\n\t     [ method ]\n\t     **\n\t     * Inserts given element after the current one\n\t     **\n\t     - el (Element) element to insert\n\t     = (Element) the parent element\n\t    \\*/\n\t    elproto.after = function (el) {\n\t        el = wrap(el);\n\t        var parent = el.parent();\n\t        if (this.node.nextSibling) {\n\t            this.node.parentNode.insertBefore(el.node, this.node.nextSibling);\n\t        } else {\n\t            this.node.parentNode.appendChild(el.node);\n\t        }\n\t        this.parent() && this.parent().add();\n\t        parent && parent.add();\n\t        el.paper = this.paper;\n\t        return this;\n\t    };\n\t    /*\\\n\t     * Element.insertBefore\n\t     [ method ]\n\t     **\n\t     * Inserts the element after the given one\n\t     **\n\t     - el (Element) element next to whom insert to\n\t     = (Element) the parent element\n\t    \\*/\n\t    elproto.insertBefore = function (el) {\n\t        el = wrap(el);\n\t        var parent = this.parent();\n\t        el.node.parentNode.insertBefore(this.node, el.node);\n\t        this.paper = el.paper;\n\t        parent && parent.add();\n\t        el.parent() && el.parent().add();\n\t        return this;\n\t    };\n\t    /*\\\n\t     * Element.insertAfter\n\t     [ method ]\n\t     **\n\t     * Inserts the element after the given one\n\t     **\n\t     - el (Element) element next to whom insert to\n\t     = (Element) the parent element\n\t    \\*/\n\t    elproto.insertAfter = function (el) {\n\t        el = wrap(el);\n\t        var parent = this.parent();\n\t        el.node.parentNode.insertBefore(this.node, el.node.nextSibling);\n\t        this.paper = el.paper;\n\t        parent && parent.add();\n\t        el.parent() && el.parent().add();\n\t        return this;\n\t    };\n\t    /*\\\n\t     * Element.remove\n\t     [ method ]\n\t     **\n\t     * Removes element from the DOM\n\t     = (Element) the detached element\n\t    \\*/\n\t    elproto.remove = function () {\n\t        var parent = this.parent();\n\t        this.node.parentNode && this.node.parentNode.removeChild(this.node);\n\t        delete this.paper;\n\t        this.removed = true;\n\t        parent && parent.add();\n\t        return this;\n\t    };\n\t    /*\\\n\t     * Element.select\n\t     [ method ]\n\t     **\n\t     * Gathers the nested @Element matching the given set of CSS selectors\n\t     **\n\t     - query (string) CSS selector\n\t     = (Element) result of query selection\n\t    \\*/\n\t    elproto.select = function (query) {\n\t        query = Str(query).replace(/([^\\\\]):/g, \"$1\\\\:\");\n\t        return wrap(this.node.querySelector(query));\n\t    };\n\t    /*\\\n\t     * Element.selectAll\n\t     [ method ]\n\t     **\n\t     * Gathers nested @Element objects matching the given set of CSS selectors\n\t     **\n\t     - query (string) CSS selector\n\t     = (Set|array) result of query selection\n\t    \\*/\n\t    elproto.selectAll = function (query) {\n\t        var nodelist = this.node.querySelectorAll(query),\n\t            set = (Snap.set || Array)();\n\t        for (var i = 0; i < nodelist.length; i++) {\n\t            set.push(wrap(nodelist[i]));\n\t        }\n\t        return set;\n\t    };\n\t    /*\\\n\t     * Element.asPX\n\t     [ method ]\n\t     **\n\t     * Returns given attribute of the element as a `px` value (not %, em, etc.)\n\t     **\n\t     - attr (string) attribute name\n\t     - value (string) #optional attribute value\n\t     = (Element) result of query selection\n\t    \\*/\n\t    elproto.asPX = function (attr, value) {\n\t        if (value == null) {\n\t            value = this.attr(attr);\n\t        }\n\t        return +unit2px(this, attr, value);\n\t    };\n\t    // SIERRA Element.use(): I suggest adding a note about how to access the original element the returned <use> instantiates. It's a part of SVG with which ordinary web developers may be least familiar.\n\t    /*\\\n\t     * Element.use\n\t     [ method ]\n\t     **\n\t     * Creates a `<use>` element linked to the current element\n\t     **\n\t     = (Element) the `<use>` element\n\t    \\*/\n\t    elproto.use = function () {\n\t        var use,\n\t            id = this.node.id;\n\t        if (!id) {\n\t            id = this.id;\n\t            $(this.node, {\n\t                id: id\n\t            });\n\t        }\n\t        if (this.type == \"linearGradient\" || this.type == \"radialGradient\" ||\n\t            this.type == \"pattern\") {\n\t            use = make(this.type, this.node.parentNode);\n\t        } else {\n\t            use = make(\"use\", this.node.parentNode);\n\t        }\n\t        $(use.node, {\n\t            \"xlink:href\": \"#\" + id\n\t        });\n\t        use.original = this;\n\t        return use;\n\t    };\n\t    function fixids(el) {\n\t        var els = el.selectAll(\"*\"),\n\t            it,\n\t            url = /^\\s*url\\((\"|'|)(.*)\\1\\)\\s*$/,\n\t            ids = [],\n\t            uses = {};\n\t        function urltest(it, name) {\n\t            var val = $(it.node, name);\n\t            val = val && val.match(url);\n\t            val = val && val[2];\n\t            if (val && val.charAt() == \"#\") {\n\t                val = val.substring(1);\n\t            } else {\n\t                return;\n\t            }\n\t            if (val) {\n\t                uses[val] = (uses[val] || []).concat(function (id) {\n\t                    var attr = {};\n\t                    attr[name] = URL(id);\n\t                    $(it.node, attr);\n\t                });\n\t            }\n\t        }\n\t        function linktest(it) {\n\t            var val = $(it.node, \"xlink:href\");\n\t            if (val && val.charAt() == \"#\") {\n\t                val = val.substring(1);\n\t            } else {\n\t                return;\n\t            }\n\t            if (val) {\n\t                uses[val] = (uses[val] || []).concat(function (id) {\n\t                    it.attr(\"xlink:href\", \"#\" + id);\n\t                });\n\t            }\n\t        }\n\t        for (var i = 0, ii = els.length; i < ii; i++) {\n\t            it = els[i];\n\t            urltest(it, \"fill\");\n\t            urltest(it, \"stroke\");\n\t            urltest(it, \"filter\");\n\t            urltest(it, \"mask\");\n\t            urltest(it, \"clip-path\");\n\t            linktest(it);\n\t            var oldid = $(it.node, \"id\");\n\t            if (oldid) {\n\t                $(it.node, {id: it.id});\n\t                ids.push({\n\t                    old: oldid,\n\t                    id: it.id\n\t                });\n\t            }\n\t        }\n\t        for (i = 0, ii = ids.length; i < ii; i++) {\n\t            var fs = uses[ids[i].old];\n\t            if (fs) {\n\t                for (var j = 0, jj = fs.length; j < jj; j++) {\n\t                    fs[j](ids[i].id);\n\t                }\n\t            }\n\t        }\n\t    }\n\t    /*\\\n\t     * Element.clone\n\t     [ method ]\n\t     **\n\t     * Creates a clone of the element and inserts it after the element\n\t     **\n\t     = (Element) the clone\n\t    \\*/\n\t    elproto.clone = function () {\n\t        var clone = wrap(this.node.cloneNode(true));\n\t        if ($(clone.node, \"id\")) {\n\t            $(clone.node, {id: clone.id});\n\t        }\n\t        fixids(clone);\n\t        clone.insertAfter(this);\n\t        return clone;\n\t    };\n\t    /*\\\n\t     * Element.toDefs\n\t     [ method ]\n\t     **\n\t     * Moves element to the shared `<defs>` area\n\t     **\n\t     = (Element) the element\n\t    \\*/\n\t    elproto.toDefs = function () {\n\t        var defs = getSomeDefs(this);\n\t        defs.appendChild(this.node);\n\t        return this;\n\t    };\n\t    /*\\\n\t     * Element.toPattern\n\t     [ method ]\n\t     **\n\t     * Creates a `<pattern>` element from the current element\n\t     **\n\t     * To create a pattern you have to specify the pattern rect:\n\t     - x (string|number)\n\t     - y (string|number)\n\t     - width (string|number)\n\t     - height (string|number)\n\t     = (Element) the `<pattern>` element\n\t     * You can use pattern later on as an argument for `fill` attribute:\n\t     | var p = paper.path(\"M10-5-10,15M15,0,0,15M0-5-20,15\").attr({\n\t     |         fill: \"none\",\n\t     |         stroke: \"#bada55\",\n\t     |         strokeWidth: 5\n\t     |     }).pattern(0, 0, 10, 10),\n\t     |     c = paper.circle(200, 200, 100);\n\t     | c.attr({\n\t     |     fill: p\n\t     | });\n\t    \\*/\n\t    elproto.pattern = elproto.toPattern = function (x, y, width, height) {\n\t        var p = make(\"pattern\", getSomeDefs(this));\n\t        if (x == null) {\n\t            x = this.getBBox();\n\t        }\n\t        if (is(x, \"object\") && \"x\" in x) {\n\t            y = x.y;\n\t            width = x.width;\n\t            height = x.height;\n\t            x = x.x;\n\t        }\n\t        $(p.node, {\n\t            x: x,\n\t            y: y,\n\t            width: width,\n\t            height: height,\n\t            patternUnits: \"userSpaceOnUse\",\n\t            id: p.id,\n\t            viewBox: [x, y, width, height].join(\" \")\n\t        });\n\t        p.node.appendChild(this.node);\n\t        return p;\n\t    };\n\t// SIERRA Element.marker(): clarify what a reference point is. E.g., helps you offset the object from its edge such as when centering it over a path.\n\t// SIERRA Element.marker(): I suggest the method should accept default reference point values.  Perhaps centered with (refX = width/2) and (refY = height/2)? Also, couldn't it assume the element's current _width_ and _height_? And please specify what _x_ and _y_ mean: offsets? If so, from where?  Couldn't they also be assigned default values?\n\t    /*\\\n\t     * Element.marker\n\t     [ method ]\n\t     **\n\t     * Creates a `<marker>` element from the current element\n\t     **\n\t     * To create a marker you have to specify the bounding rect and reference point:\n\t     - x (number)\n\t     - y (number)\n\t     - width (number)\n\t     - height (number)\n\t     - refX (number)\n\t     - refY (number)\n\t     = (Element) the `<marker>` element\n\t     * You can specify the marker later as an argument for `marker-start`, `marker-end`, `marker-mid`, and `marker` attributes. The `marker` attribute places the marker at every point along the path, and `marker-mid` places them at every point except the start and end.\n\t    \\*/\n\t    // TODO add usage for markers\n\t    elproto.marker = function (x, y, width, height, refX, refY) {\n\t        var p = make(\"marker\", getSomeDefs(this));\n\t        if (x == null) {\n\t            x = this.getBBox();\n\t        }\n\t        if (is(x, \"object\") && \"x\" in x) {\n\t            y = x.y;\n\t            width = x.width;\n\t            height = x.height;\n\t            refX = x.refX || x.cx;\n\t            refY = x.refY || x.cy;\n\t            x = x.x;\n\t        }\n\t        $(p.node, {\n\t            viewBox: [x, y, width, height].join(\" \"),\n\t            markerWidth: width,\n\t            markerHeight: height,\n\t            orient: \"auto\",\n\t            refX: refX || 0,\n\t            refY: refY || 0,\n\t            id: p.id\n\t        });\n\t        p.node.appendChild(this.node);\n\t        return p;\n\t    };\n\t    // animation\n\t    function slice(from, to, f) {\n\t        return function (arr) {\n\t            var res = arr.slice(from, to);\n\t            if (res.length == 1) {\n\t                res = res[0];\n\t            }\n\t            return f ? f(res) : res;\n\t        };\n\t    }\n\t    var Animation = function (attr, ms, easing, callback) {\n\t        if (typeof easing == \"function\" && !easing.length) {\n\t            callback = easing;\n\t            easing = mina.linear;\n\t        }\n\t        this.attr = attr;\n\t        this.dur = ms;\n\t        easing && (this.easing = easing);\n\t        callback && (this.callback = callback);\n\t    };\n\t    Snap._.Animation = Animation;\n\t    /*\\\n\t     * Snap.animation\n\t     [ method ]\n\t     **\n\t     * Creates an animation object\n\t     **\n\t     - attr (object) attributes of final destination\n\t     - duration (number) duration of the animation, in milliseconds\n\t     - easing (function) #optional one of easing functions of @mina or custom one\n\t     - callback (function) #optional callback function that fires when animation ends\n\t     = (object) animation object\n\t    \\*/\n\t    Snap.animation = function (attr, ms, easing, callback) {\n\t        return new Animation(attr, ms, easing, callback);\n\t    };\n\t    /*\\\n\t     * Element.inAnim\n\t     [ method ]\n\t     **\n\t     * Returns a set of animations that may be able to manipulate the current element\n\t     **\n\t     = (object) in format:\n\t     o {\n\t     o     anim (object) animation object,\n\t     o     mina (object) @mina object,\n\t     o     curStatus (number) 0..1 — status of the animation: 0 — just started, 1 — just finished,\n\t     o     status (function) gets or sets the status of the animation,\n\t     o     stop (function) stops the animation\n\t     o }\n\t    \\*/\n\t    elproto.inAnim = function () {\n\t        var el = this,\n\t            res = [];\n\t        for (var id in el.anims) if (el.anims[has](id)) {\n\t            (function (a) {\n\t                res.push({\n\t                    anim: new Animation(a._attrs, a.dur, a.easing, a._callback),\n\t                    mina: a,\n\t                    curStatus: a.status(),\n\t                    status: function (val) {\n\t                        return a.status(val);\n\t                    },\n\t                    stop: function () {\n\t                        a.stop();\n\t                    }\n\t                });\n\t            }(el.anims[id]));\n\t        }\n\t        return res;\n\t    };\n\t    /*\\\n\t     * Snap.animate\n\t     [ method ]\n\t     **\n\t     * Runs generic animation of one number into another with a caring function\n\t     **\n\t     - from (number|array) number or array of numbers\n\t     - to (number|array) number or array of numbers\n\t     - setter (function) caring function that accepts one number argument\n\t     - duration (number) duration, in milliseconds\n\t     - easing (function) #optional easing function from @mina or custom\n\t     - callback (function) #optional callback function to execute when animation ends\n\t     = (object) animation object in @mina format\n\t     o {\n\t     o     id (string) animation id, consider it read-only,\n\t     o     duration (function) gets or sets the duration of the animation,\n\t     o     easing (function) easing,\n\t     o     speed (function) gets or sets the speed of the animation,\n\t     o     status (function) gets or sets the status of the animation,\n\t     o     stop (function) stops the animation\n\t     o }\n\t     | var rect = Snap().rect(0, 0, 10, 10);\n\t     | Snap.animate(0, 10, function (val) {\n\t     |     rect.attr({\n\t     |         x: val\n\t     |     });\n\t     | }, 1000);\n\t     | // in given context is equivalent to\n\t     | rect.animate({x: 10}, 1000);\n\t    \\*/\n\t    Snap.animate = function (from, to, setter, ms, easing, callback) {\n\t        if (typeof easing == \"function\" && !easing.length) {\n\t            callback = easing;\n\t            easing = mina.linear;\n\t        }\n\t        var now = mina.time(),\n\t            anim = mina(from, to, now, now + ms, mina.time, setter, easing);\n\t        callback && eve.once(\"mina.finish.\" + anim.id, callback);\n\t        return anim;\n\t    };\n\t    /*\\\n\t     * Element.stop\n\t     [ method ]\n\t     **\n\t     * Stops all the animations for the current element\n\t     **\n\t     = (Element) the current element\n\t    \\*/\n\t    elproto.stop = function () {\n\t        var anims = this.inAnim();\n\t        for (var i = 0, ii = anims.length; i < ii; i++) {\n\t            anims[i].stop();\n\t        }\n\t        return this;\n\t    };\n\t    /*\\\n\t     * Element.animate\n\t     [ method ]\n\t     **\n\t     * Animates the given attributes of the element\n\t     **\n\t     - attrs (object) key-value pairs of destination attributes\n\t     - duration (number) duration of the animation in milliseconds\n\t     - easing (function) #optional easing function from @mina or custom\n\t     - callback (function) #optional callback function that executes when the animation ends\n\t     = (Element) the current element\n\t    \\*/\n\t    elproto.animate = function (attrs, ms, easing, callback) {\n\t        if (typeof easing == \"function\" && !easing.length) {\n\t            callback = easing;\n\t            easing = mina.linear;\n\t        }\n\t        if (attrs instanceof Animation) {\n\t            callback = attrs.callback;\n\t            easing = attrs.easing;\n\t            ms = easing.dur;\n\t            attrs = attrs.attr;\n\t        }\n\t        var fkeys = [], tkeys = [], keys = {}, from, to, f, eq,\n\t            el = this;\n\t        for (var key in attrs) if (attrs[has](key)) {\n\t            if (el.equal) {\n\t                eq = el.equal(key, Str(attrs[key]));\n\t                from = eq.from;\n\t                to = eq.to;\n\t                f = eq.f;\n\t            } else {\n\t                from = +el.attr(key);\n\t                to = +attrs[key];\n\t            }\n\t            var len = is(from, \"array\") ? from.length : 1;\n\t            keys[key] = slice(fkeys.length, fkeys.length + len, f);\n\t            fkeys = fkeys.concat(from);\n\t            tkeys = tkeys.concat(to);\n\t        }\n\t        var now = mina.time(),\n\t            anim = mina(fkeys, tkeys, now, now + ms, mina.time, function (val) {\n\t                var attr = {};\n\t                for (var key in keys) if (keys[has](key)) {\n\t                    attr[key] = keys[key](val);\n\t                }\n\t                el.attr(attr);\n\t            }, easing);\n\t        el.anims[anim.id] = anim;\n\t        anim._attrs = attrs;\n\t        anim._callback = callback;\n\t        eve(\"snap.animcreated.\" + el.id, anim);\n\t        eve.once(\"mina.finish.\" + anim.id, function () {\n\t            delete el.anims[anim.id];\n\t            callback && callback.call(el);\n\t        });\n\t        eve.once(\"mina.stop.\" + anim.id, function () {\n\t            delete el.anims[anim.id];\n\t        });\n\t        return el;\n\t    };\n\t    var eldata = {};\n\t    /*\\\n\t     * Element.data\n\t     [ method ]\n\t     **\n\t     * Adds or retrieves given value associated with given key. (Don’t confuse\n\t     * with `data-` attributes)\n\t     *\n\t     * See also @Element.removeData\n\t     - key (string) key to store data\n\t     - value (any) #optional value to store\n\t     = (object) @Element\n\t     * or, if value is not specified:\n\t     = (any) value\n\t     > Usage\n\t     | for (var i = 0, i < 5, i++) {\n\t     |     paper.circle(10 + 15 * i, 10, 10)\n\t     |          .attr({fill: \"#000\"})\n\t     |          .data(\"i\", i)\n\t     |          .click(function () {\n\t     |             alert(this.data(\"i\"));\n\t     |          });\n\t     | }\n\t    \\*/\n\t    elproto.data = function (key, value) {\n\t        var data = eldata[this.id] = eldata[this.id] || {};\n\t        if (arguments.length == 0){\n\t            eve(\"snap.data.get.\" + this.id, this, data, null);\n\t            return data;\n\t        }\n\t        if (arguments.length == 1) {\n\t            if (Snap.is(key, \"object\")) {\n\t                for (var i in key) if (key[has](i)) {\n\t                    this.data(i, key[i]);\n\t                }\n\t                return this;\n\t            }\n\t            eve(\"snap.data.get.\" + this.id, this, data[key], key);\n\t            return data[key];\n\t        }\n\t        data[key] = value;\n\t        eve(\"snap.data.set.\" + this.id, this, value, key);\n\t        return this;\n\t    };\n\t    /*\\\n\t     * Element.removeData\n\t     [ method ]\n\t     **\n\t     * Removes value associated with an element by given key.\n\t     * If key is not provided, removes all the data of the element.\n\t     - key (string) #optional key\n\t     = (object) @Element\n\t    \\*/\n\t    elproto.removeData = function (key) {\n\t        if (key == null) {\n\t            eldata[this.id] = {};\n\t        } else {\n\t            eldata[this.id] && delete eldata[this.id][key];\n\t        }\n\t        return this;\n\t    };\n\t    /*\\\n\t     * Element.outerSVG\n\t     [ method ]\n\t     **\n\t     * Returns SVG code for the element, equivalent to HTML's `outerHTML`.\n\t     *\n\t     * See also @Element.innerSVG\n\t     = (string) SVG code for the element\n\t    \\*/\n\t    /*\\\n\t     * Element.toString\n\t     [ method ]\n\t     **\n\t     * See @Element.outerSVG\n\t    \\*/\n\t    elproto.outerSVG = elproto.toString = toString(1);\n\t    /*\\\n\t     * Element.innerSVG\n\t     [ method ]\n\t     **\n\t     * Returns SVG code for the element's contents, equivalent to HTML's `innerHTML`\n\t     = (string) SVG code for the element\n\t    \\*/\n\t    elproto.innerSVG = toString();\n\t    function toString(type) {\n\t        return function () {\n\t            var res = type ? \"<\" + this.type : \"\",\n\t                attr = this.node.attributes,\n\t                chld = this.node.childNodes;\n\t            if (type) {\n\t                for (var i = 0, ii = attr.length; i < ii; i++) {\n\t                    res += \" \" + attr[i].name + '=\"' +\n\t                            attr[i].value.replace(/\"/g, '\\\\\"') + '\"';\n\t                }\n\t            }\n\t            if (chld.length) {\n\t                type && (res += \">\");\n\t                for (i = 0, ii = chld.length; i < ii; i++) {\n\t                    if (chld[i].nodeType == 3) {\n\t                        res += chld[i].nodeValue;\n\t                    } else if (chld[i].nodeType == 1) {\n\t                        res += wrap(chld[i]).toString();\n\t                    }\n\t                }\n\t                type && (res += \"</\" + this.type + \">\");\n\t            } else {\n\t                type && (res += \"/>\");\n\t            }\n\t            return res;\n\t        };\n\t    }\n\t    elproto.toDataURL = function () {\n\t        if (window && window.btoa) {\n\t            var bb = this.getBBox(),\n\t                svg = Snap.format('<svg version=\"1.1\" xmlns=\"http://www.w3.org/2000/svg\" xmlns:xlink=\"http://www.w3.org/1999/xlink\" width=\"{width}\" height=\"{height}\" viewBox=\"{x} {y} {width} {height}\">{contents}</svg>', {\n\t                x: +bb.x.toFixed(3),\n\t                y: +bb.y.toFixed(3),\n\t                width: +bb.width.toFixed(3),\n\t                height: +bb.height.toFixed(3),\n\t                contents: this.outerSVG()\n\t            });\n\t            return \"data:image/svg+xml;base64,\" + btoa(unescape(encodeURIComponent(svg)));\n\t        }\n\t    };\n\t    /*\\\n\t     * Fragment.select\n\t     [ method ]\n\t     **\n\t     * See @Element.select\n\t    \\*/\n\t    Fragment.prototype.select = elproto.select;\n\t    /*\\\n\t     * Fragment.selectAll\n\t     [ method ]\n\t     **\n\t     * See @Element.selectAll\n\t    \\*/\n\t    Fragment.prototype.selectAll = elproto.selectAll;\n\t});\n\t\n\t// Copyright (c) 2013 Adobe Systems Incorporated. All rights reserved.\n\t//\n\t// Licensed under the Apache License, Version 2.0 (the \"License\");\n\t// you may not use this file except in compliance with the License.\n\t// You may obtain a copy of the License at\n\t//\n\t// http://www.apache.org/licenses/LICENSE-2.0\n\t//\n\t// Unless required by applicable law or agreed to in writing, software\n\t// distributed under the License is distributed on an \"AS IS\" BASIS,\n\t// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n\t// See the License for the specific language governing permissions and\n\t// limitations under the License.\n\tSnap.plugin(function (Snap, Element, Paper, glob, Fragment) {\n\t    var objectToString = Object.prototype.toString,\n\t        Str = String,\n\t        math = Math,\n\t        E = \"\";\n\t    function Matrix(a, b, c, d, e, f) {\n\t        if (b == null && objectToString.call(a) == \"[object SVGMatrix]\") {\n\t            this.a = a.a;\n\t            this.b = a.b;\n\t            this.c = a.c;\n\t            this.d = a.d;\n\t            this.e = a.e;\n\t            this.f = a.f;\n\t            return;\n\t        }\n\t        if (a != null) {\n\t            this.a = +a;\n\t            this.b = +b;\n\t            this.c = +c;\n\t            this.d = +d;\n\t            this.e = +e;\n\t            this.f = +f;\n\t        } else {\n\t            this.a = 1;\n\t            this.b = 0;\n\t            this.c = 0;\n\t            this.d = 1;\n\t            this.e = 0;\n\t            this.f = 0;\n\t        }\n\t    }\n\t    (function (matrixproto) {\n\t        /*\\\n\t         * Matrix.add\n\t         [ method ]\n\t         **\n\t         * Adds the given matrix to existing one\n\t         - a (number)\n\t         - b (number)\n\t         - c (number)\n\t         - d (number)\n\t         - e (number)\n\t         - f (number)\n\t         * or\n\t         - matrix (object) @Matrix\n\t        \\*/\n\t        matrixproto.add = function (a, b, c, d, e, f) {\n\t            var out = [[], [], []],\n\t                m = [[this.a, this.c, this.e], [this.b, this.d, this.f], [0, 0, 1]],\n\t                matrix = [[a, c, e], [b, d, f], [0, 0, 1]],\n\t                x, y, z, res;\n\t\n\t            if (a && a instanceof Matrix) {\n\t                matrix = [[a.a, a.c, a.e], [a.b, a.d, a.f], [0, 0, 1]];\n\t            }\n\t\n\t            for (x = 0; x < 3; x++) {\n\t                for (y = 0; y < 3; y++) {\n\t                    res = 0;\n\t                    for (z = 0; z < 3; z++) {\n\t                        res += m[x][z] * matrix[z][y];\n\t                    }\n\t                    out[x][y] = res;\n\t                }\n\t            }\n\t            this.a = out[0][0];\n\t            this.b = out[1][0];\n\t            this.c = out[0][1];\n\t            this.d = out[1][1];\n\t            this.e = out[0][2];\n\t            this.f = out[1][2];\n\t            return this;\n\t        };\n\t        /*\\\n\t         * Matrix.invert\n\t         [ method ]\n\t         **\n\t         * Returns an inverted version of the matrix\n\t         = (object) @Matrix\n\t        \\*/\n\t        matrixproto.invert = function () {\n\t            var me = this,\n\t                x = me.a * me.d - me.b * me.c;\n\t            return new Matrix(me.d / x, -me.b / x, -me.c / x, me.a / x, (me.c * me.f - me.d * me.e) / x, (me.b * me.e - me.a * me.f) / x);\n\t        };\n\t        /*\\\n\t         * Matrix.clone\n\t         [ method ]\n\t         **\n\t         * Returns a copy of the matrix\n\t         = (object) @Matrix\n\t        \\*/\n\t        matrixproto.clone = function () {\n\t            return new Matrix(this.a, this.b, this.c, this.d, this.e, this.f);\n\t        };\n\t        /*\\\n\t         * Matrix.translate\n\t         [ method ]\n\t         **\n\t         * Translate the matrix\n\t         - x (number) horizontal offset distance\n\t         - y (number) vertical offset distance\n\t        \\*/\n\t        matrixproto.translate = function (x, y) {\n\t            return this.add(1, 0, 0, 1, x, y);\n\t        };\n\t        /*\\\n\t         * Matrix.scale\n\t         [ method ]\n\t         **\n\t         * Scales the matrix\n\t         - x (number) amount to be scaled, with `1` resulting in no change\n\t         - y (number) #optional amount to scale along the vertical axis. (Otherwise `x` applies to both axes.)\n\t         - cx (number) #optional horizontal origin point from which to scale\n\t         - cy (number) #optional vertical origin point from which to scale\n\t         * Default cx, cy is the middle point of the element.\n\t        \\*/\n\t        matrixproto.scale = function (x, y, cx, cy) {\n\t            y == null && (y = x);\n\t            (cx || cy) && this.add(1, 0, 0, 1, cx, cy);\n\t            this.add(x, 0, 0, y, 0, 0);\n\t            (cx || cy) && this.add(1, 0, 0, 1, -cx, -cy);\n\t            return this;\n\t        };\n\t        /*\\\n\t         * Matrix.rotate\n\t         [ method ]\n\t         **\n\t         * Rotates the matrix\n\t         - a (number) angle of rotation, in degrees\n\t         - x (number) horizontal origin point from which to rotate\n\t         - y (number) vertical origin point from which to rotate\n\t        \\*/\n\t        matrixproto.rotate = function (a, x, y) {\n\t            a = Snap.rad(a);\n\t            x = x || 0;\n\t            y = y || 0;\n\t            var cos = +math.cos(a).toFixed(9),\n\t                sin = +math.sin(a).toFixed(9);\n\t            this.add(cos, sin, -sin, cos, x, y);\n\t            return this.add(1, 0, 0, 1, -x, -y);\n\t        };\n\t        /*\\\n\t         * Matrix.x\n\t         [ method ]\n\t         **\n\t         * Returns x coordinate for given point after transformation described by the matrix. See also @Matrix.y\n\t         - x (number)\n\t         - y (number)\n\t         = (number) x\n\t        \\*/\n\t        matrixproto.x = function (x, y) {\n\t            return x * this.a + y * this.c + this.e;\n\t        };\n\t        /*\\\n\t         * Matrix.y\n\t         [ method ]\n\t         **\n\t         * Returns y coordinate for given point after transformation described by the matrix. See also @Matrix.x\n\t         - x (number)\n\t         - y (number)\n\t         = (number) y\n\t        \\*/\n\t        matrixproto.y = function (x, y) {\n\t            return x * this.b + y * this.d + this.f;\n\t        };\n\t        matrixproto.get = function (i) {\n\t            return +this[Str.fromCharCode(97 + i)].toFixed(4);\n\t        };\n\t        matrixproto.toString = function () {\n\t            return \"matrix(\" + [this.get(0), this.get(1), this.get(2), this.get(3), this.get(4), this.get(5)].join() + \")\";\n\t        };\n\t        matrixproto.offset = function () {\n\t            return [this.e.toFixed(4), this.f.toFixed(4)];\n\t        };\n\t        function norm(a) {\n\t            return a[0] * a[0] + a[1] * a[1];\n\t        }\n\t        function normalize(a) {\n\t            var mag = math.sqrt(norm(a));\n\t            a[0] && (a[0] /= mag);\n\t            a[1] && (a[1] /= mag);\n\t        }\n\t        /*\\\n\t         * Matrix.determinant\n\t         [ method ]\n\t         **\n\t         * Finds determinant of the given matrix.\n\t         = (number) determinant\n\t        \\*/\n\t        matrixproto.determinant = function () {\n\t            return this.a * this.d - this.b * this.c;\n\t        };\n\t        /*\\\n\t         * Matrix.split\n\t         [ method ]\n\t         **\n\t         * Splits matrix into primitive transformations\n\t         = (object) in format:\n\t         o dx (number) translation by x\n\t         o dy (number) translation by y\n\t         o scalex (number) scale by x\n\t         o scaley (number) scale by y\n\t         o shear (number) shear\n\t         o rotate (number) rotation in deg\n\t         o isSimple (boolean) could it be represented via simple transformations\n\t        \\*/\n\t        matrixproto.split = function () {\n\t            var out = {};\n\t            // translation\n\t            out.dx = this.e;\n\t            out.dy = this.f;\n\t\n\t            // scale and shear\n\t            var row = [[this.a, this.c], [this.b, this.d]];\n\t            out.scalex = math.sqrt(norm(row[0]));\n\t            normalize(row[0]);\n\t\n\t            out.shear = row[0][0] * row[1][0] + row[0][1] * row[1][1];\n\t            row[1] = [row[1][0] - row[0][0] * out.shear, row[1][1] - row[0][1] * out.shear];\n\t\n\t            out.scaley = math.sqrt(norm(row[1]));\n\t            normalize(row[1]);\n\t            out.shear /= out.scaley;\n\t\n\t            if (this.determinant() < 0) {\n\t                out.scalex = -out.scalex;\n\t            }\n\t\n\t            // rotation\n\t            var sin = -row[0][1],\n\t                cos = row[1][1];\n\t            if (cos < 0) {\n\t                out.rotate = Snap.deg(math.acos(cos));\n\t                if (sin < 0) {\n\t                    out.rotate = 360 - out.rotate;\n\t                }\n\t            } else {\n\t                out.rotate = Snap.deg(math.asin(sin));\n\t            }\n\t\n\t            out.isSimple = !+out.shear.toFixed(9) && (out.scalex.toFixed(9) == out.scaley.toFixed(9) || !out.rotate);\n\t            out.isSuperSimple = !+out.shear.toFixed(9) && out.scalex.toFixed(9) == out.scaley.toFixed(9) && !out.rotate;\n\t            out.noRotation = !+out.shear.toFixed(9) && !out.rotate;\n\t            return out;\n\t        };\n\t        /*\\\n\t         * Matrix.toTransformString\n\t         [ method ]\n\t         **\n\t         * Returns transform string that represents given matrix\n\t         = (string) transform string\n\t        \\*/\n\t        matrixproto.toTransformString = function (shorter) {\n\t            var s = shorter || this.split();\n\t            if (!+s.shear.toFixed(9)) {\n\t                s.scalex = +s.scalex.toFixed(4);\n\t                s.scaley = +s.scaley.toFixed(4);\n\t                s.rotate = +s.rotate.toFixed(4);\n\t                return  (s.dx || s.dy ? \"t\" + [+s.dx.toFixed(4), +s.dy.toFixed(4)] : E) +\n\t                        (s.scalex != 1 || s.scaley != 1 ? \"s\" + [s.scalex, s.scaley, 0, 0] : E) +\n\t                        (s.rotate ? \"r\" + [+s.rotate.toFixed(4), 0, 0] : E);\n\t            } else {\n\t                return \"m\" + [this.get(0), this.get(1), this.get(2), this.get(3), this.get(4), this.get(5)];\n\t            }\n\t        };\n\t    })(Matrix.prototype);\n\t    /*\\\n\t     * Snap.Matrix\n\t     [ method ]\n\t     **\n\t     * Matrix constructor, extend on your own risk.\n\t     * To create matrices use @Snap.matrix.\n\t    \\*/\n\t    Snap.Matrix = Matrix;\n\t    /*\\\n\t     * Snap.matrix\n\t     [ method ]\n\t     **\n\t     * Utility method\n\t     **\n\t     * Returns a matrix based on the given parameters\n\t     - a (number)\n\t     - b (number)\n\t     - c (number)\n\t     - d (number)\n\t     - e (number)\n\t     - f (number)\n\t     * or\n\t     - svgMatrix (SVGMatrix)\n\t     = (object) @Matrix\n\t    \\*/\n\t    Snap.matrix = function (a, b, c, d, e, f) {\n\t        return new Matrix(a, b, c, d, e, f);\n\t    };\n\t});\n\t// Copyright (c) 2013 Adobe Systems Incorporated. All rights reserved.\n\t//\n\t// Licensed under the Apache License, Version 2.0 (the \"License\");\n\t// you may not use this file except in compliance with the License.\n\t// You may obtain a copy of the License at\n\t//\n\t// http://www.apache.org/licenses/LICENSE-2.0\n\t//\n\t// Unless required by applicable law or agreed to in writing, software\n\t// distributed under the License is distributed on an \"AS IS\" BASIS,\n\t// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n\t// See the License for the specific language governing permissions and\n\t// limitations under the License.\n\tSnap.plugin(function (Snap, Element, Paper, glob, Fragment) {\n\t    var has = \"hasOwnProperty\",\n\t        make = Snap._.make,\n\t        wrap = Snap._.wrap,\n\t        is = Snap.is,\n\t        getSomeDefs = Snap._.getSomeDefs,\n\t        reURLValue = /^url\\(#?([^)]+)\\)$/,\n\t        $ = Snap._.$,\n\t        URL = Snap.url,\n\t        Str = String,\n\t        separator = Snap._.separator,\n\t        E = \"\";\n\t    // Attributes event handlers\n\t    eve.on(\"snap.util.attr.mask\", function (value) {\n\t        if (value instanceof Element || value instanceof Fragment) {\n\t            eve.stop();\n\t            if (value instanceof Fragment && value.node.childNodes.length == 1) {\n\t                value = value.node.firstChild;\n\t                getSomeDefs(this).appendChild(value);\n\t                value = wrap(value);\n\t            }\n\t            if (value.type == \"mask\") {\n\t                var mask = value;\n\t            } else {\n\t                mask = make(\"mask\", getSomeDefs(this));\n\t                mask.node.appendChild(value.node);\n\t            }\n\t            !mask.node.id && $(mask.node, {\n\t                id: mask.id\n\t            });\n\t            $(this.node, {\n\t                mask: URL(mask.id)\n\t            });\n\t        }\n\t    });\n\t    (function (clipIt) {\n\t        eve.on(\"snap.util.attr.clip\", clipIt);\n\t        eve.on(\"snap.util.attr.clip-path\", clipIt);\n\t        eve.on(\"snap.util.attr.clipPath\", clipIt);\n\t    }(function (value) {\n\t        if (value instanceof Element || value instanceof Fragment) {\n\t            eve.stop();\n\t            if (value.type == \"clipPath\") {\n\t                var clip = value;\n\t            } else {\n\t                clip = make(\"clipPath\", getSomeDefs(this));\n\t                clip.node.appendChild(value.node);\n\t                !clip.node.id && $(clip.node, {\n\t                    id: clip.id\n\t                });\n\t            }\n\t            $(this.node, {\n\t                \"clip-path\": URL(clip.node.id || clip.id)\n\t            });\n\t        }\n\t    }));\n\t    function fillStroke(name) {\n\t        return function (value) {\n\t            eve.stop();\n\t            if (value instanceof Fragment && value.node.childNodes.length == 1 &&\n\t                (value.node.firstChild.tagName == \"radialGradient\" ||\n\t                value.node.firstChild.tagName == \"linearGradient\" ||\n\t                value.node.firstChild.tagName == \"pattern\")) {\n\t                value = value.node.firstChild;\n\t                getSomeDefs(this).appendChild(value);\n\t                value = wrap(value);\n\t            }\n\t            if (value instanceof Element) {\n\t                if (value.type == \"radialGradient\" || value.type == \"linearGradient\"\n\t                   || value.type == \"pattern\") {\n\t                    if (!value.node.id) {\n\t                        $(value.node, {\n\t                            id: value.id\n\t                        });\n\t                    }\n\t                    var fill = URL(value.node.id);\n\t                } else {\n\t                    fill = value.attr(name);\n\t                }\n\t            } else {\n\t                fill = Snap.color(value);\n\t                if (fill.error) {\n\t                    var grad = Snap(getSomeDefs(this).ownerSVGElement).gradient(value);\n\t                    if (grad) {\n\t                        if (!grad.node.id) {\n\t                            $(grad.node, {\n\t                                id: grad.id\n\t                            });\n\t                        }\n\t                        fill = URL(grad.node.id);\n\t                    } else {\n\t                        fill = value;\n\t                    }\n\t                } else {\n\t                    fill = Str(fill);\n\t                }\n\t            }\n\t            var attrs = {};\n\t            attrs[name] = fill;\n\t            $(this.node, attrs);\n\t            this.node.style[name] = E;\n\t        };\n\t    }\n\t    eve.on(\"snap.util.attr.fill\", fillStroke(\"fill\"));\n\t    eve.on(\"snap.util.attr.stroke\", fillStroke(\"stroke\"));\n\t    var gradrg = /^([lr])(?:\\(([^)]*)\\))?(.*)$/i;\n\t    eve.on(\"snap.util.grad.parse\", function parseGrad(string) {\n\t        string = Str(string);\n\t        var tokens = string.match(gradrg);\n\t        if (!tokens) {\n\t            return null;\n\t        }\n\t        var type = tokens[1],\n\t            params = tokens[2],\n\t            stops = tokens[3];\n\t        params = params.split(/\\s*,\\s*/).map(function (el) {\n\t            return +el == el ? +el : el;\n\t        });\n\t        if (params.length == 1 && params[0] == 0) {\n\t            params = [];\n\t        }\n\t        stops = stops.split(\"-\");\n\t        stops = stops.map(function (el) {\n\t            el = el.split(\":\");\n\t            var out = {\n\t                color: el[0]\n\t            };\n\t            if (el[1]) {\n\t                out.offset = parseFloat(el[1]);\n\t            }\n\t            return out;\n\t        });\n\t        return {\n\t            type: type,\n\t            params: params,\n\t            stops: stops\n\t        };\n\t    });\n\t\n\t    eve.on(\"snap.util.attr.d\", function (value) {\n\t        eve.stop();\n\t        if (is(value, \"array\") && is(value[0], \"array\")) {\n\t            value = Snap.path.toString.call(value);\n\t        }\n\t        value = Str(value);\n\t        if (value.match(/[ruo]/i)) {\n\t            value = Snap.path.toAbsolute(value);\n\t        }\n\t        $(this.node, {d: value});\n\t    })(-1);\n\t    eve.on(\"snap.util.attr.#text\", function (value) {\n\t        eve.stop();\n\t        value = Str(value);\n\t        var txt = glob.doc.createTextNode(value);\n\t        while (this.node.firstChild) {\n\t            this.node.removeChild(this.node.firstChild);\n\t        }\n\t        this.node.appendChild(txt);\n\t    })(-1);\n\t    eve.on(\"snap.util.attr.path\", function (value) {\n\t        eve.stop();\n\t        this.attr({d: value});\n\t    })(-1);\n\t    eve.on(\"snap.util.attr.class\", function (value) {\n\t        eve.stop();\n\t        this.node.className.baseVal = value;\n\t    })(-1);\n\t    eve.on(\"snap.util.attr.viewBox\", function (value) {\n\t        var vb;\n\t        if (is(value, \"object\") && \"x\" in value) {\n\t            vb = [value.x, value.y, value.width, value.height].join(\" \");\n\t        } else if (is(value, \"array\")) {\n\t            vb = value.join(\" \");\n\t        } else {\n\t            vb = value;\n\t        }\n\t        $(this.node, {\n\t            viewBox: vb\n\t        });\n\t        eve.stop();\n\t    })(-1);\n\t    eve.on(\"snap.util.attr.transform\", function (value) {\n\t        this.transform(value);\n\t        eve.stop();\n\t    })(-1);\n\t    eve.on(\"snap.util.attr.r\", function (value) {\n\t        if (this.type == \"rect\") {\n\t            eve.stop();\n\t            $(this.node, {\n\t                rx: value,\n\t                ry: value\n\t            });\n\t        }\n\t    })(-1);\n\t    eve.on(\"snap.util.attr.textpath\", function (value) {\n\t        eve.stop();\n\t        if (this.type == \"text\") {\n\t            var id, tp, node;\n\t            if (!value && this.textPath) {\n\t                tp = this.textPath;\n\t                while (tp.node.firstChild) {\n\t                    this.node.appendChild(tp.node.firstChild);\n\t                }\n\t                tp.remove();\n\t                delete this.textPath;\n\t                return;\n\t            }\n\t            if (is(value, \"string\")) {\n\t                var defs = getSomeDefs(this),\n\t                    path = wrap(defs.parentNode).path(value);\n\t                defs.appendChild(path.node);\n\t                id = path.id;\n\t                path.attr({id: id});\n\t            } else {\n\t                value = wrap(value);\n\t                if (value instanceof Element) {\n\t                    id = value.attr(\"id\");\n\t                    if (!id) {\n\t                        id = value.id;\n\t                        value.attr({id: id});\n\t                    }\n\t                }\n\t            }\n\t            if (id) {\n\t                tp = this.textPath;\n\t                node = this.node;\n\t                if (tp) {\n\t                    tp.attr({\"xlink:href\": \"#\" + id});\n\t                } else {\n\t                    tp = $(\"textPath\", {\n\t                        \"xlink:href\": \"#\" + id\n\t                    });\n\t                    while (node.firstChild) {\n\t                        tp.appendChild(node.firstChild);\n\t                    }\n\t                    node.appendChild(tp);\n\t                    this.textPath = wrap(tp);\n\t                }\n\t            }\n\t        }\n\t    })(-1);\n\t    eve.on(\"snap.util.attr.text\", function (value) {\n\t        if (this.type == \"text\") {\n\t            var i = 0,\n\t                node = this.node,\n\t                tuner = function (chunk) {\n\t                    var out = $(\"tspan\");\n\t                    if (is(chunk, \"array\")) {\n\t                        for (var i = 0; i < chunk.length; i++) {\n\t                            out.appendChild(tuner(chunk[i]));\n\t                        }\n\t                    } else {\n\t                        out.appendChild(glob.doc.createTextNode(chunk));\n\t                    }\n\t                    out.normalize && out.normalize();\n\t                    return out;\n\t                };\n\t            while (node.firstChild) {\n\t                node.removeChild(node.firstChild);\n\t            }\n\t            var tuned = tuner(value);\n\t            while (tuned.firstChild) {\n\t                node.appendChild(tuned.firstChild);\n\t            }\n\t        }\n\t        eve.stop();\n\t    })(-1);\n\t    function setFontSize(value) {\n\t        eve.stop();\n\t        if (value == +value) {\n\t            value += \"px\";\n\t        }\n\t        this.node.style.fontSize = value;\n\t    }\n\t    eve.on(\"snap.util.attr.fontSize\", setFontSize)(-1);\n\t    eve.on(\"snap.util.attr.font-size\", setFontSize)(-1);\n\t\n\t\n\t    eve.on(\"snap.util.getattr.transform\", function () {\n\t        eve.stop();\n\t        return this.transform();\n\t    })(-1);\n\t    eve.on(\"snap.util.getattr.textpath\", function () {\n\t        eve.stop();\n\t        return this.textPath;\n\t    })(-1);\n\t    // Markers\n\t    (function () {\n\t        function getter(end) {\n\t            return function () {\n\t                eve.stop();\n\t                var style = glob.doc.defaultView.getComputedStyle(this.node, null).getPropertyValue(\"marker-\" + end);\n\t                if (style == \"none\") {\n\t                    return style;\n\t                } else {\n\t                    return Snap(glob.doc.getElementById(style.match(reURLValue)[1]));\n\t                }\n\t            };\n\t        }\n\t        function setter(end) {\n\t            return function (value) {\n\t                eve.stop();\n\t                var name = \"marker\" + end.charAt(0).toUpperCase() + end.substring(1);\n\t                if (value == \"\" || !value) {\n\t                    this.node.style[name] = \"none\";\n\t                    return;\n\t                }\n\t                if (value.type == \"marker\") {\n\t                    var id = value.node.id;\n\t                    if (!id) {\n\t                        $(value.node, {id: value.id});\n\t                    }\n\t                    this.node.style[name] = URL(id);\n\t                    return;\n\t                }\n\t            };\n\t        }\n\t        eve.on(\"snap.util.getattr.marker-end\", getter(\"end\"))(-1);\n\t        eve.on(\"snap.util.getattr.markerEnd\", getter(\"end\"))(-1);\n\t        eve.on(\"snap.util.getattr.marker-start\", getter(\"start\"))(-1);\n\t        eve.on(\"snap.util.getattr.markerStart\", getter(\"start\"))(-1);\n\t        eve.on(\"snap.util.getattr.marker-mid\", getter(\"mid\"))(-1);\n\t        eve.on(\"snap.util.getattr.markerMid\", getter(\"mid\"))(-1);\n\t        eve.on(\"snap.util.attr.marker-end\", setter(\"end\"))(-1);\n\t        eve.on(\"snap.util.attr.markerEnd\", setter(\"end\"))(-1);\n\t        eve.on(\"snap.util.attr.marker-start\", setter(\"start\"))(-1);\n\t        eve.on(\"snap.util.attr.markerStart\", setter(\"start\"))(-1);\n\t        eve.on(\"snap.util.attr.marker-mid\", setter(\"mid\"))(-1);\n\t        eve.on(\"snap.util.attr.markerMid\", setter(\"mid\"))(-1);\n\t    }());\n\t    eve.on(\"snap.util.getattr.r\", function () {\n\t        if (this.type == \"rect\" && $(this.node, \"rx\") == $(this.node, \"ry\")) {\n\t            eve.stop();\n\t            return $(this.node, \"rx\");\n\t        }\n\t    })(-1);\n\t    function textExtract(node) {\n\t        var out = [];\n\t        var children = node.childNodes;\n\t        for (var i = 0, ii = children.length; i < ii; i++) {\n\t            var chi = children[i];\n\t            if (chi.nodeType == 3) {\n\t                out.push(chi.nodeValue);\n\t            }\n\t            if (chi.tagName == \"tspan\") {\n\t                if (chi.childNodes.length == 1 && chi.firstChild.nodeType == 3) {\n\t                    out.push(chi.firstChild.nodeValue);\n\t                } else {\n\t                    out.push(textExtract(chi));\n\t                }\n\t            }\n\t        }\n\t        return out;\n\t    }\n\t    eve.on(\"snap.util.getattr.text\", function () {\n\t        if (this.type == \"text\" || this.type == \"tspan\") {\n\t            eve.stop();\n\t            var out = textExtract(this.node);\n\t            return out.length == 1 ? out[0] : out;\n\t        }\n\t    })(-1);\n\t    eve.on(\"snap.util.getattr.#text\", function () {\n\t        return this.node.textContent;\n\t    })(-1);\n\t    eve.on(\"snap.util.getattr.viewBox\", function () {\n\t        eve.stop();\n\t        var vb = $(this.node, \"viewBox\");\n\t        if (vb) {\n\t            vb = vb.split(separator);\n\t            return Snap._.box(+vb[0], +vb[1], +vb[2], +vb[3]);\n\t        } else {\n\t            return;\n\t        }\n\t    })(-1);\n\t    eve.on(\"snap.util.getattr.points\", function () {\n\t        var p = $(this.node, \"points\");\n\t        eve.stop();\n\t        if (p) {\n\t            return p.split(separator);\n\t        } else {\n\t            return;\n\t        }\n\t    })(-1);\n\t    eve.on(\"snap.util.getattr.path\", function () {\n\t        var p = $(this.node, \"d\");\n\t        eve.stop();\n\t        return p;\n\t    })(-1);\n\t    eve.on(\"snap.util.getattr.class\", function () {\n\t        return this.node.className.baseVal;\n\t    })(-1);\n\t    function getFontSize() {\n\t        eve.stop();\n\t        return this.node.style.fontSize;\n\t    }\n\t    eve.on(\"snap.util.getattr.fontSize\", getFontSize)(-1);\n\t    eve.on(\"snap.util.getattr.font-size\", getFontSize)(-1);\n\t});\n\t\n\t// Copyright (c) 2014 Adobe Systems Incorporated. All rights reserved.\n\t//\n\t// Licensed under the Apache License, Version 2.0 (the \"License\");\n\t// you may not use this file except in compliance with the License.\n\t// You may obtain a copy of the License at\n\t//\n\t// http://www.apache.org/licenses/LICENSE-2.0\n\t//\n\t// Unless required by applicable law or agreed to in writing, software\n\t// distributed under the License is distributed on an \"AS IS\" BASIS,\n\t// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n\t// See the License for the specific language governing permissions and\n\t// limitations under the License.\n\tSnap.plugin(function (Snap, Element, Paper, glob, Fragment) {\n\t    var rgNotSpace = /\\S+/g,\n\t        rgBadSpace = /[\\t\\r\\n\\f]/g,\n\t        rgTrim = /(^\\s+|\\s+$)/g,\n\t        Str = String,\n\t        elproto = Element.prototype;\n\t    /*\\\n\t     * Element.addClass\n\t     [ method ]\n\t     **\n\t     * Adds given class name or list of class names to the element.\n\t     - value (string) class name or space separated list of class names\n\t     **\n\t     = (Element) original element.\n\t    \\*/\n\t    elproto.addClass = function (value) {\n\t        var classes = Str(value || \"\").match(rgNotSpace) || [],\n\t            elem = this.node,\n\t            className = elem.className.baseVal,\n\t            curClasses = className.match(rgNotSpace) || [],\n\t            j,\n\t            pos,\n\t            clazz,\n\t            finalValue;\n\t\n\t        if (classes.length) {\n\t            j = 0;\n\t            while ((clazz = classes[j++])) {\n\t                pos = curClasses.indexOf(clazz);\n\t                if (!~pos) {\n\t                    curClasses.push(clazz);\n\t                }\n\t            }\n\t\n\t            finalValue = curClasses.join(\" \");\n\t            if (className != finalValue) {\n\t                elem.className.baseVal = finalValue;\n\t            }\n\t        }\n\t        return this;\n\t    };\n\t    /*\\\n\t     * Element.removeClass\n\t     [ method ]\n\t     **\n\t     * Removes given class name or list of class names from the element.\n\t     - value (string) class name or space separated list of class names\n\t     **\n\t     = (Element) original element.\n\t    \\*/\n\t    elproto.removeClass = function (value) {\n\t        var classes = Str(value || \"\").match(rgNotSpace) || [],\n\t            elem = this.node,\n\t            className = elem.className.baseVal,\n\t            curClasses = className.match(rgNotSpace) || [],\n\t            j,\n\t            pos,\n\t            clazz,\n\t            finalValue;\n\t        if (curClasses.length) {\n\t            j = 0;\n\t            while ((clazz = classes[j++])) {\n\t                pos = curClasses.indexOf(clazz);\n\t                if (~pos) {\n\t                    curClasses.splice(pos, 1);\n\t                }\n\t            }\n\t\n\t            finalValue = curClasses.join(\" \");\n\t            if (className != finalValue) {\n\t                elem.className.baseVal = finalValue;\n\t            }\n\t        }\n\t        return this;\n\t    };\n\t    /*\\\n\t     * Element.hasClass\n\t     [ method ]\n\t     **\n\t     * Checks if the element has a given class name in the list of class names applied to it.\n\t     - value (string) class name\n\t     **\n\t     = (boolean) `true` if the element has given class\n\t    \\*/\n\t    elproto.hasClass = function (value) {\n\t        var elem = this.node,\n\t            className = elem.className.baseVal,\n\t            curClasses = className.match(rgNotSpace) || [];\n\t        return !!~curClasses.indexOf(value);\n\t    };\n\t    /*\\\n\t     * Element.toggleClass\n\t     [ method ]\n\t     **\n\t     * Add or remove one or more classes from the element, depending on either\n\t     * the class’s presence or the value of the `flag` argument.\n\t     - value (string) class name or space separated list of class names\n\t     - flag (boolean) value to determine whether the class should be added or removed\n\t     **\n\t     = (Element) original element.\n\t    \\*/\n\t    elproto.toggleClass = function (value, flag) {\n\t        if (flag != null) {\n\t            if (flag) {\n\t                return this.addClass(value);\n\t            } else {\n\t                return this.removeClass(value);\n\t            }\n\t        }\n\t        var classes = (value || \"\").match(rgNotSpace) || [],\n\t            elem = this.node,\n\t            className = elem.className.baseVal,\n\t            curClasses = className.match(rgNotSpace) || [],\n\t            j,\n\t            pos,\n\t            clazz,\n\t            finalValue;\n\t        j = 0;\n\t        while ((clazz = classes[j++])) {\n\t            pos = curClasses.indexOf(clazz);\n\t            if (~pos) {\n\t                curClasses.splice(pos, 1);\n\t            } else {\n\t                curClasses.push(clazz);\n\t            }\n\t        }\n\t\n\t        finalValue = curClasses.join(\" \");\n\t        if (className != finalValue) {\n\t            elem.className.baseVal = finalValue;\n\t        }\n\t        return this;\n\t    };\n\t});\n\t\n\t// Copyright (c) 2013 Adobe Systems Incorporated. All rights reserved.\n\t//\n\t// Licensed under the Apache License, Version 2.0 (the \"License\");\n\t// you may not use this file except in compliance with the License.\n\t// You may obtain a copy of the License at\n\t//\n\t// http://www.apache.org/licenses/LICENSE-2.0\n\t//\n\t// Unless required by applicable law or agreed to in writing, software\n\t// distributed under the License is distributed on an \"AS IS\" BASIS,\n\t// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n\t// See the License for the specific language governing permissions and\n\t// limitations under the License.\n\tSnap.plugin(function (Snap, Element, Paper, glob, Fragment) {\n\t    var operators = {\n\t            \"+\": function (x, y) {\n\t                    return x + y;\n\t                },\n\t            \"-\": function (x, y) {\n\t                    return x - y;\n\t                },\n\t            \"/\": function (x, y) {\n\t                    return x / y;\n\t                },\n\t            \"*\": function (x, y) {\n\t                    return x * y;\n\t                }\n\t        },\n\t        Str = String,\n\t        reUnit = /[a-z]+$/i,\n\t        reAddon = /^\\s*([+\\-\\/*])\\s*=\\s*([\\d.eE+\\-]+)\\s*([^\\d\\s]+)?\\s*$/;\n\t    function getNumber(val) {\n\t        return val;\n\t    }\n\t    function getUnit(unit) {\n\t        return function (val) {\n\t            return +val.toFixed(3) + unit;\n\t        };\n\t    }\n\t    eve.on(\"snap.util.attr\", function (val) {\n\t        var plus = Str(val).match(reAddon);\n\t        if (plus) {\n\t            var evnt = eve.nt(),\n\t                name = evnt.substring(evnt.lastIndexOf(\".\") + 1),\n\t                a = this.attr(name),\n\t                atr = {};\n\t            eve.stop();\n\t            var unit = plus[3] || \"\",\n\t                aUnit = a.match(reUnit),\n\t                op = operators[plus[1]];\n\t            if (aUnit && aUnit == unit) {\n\t                val = op(parseFloat(a), +plus[2]);\n\t            } else {\n\t                a = this.asPX(name);\n\t                val = op(this.asPX(name), this.asPX(name, plus[2] + unit));\n\t            }\n\t            if (isNaN(a) || isNaN(val)) {\n\t                return;\n\t            }\n\t            atr[name] = val;\n\t            this.attr(atr);\n\t        }\n\t    })(-10);\n\t    eve.on(\"snap.util.equal\", function (name, b) {\n\t        var A, B, a = Str(this.attr(name) || \"\"),\n\t            el = this,\n\t            bplus = Str(b).match(reAddon);\n\t        if (bplus) {\n\t            eve.stop();\n\t            var unit = bplus[3] || \"\",\n\t                aUnit = a.match(reUnit),\n\t                op = operators[bplus[1]];\n\t            if (aUnit && aUnit == unit) {\n\t                return {\n\t                    from: parseFloat(a),\n\t                    to: op(parseFloat(a), +bplus[2]),\n\t                    f: getUnit(aUnit)\n\t                };\n\t            } else {\n\t                a = this.asPX(name);\n\t                return {\n\t                    from: a,\n\t                    to: op(a, this.asPX(name, bplus[2] + unit)),\n\t                    f: getNumber\n\t                };\n\t            }\n\t        }\n\t    })(-10);\n\t});\n\t// Copyright (c) 2013 Adobe Systems Incorporated. All rights reserved.\n\t//\n\t// Licensed under the Apache License, Version 2.0 (the \"License\");\n\t// you may not use this file except in compliance with the License.\n\t// You may obtain a copy of the License at\n\t//\n\t// http://www.apache.org/licenses/LICENSE-2.0\n\t//\n\t// Unless required by applicable law or agreed to in writing, software\n\t// distributed under the License is distributed on an \"AS IS\" BASIS,\n\t// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n\t// See the License for the specific language governing permissions and\n\t// limitations under the License.\n\tSnap.plugin(function (Snap, Element, Paper, glob, Fragment) {\n\t    var proto = Paper.prototype,\n\t        is = Snap.is;\n\t    /*\\\n\t     * Paper.rect\n\t     [ method ]\n\t     *\n\t     * Draws a rectangle\n\t     **\n\t     - x (number) x coordinate of the top left corner\n\t     - y (number) y coordinate of the top left corner\n\t     - width (number) width\n\t     - height (number) height\n\t     - rx (number) #optional horizontal radius for rounded corners, default is 0\n\t     - ry (number) #optional vertical radius for rounded corners, default is rx or 0\n\t     = (object) the `rect` element\n\t     **\n\t     > Usage\n\t     | // regular rectangle\n\t     | var c = paper.rect(10, 10, 50, 50);\n\t     | // rectangle with rounded corners\n\t     | var c = paper.rect(40, 40, 50, 50, 10);\n\t    \\*/\n\t    proto.rect = function (x, y, w, h, rx, ry) {\n\t        var attr;\n\t        if (ry == null) {\n\t            ry = rx;\n\t        }\n\t        if (is(x, \"object\") && x == \"[object Object]\") {\n\t            attr = x;\n\t        } else if (x != null) {\n\t            attr = {\n\t                x: x,\n\t                y: y,\n\t                width: w,\n\t                height: h\n\t            };\n\t            if (rx != null) {\n\t                attr.rx = rx;\n\t                attr.ry = ry;\n\t            }\n\t        }\n\t        return this.el(\"rect\", attr);\n\t    };\n\t    /*\\\n\t     * Paper.circle\n\t     [ method ]\n\t     **\n\t     * Draws a circle\n\t     **\n\t     - x (number) x coordinate of the centre\n\t     - y (number) y coordinate of the centre\n\t     - r (number) radius\n\t     = (object) the `circle` element\n\t     **\n\t     > Usage\n\t     | var c = paper.circle(50, 50, 40);\n\t    \\*/\n\t    proto.circle = function (cx, cy, r) {\n\t        var attr;\n\t        if (is(cx, \"object\") && cx == \"[object Object]\") {\n\t            attr = cx;\n\t        } else if (cx != null) {\n\t            attr = {\n\t                cx: cx,\n\t                cy: cy,\n\t                r: r\n\t            };\n\t        }\n\t        return this.el(\"circle\", attr);\n\t    };\n\t\n\t    var preload = (function () {\n\t        function onerror() {\n\t            this.parentNode.removeChild(this);\n\t        }\n\t        return function (src, f) {\n\t            var img = glob.doc.createElement(\"img\"),\n\t                body = glob.doc.body;\n\t            img.style.cssText = \"position:absolute;left:-9999em;top:-9999em\";\n\t            img.onload = function () {\n\t                f.call(img);\n\t                img.onload = img.onerror = null;\n\t                body.removeChild(img);\n\t            };\n\t            img.onerror = onerror;\n\t            body.appendChild(img);\n\t            img.src = src;\n\t        };\n\t    }());\n\t\n\t    /*\\\n\t     * Paper.image\n\t     [ method ]\n\t     **\n\t     * Places an image on the surface\n\t     **\n\t     - src (string) URI of the source image\n\t     - x (number) x offset position\n\t     - y (number) y offset position\n\t     - width (number) width of the image\n\t     - height (number) height of the image\n\t     = (object) the `image` element\n\t     * or\n\t     = (object) Snap element object with type `image`\n\t     **\n\t     > Usage\n\t     | var c = paper.image(\"apple.png\", 10, 10, 80, 80);\n\t    \\*/\n\t    proto.image = function (src, x, y, width, height) {\n\t        var el = this.el(\"image\");\n\t        if (is(src, \"object\") && \"src\" in src) {\n\t            el.attr(src);\n\t        } else if (src != null) {\n\t            var set = {\n\t                \"xlink:href\": src,\n\t                preserveAspectRatio: \"none\"\n\t            };\n\t            if (x != null && y != null) {\n\t                set.x = x;\n\t                set.y = y;\n\t            }\n\t            if (width != null && height != null) {\n\t                set.width = width;\n\t                set.height = height;\n\t            } else {\n\t                preload(src, function () {\n\t                    Snap._.$(el.node, {\n\t                        width: this.offsetWidth,\n\t                        height: this.offsetHeight\n\t                    });\n\t                });\n\t            }\n\t            Snap._.$(el.node, set);\n\t        }\n\t        return el;\n\t    };\n\t    /*\\\n\t     * Paper.ellipse\n\t     [ method ]\n\t     **\n\t     * Draws an ellipse\n\t     **\n\t     - x (number) x coordinate of the centre\n\t     - y (number) y coordinate of the centre\n\t     - rx (number) horizontal radius\n\t     - ry (number) vertical radius\n\t     = (object) the `ellipse` element\n\t     **\n\t     > Usage\n\t     | var c = paper.ellipse(50, 50, 40, 20);\n\t    \\*/\n\t    proto.ellipse = function (cx, cy, rx, ry) {\n\t        var attr;\n\t        if (is(cx, \"object\") && cx == \"[object Object]\") {\n\t            attr = cx;\n\t        } else if (cx != null) {\n\t            attr ={\n\t                cx: cx,\n\t                cy: cy,\n\t                rx: rx,\n\t                ry: ry\n\t            };\n\t        }\n\t        return this.el(\"ellipse\", attr);\n\t    };\n\t    // SIERRA Paper.path(): Unclear from the link what a Catmull-Rom curveto is, and why it would make life any easier.\n\t    /*\\\n\t     * Paper.path\n\t     [ method ]\n\t     **\n\t     * Creates a `<path>` element using the given string as the path's definition\n\t     - pathString (string) #optional path string in SVG format\n\t     * Path string consists of one-letter commands, followed by comma seprarated arguments in numerical form. Example:\n\t     | \"M10,20L30,40\"\n\t     * This example features two commands: `M`, with arguments `(10, 20)` and `L` with arguments `(30, 40)`. Uppercase letter commands express coordinates in absolute terms, while lowercase commands express them in relative terms from the most recently declared coordinates.\n\t     *\n\t     # <p>Here is short list of commands available, for more details see <a href=\"http://www.w3.org/TR/SVG/paths.html#PathData\" title=\"Details of a path's data attribute's format are described in the SVG specification.\">SVG path string format</a> or <a href=\"https://developer.mozilla.org/en/SVG/Tutorial/Paths\">article about path strings at MDN</a>.</p>\n\t     # <table><thead><tr><th>Command</th><th>Name</th><th>Parameters</th></tr></thead><tbody>\n\t     # <tr><td>M</td><td>moveto</td><td>(x y)+</td></tr>\n\t     # <tr><td>Z</td><td>closepath</td><td>(none)</td></tr>\n\t     # <tr><td>L</td><td>lineto</td><td>(x y)+</td></tr>\n\t     # <tr><td>H</td><td>horizontal lineto</td><td>x+</td></tr>\n\t     # <tr><td>V</td><td>vertical lineto</td><td>y+</td></tr>\n\t     # <tr><td>C</td><td>curveto</td><td>(x1 y1 x2 y2 x y)+</td></tr>\n\t     # <tr><td>S</td><td>smooth curveto</td><td>(x2 y2 x y)+</td></tr>\n\t     # <tr><td>Q</td><td>quadratic Bézier curveto</td><td>(x1 y1 x y)+</td></tr>\n\t     # <tr><td>T</td><td>smooth quadratic Bézier curveto</td><td>(x y)+</td></tr>\n\t     # <tr><td>A</td><td>elliptical arc</td><td>(rx ry x-axis-rotation large-arc-flag sweep-flag x y)+</td></tr>\n\t     # <tr><td>R</td><td><a href=\"http://en.wikipedia.org/wiki/Catmull–Rom_spline#Catmull.E2.80.93Rom_spline\">Catmull-Rom curveto</a>*</td><td>x1 y1 (x y)+</td></tr></tbody></table>\n\t     * * _Catmull-Rom curveto_ is a not standard SVG command and added to make life easier.\n\t     * Note: there is a special case when a path consists of only three commands: `M10,10R…z`. In this case the path connects back to its starting point.\n\t     > Usage\n\t     | var c = paper.path(\"M10 10L90 90\");\n\t     | // draw a diagonal line:\n\t     | // move to 10,10, line to 90,90\n\t    \\*/\n\t    proto.path = function (d) {\n\t        var attr;\n\t        if (is(d, \"object\") && !is(d, \"array\")) {\n\t            attr = d;\n\t        } else if (d) {\n\t            attr = {d: d};\n\t        }\n\t        return this.el(\"path\", attr);\n\t    };\n\t    /*\\\n\t     * Paper.g\n\t     [ method ]\n\t     **\n\t     * Creates a group element\n\t     **\n\t     - varargs (…) #optional elements to nest within the group\n\t     = (object) the `g` element\n\t     **\n\t     > Usage\n\t     | var c1 = paper.circle(),\n\t     |     c2 = paper.rect(),\n\t     |     g = paper.g(c2, c1); // note that the order of elements is different\n\t     * or\n\t     | var c1 = paper.circle(),\n\t     |     c2 = paper.rect(),\n\t     |     g = paper.g();\n\t     | g.add(c2, c1);\n\t    \\*/\n\t    /*\\\n\t     * Paper.group\n\t     [ method ]\n\t     **\n\t     * See @Paper.g\n\t    \\*/\n\t    proto.group = proto.g = function (first) {\n\t        var attr,\n\t            el = this.el(\"g\");\n\t        if (arguments.length == 1 && first && !first.type) {\n\t            el.attr(first);\n\t        } else if (arguments.length) {\n\t            el.add(Array.prototype.slice.call(arguments, 0));\n\t        }\n\t        return el;\n\t    };\n\t    /*\\\n\t     * Paper.svg\n\t     [ method ]\n\t     **\n\t     * Creates a nested SVG element.\n\t     - x (number) @optional X of the element\n\t     - y (number) @optional Y of the element\n\t     - width (number) @optional width of the element\n\t     - height (number) @optional height of the element\n\t     - vbx (number) @optional viewbox X\n\t     - vby (number) @optional viewbox Y\n\t     - vbw (number) @optional viewbox width\n\t     - vbh (number) @optional viewbox height\n\t     **\n\t     = (object) the `svg` element\n\t     **\n\t    \\*/\n\t    proto.svg = function (x, y, width, height, vbx, vby, vbw, vbh) {\n\t        var attrs = {};\n\t        if (is(x, \"object\") && y == null) {\n\t            attrs = x;\n\t        } else {\n\t            if (x != null) {\n\t                attrs.x = x;\n\t            }\n\t            if (y != null) {\n\t                attrs.y = y;\n\t            }\n\t            if (width != null) {\n\t                attrs.width = width;\n\t            }\n\t            if (height != null) {\n\t                attrs.height = height;\n\t            }\n\t            if (vbx != null && vby != null && vbw != null && vbh != null) {\n\t                attrs.viewBox = [vbx, vby, vbw, vbh];\n\t            }\n\t        }\n\t        return this.el(\"svg\", attrs);\n\t    };\n\t    /*\\\n\t     * Paper.mask\n\t     [ method ]\n\t     **\n\t     * Equivalent in behaviour to @Paper.g, except it’s a mask.\n\t     **\n\t     = (object) the `mask` element\n\t     **\n\t    \\*/\n\t    proto.mask = function (first) {\n\t        var attr,\n\t            el = this.el(\"mask\");\n\t        if (arguments.length == 1 && first && !first.type) {\n\t            el.attr(first);\n\t        } else if (arguments.length) {\n\t            el.add(Array.prototype.slice.call(arguments, 0));\n\t        }\n\t        return el;\n\t    };\n\t    /*\\\n\t     * Paper.ptrn\n\t     [ method ]\n\t     **\n\t     * Equivalent in behaviour to @Paper.g, except it’s a pattern.\n\t     - x (number) @optional X of the element\n\t     - y (number) @optional Y of the element\n\t     - width (number) @optional width of the element\n\t     - height (number) @optional height of the element\n\t     - vbx (number) @optional viewbox X\n\t     - vby (number) @optional viewbox Y\n\t     - vbw (number) @optional viewbox width\n\t     - vbh (number) @optional viewbox height\n\t     **\n\t     = (object) the `pattern` element\n\t     **\n\t    \\*/\n\t    proto.ptrn = function (x, y, width, height, vx, vy, vw, vh) {\n\t        if (is(x, \"object\")) {\n\t            var attr = x;\n\t        } else {\n\t            attr = {patternUnits: \"userSpaceOnUse\"};\n\t            if (x) {\n\t                attr.x = x;\n\t            }\n\t            if (y) {\n\t                attr.y = y;\n\t            }\n\t            if (width != null) {\n\t                attr.width = width;\n\t            }\n\t            if (height != null) {\n\t                attr.height = height;\n\t            }\n\t            if (vx != null && vy != null && vw != null && vh != null) {\n\t                attr.viewBox = [vx, vy, vw, vh];\n\t            } else {\n\t                attr.viewBox = [x || 0, y || 0, width || 0, height || 0];\n\t            }\n\t        }\n\t        return this.el(\"pattern\", attr);\n\t    };\n\t    /*\\\n\t     * Paper.use\n\t     [ method ]\n\t     **\n\t     * Creates a <use> element.\n\t     - id (string) @optional id of element to link\n\t     * or\n\t     - id (Element) @optional element to link\n\t     **\n\t     = (object) the `use` element\n\t     **\n\t    \\*/\n\t    proto.use = function (id) {\n\t        if (id != null) {\n\t            if (id instanceof Element) {\n\t                if (!id.attr(\"id\")) {\n\t                    id.attr({id: Snap._.id(id)});\n\t                }\n\t                id = id.attr(\"id\");\n\t            }\n\t            if (String(id).charAt() == \"#\") {\n\t                id = id.substring(1);\n\t            }\n\t            return this.el(\"use\", {\"xlink:href\": \"#\" + id});\n\t        } else {\n\t            return Element.prototype.use.call(this);\n\t        }\n\t    };\n\t    /*\\\n\t     * Paper.symbol\n\t     [ method ]\n\t     **\n\t     * Creates a <symbol> element.\n\t     - vbx (number) @optional viewbox X\n\t     - vby (number) @optional viewbox Y\n\t     - vbw (number) @optional viewbox width\n\t     - vbh (number) @optional viewbox height\n\t     = (object) the `symbol` element\n\t     **\n\t    \\*/\n\t    proto.symbol = function (vx, vy, vw, vh) {\n\t        var attr = {};\n\t        if (vx != null && vy != null && vw != null && vh != null) {\n\t            attr.viewBox = [vx, vy, vw, vh];\n\t        }\n\t\n\t        return this.el(\"symbol\", attr);\n\t    };\n\t    /*\\\n\t     * Paper.text\n\t     [ method ]\n\t     **\n\t     * Draws a text string\n\t     **\n\t     - x (number) x coordinate position\n\t     - y (number) y coordinate position\n\t     - text (string|array) The text string to draw or array of strings to nest within separate `<tspan>` elements\n\t     = (object) the `text` element\n\t     **\n\t     > Usage\n\t     | var t1 = paper.text(50, 50, \"Snap\");\n\t     | var t2 = paper.text(50, 50, [\"S\",\"n\",\"a\",\"p\"]);\n\t     | // Text path usage\n\t     | t1.attr({textpath: \"M10,10L100,100\"});\n\t     | // or\n\t     | var pth = paper.path(\"M10,10L100,100\");\n\t     | t1.attr({textpath: pth});\n\t    \\*/\n\t    proto.text = function (x, y, text) {\n\t        var attr = {};\n\t        if (is(x, \"object\")) {\n\t            attr = x;\n\t        } else if (x != null) {\n\t            attr = {\n\t                x: x,\n\t                y: y,\n\t                text: text || \"\"\n\t            };\n\t        }\n\t        return this.el(\"text\", attr);\n\t    };\n\t    /*\\\n\t     * Paper.line\n\t     [ method ]\n\t     **\n\t     * Draws a line\n\t     **\n\t     - x1 (number) x coordinate position of the start\n\t     - y1 (number) y coordinate position of the start\n\t     - x2 (number) x coordinate position of the end\n\t     - y2 (number) y coordinate position of the end\n\t     = (object) the `line` element\n\t     **\n\t     > Usage\n\t     | var t1 = paper.line(50, 50, 100, 100);\n\t    \\*/\n\t    proto.line = function (x1, y1, x2, y2) {\n\t        var attr = {};\n\t        if (is(x1, \"object\")) {\n\t            attr = x1;\n\t        } else if (x1 != null) {\n\t            attr = {\n\t                x1: x1,\n\t                x2: x2,\n\t                y1: y1,\n\t                y2: y2\n\t            };\n\t        }\n\t        return this.el(\"line\", attr);\n\t    };\n\t    /*\\\n\t     * Paper.polyline\n\t     [ method ]\n\t     **\n\t     * Draws a polyline\n\t     **\n\t     - points (array) array of points\n\t     * or\n\t     - varargs (…) points\n\t     = (object) the `polyline` element\n\t     **\n\t     > Usage\n\t     | var p1 = paper.polyline([10, 10, 100, 100]);\n\t     | var p2 = paper.polyline(10, 10, 100, 100);\n\t    \\*/\n\t    proto.polyline = function (points) {\n\t        if (arguments.length > 1) {\n\t            points = Array.prototype.slice.call(arguments, 0);\n\t        }\n\t        var attr = {};\n\t        if (is(points, \"object\") && !is(points, \"array\")) {\n\t            attr = points;\n\t        } else if (points != null) {\n\t            attr = {points: points};\n\t        }\n\t        return this.el(\"polyline\", attr);\n\t    };\n\t    /*\\\n\t     * Paper.polygon\n\t     [ method ]\n\t     **\n\t     * Draws a polygon. See @Paper.polyline\n\t    \\*/\n\t    proto.polygon = function (points) {\n\t        if (arguments.length > 1) {\n\t            points = Array.prototype.slice.call(arguments, 0);\n\t        }\n\t        var attr = {};\n\t        if (is(points, \"object\") && !is(points, \"array\")) {\n\t            attr = points;\n\t        } else if (points != null) {\n\t            attr = {points: points};\n\t        }\n\t        return this.el(\"polygon\", attr);\n\t    };\n\t    // gradients\n\t    (function () {\n\t        var $ = Snap._.$;\n\t        // gradients' helpers\n\t        function Gstops() {\n\t            return this.selectAll(\"stop\");\n\t        }\n\t        function GaddStop(color, offset) {\n\t            var stop = $(\"stop\"),\n\t                attr = {\n\t                    offset: +offset + \"%\"\n\t                };\n\t            color = Snap.color(color);\n\t            attr[\"stop-color\"] = color.hex;\n\t            if (color.opacity < 1) {\n\t                attr[\"stop-opacity\"] = color.opacity;\n\t            }\n\t            $(stop, attr);\n\t            this.node.appendChild(stop);\n\t            return this;\n\t        }\n\t        function GgetBBox() {\n\t            if (this.type == \"linearGradient\") {\n\t                var x1 = $(this.node, \"x1\") || 0,\n\t                    x2 = $(this.node, \"x2\") || 1,\n\t                    y1 = $(this.node, \"y1\") || 0,\n\t                    y2 = $(this.node, \"y2\") || 0;\n\t                return Snap._.box(x1, y1, math.abs(x2 - x1), math.abs(y2 - y1));\n\t            } else {\n\t                var cx = this.node.cx || .5,\n\t                    cy = this.node.cy || .5,\n\t                    r = this.node.r || 0;\n\t                return Snap._.box(cx - r, cy - r, r * 2, r * 2);\n\t            }\n\t        }\n\t        function gradient(defs, str) {\n\t            var grad = eve(\"snap.util.grad.parse\", null, str).firstDefined(),\n\t                el;\n\t            if (!grad) {\n\t                return null;\n\t            }\n\t            grad.params.unshift(defs);\n\t            if (grad.type.toLowerCase() == \"l\") {\n\t                el = gradientLinear.apply(0, grad.params);\n\t            } else {\n\t                el = gradientRadial.apply(0, grad.params);\n\t            }\n\t            if (grad.type != grad.type.toLowerCase()) {\n\t                $(el.node, {\n\t                    gradientUnits: \"userSpaceOnUse\"\n\t                });\n\t            }\n\t            var stops = grad.stops,\n\t                len = stops.length,\n\t                start = 0,\n\t                j = 0;\n\t            function seed(i, end) {\n\t                var step = (end - start) / (i - j);\n\t                for (var k = j; k < i; k++) {\n\t                    stops[k].offset = +(+start + step * (k - j)).toFixed(2);\n\t                }\n\t                j = i;\n\t                start = end;\n\t            }\n\t            len--;\n\t            for (var i = 0; i < len; i++) if (\"offset\" in stops[i]) {\n\t                seed(i, stops[i].offset);\n\t            }\n\t            stops[len].offset = stops[len].offset || 100;\n\t            seed(len, stops[len].offset);\n\t            for (i = 0; i <= len; i++) {\n\t                var stop = stops[i];\n\t                el.addStop(stop.color, stop.offset);\n\t            }\n\t            return el;\n\t        }\n\t        function gradientLinear(defs, x1, y1, x2, y2) {\n\t            var el = Snap._.make(\"linearGradient\", defs);\n\t            el.stops = Gstops;\n\t            el.addStop = GaddStop;\n\t            el.getBBox = GgetBBox;\n\t            if (x1 != null) {\n\t                $(el.node, {\n\t                    x1: x1,\n\t                    y1: y1,\n\t                    x2: x2,\n\t                    y2: y2\n\t                });\n\t            }\n\t            return el;\n\t        }\n\t        function gradientRadial(defs, cx, cy, r, fx, fy) {\n\t            var el = Snap._.make(\"radialGradient\", defs);\n\t            el.stops = Gstops;\n\t            el.addStop = GaddStop;\n\t            el.getBBox = GgetBBox;\n\t            if (cx != null) {\n\t                $(el.node, {\n\t                    cx: cx,\n\t                    cy: cy,\n\t                    r: r\n\t                });\n\t            }\n\t            if (fx != null && fy != null) {\n\t                $(el.node, {\n\t                    fx: fx,\n\t                    fy: fy\n\t                });\n\t            }\n\t            return el;\n\t        }\n\t        /*\\\n\t         * Paper.gradient\n\t         [ method ]\n\t         **\n\t         * Creates a gradient element\n\t         **\n\t         - gradient (string) gradient descriptor\n\t         > Gradient Descriptor\n\t         * The gradient descriptor is an expression formatted as\n\t         * follows: `<type>(<coords>)<colors>`.  The `<type>` can be\n\t         * either linear or radial.  The uppercase `L` or `R` letters\n\t         * indicate absolute coordinates offset from the SVG surface.\n\t         * Lowercase `l` or `r` letters indicate coordinates\n\t         * calculated relative to the element to which the gradient is\n\t         * applied.  Coordinates specify a linear gradient vector as\n\t         * `x1`, `y1`, `x2`, `y2`, or a radial gradient as `cx`, `cy`,\n\t         * `r` and optional `fx`, `fy` specifying a focal point away\n\t         * from the center of the circle. Specify `<colors>` as a list\n\t         * of dash-separated CSS color values.  Each color may be\n\t         * followed by a custom offset value, separated with a colon\n\t         * character.\n\t         > Examples\n\t         * Linear gradient, relative from top-left corner to bottom-right\n\t         * corner, from black through red to white:\n\t         | var g = paper.gradient(\"l(0, 0, 1, 1)#000-#f00-#fff\");\n\t         * Linear gradient, absolute from (0, 0) to (100, 100), from black\n\t         * through red at 25% to white:\n\t         | var g = paper.gradient(\"L(0, 0, 100, 100)#000-#f00:25-#fff\");\n\t         * Radial gradient, relative from the center of the element with radius\n\t         * half the width, from black to white:\n\t         | var g = paper.gradient(\"r(0.5, 0.5, 0.5)#000-#fff\");\n\t         * To apply the gradient:\n\t         | paper.circle(50, 50, 40).attr({\n\t         |     fill: g\n\t         | });\n\t         = (object) the `gradient` element\n\t        \\*/\n\t        proto.gradient = function (str) {\n\t            return gradient(this.defs, str);\n\t        };\n\t        proto.gradientLinear = function (x1, y1, x2, y2) {\n\t            return gradientLinear(this.defs, x1, y1, x2, y2);\n\t        };\n\t        proto.gradientRadial = function (cx, cy, r, fx, fy) {\n\t            return gradientRadial(this.defs, cx, cy, r, fx, fy);\n\t        };\n\t        /*\\\n\t         * Paper.toString\n\t         [ method ]\n\t         **\n\t         * Returns SVG code for the @Paper\n\t         = (string) SVG code for the @Paper\n\t        \\*/\n\t        proto.toString = function () {\n\t            var doc = this.node.ownerDocument,\n\t                f = doc.createDocumentFragment(),\n\t                d = doc.createElement(\"div\"),\n\t                svg = this.node.cloneNode(true),\n\t                res;\n\t            f.appendChild(d);\n\t            d.appendChild(svg);\n\t            Snap._.$(svg, {xmlns: \"http://www.w3.org/2000/svg\"});\n\t            res = d.innerHTML;\n\t            f.removeChild(f.firstChild);\n\t            return res;\n\t        };\n\t        /*\\\n\t         * Paper.toDataURL\n\t         [ method ]\n\t         **\n\t         * Returns SVG code for the @Paper as Data URI string.\n\t         = (string) Data URI string\n\t        \\*/\n\t        proto.toDataURL = function () {\n\t            if (window && window.btoa) {\n\t                return \"data:image/svg+xml;base64,\" + btoa(unescape(encodeURIComponent(this)));\n\t            }\n\t        };\n\t        /*\\\n\t         * Paper.clear\n\t         [ method ]\n\t         **\n\t         * Removes all child nodes of the paper, except <defs>.\n\t        \\*/\n\t        proto.clear = function () {\n\t            var node = this.node.firstChild,\n\t                next;\n\t            while (node) {\n\t                next = node.nextSibling;\n\t                if (node.tagName != \"defs\") {\n\t                    node.parentNode.removeChild(node);\n\t                } else {\n\t                    proto.clear.call({node: node});\n\t                }\n\t                node = next;\n\t            }\n\t        };\n\t    }());\n\t});\n\t\n\t// Copyright (c) 2013 Adobe Systems Incorporated. All rights reserved.\n\t//\n\t// Licensed under the Apache License, Version 2.0 (the \"License\");\n\t// you may not use this file except in compliance with the License.\n\t// You may obtain a copy of the License at\n\t//\n\t// http://www.apache.org/licenses/LICENSE-2.0\n\t//\n\t// Unless required by applicable law or agreed to in writing, software\n\t// distributed under the License is distributed on an \"AS IS\" BASIS,\n\t// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n\t// See the License for the specific language governing permissions and\n\t// limitations under the License.\n\tSnap.plugin(function (Snap, Element, Paper, glob) {\n\t    var elproto = Element.prototype,\n\t        is = Snap.is,\n\t        clone = Snap._.clone,\n\t        has = \"hasOwnProperty\",\n\t        p2s = /,?([a-z]),?/gi,\n\t        toFloat = parseFloat,\n\t        math = Math,\n\t        PI = math.PI,\n\t        mmin = math.min,\n\t        mmax = math.max,\n\t        pow = math.pow,\n\t        abs = math.abs;\n\t    function paths(ps) {\n\t        var p = paths.ps = paths.ps || {};\n\t        if (p[ps]) {\n\t            p[ps].sleep = 100;\n\t        } else {\n\t            p[ps] = {\n\t                sleep: 100\n\t            };\n\t        }\n\t        setTimeout(function () {\n\t            for (var key in p) if (p[has](key) && key != ps) {\n\t                p[key].sleep--;\n\t                !p[key].sleep && delete p[key];\n\t            }\n\t        });\n\t        return p[ps];\n\t    }\n\t    function box(x, y, width, height) {\n\t        if (x == null) {\n\t            x = y = width = height = 0;\n\t        }\n\t        if (y == null) {\n\t            y = x.y;\n\t            width = x.width;\n\t            height = x.height;\n\t            x = x.x;\n\t        }\n\t        return {\n\t            x: x,\n\t            y: y,\n\t            width: width,\n\t            w: width,\n\t            height: height,\n\t            h: height,\n\t            x2: x + width,\n\t            y2: y + height,\n\t            cx: x + width / 2,\n\t            cy: y + height / 2,\n\t            r1: math.min(width, height) / 2,\n\t            r2: math.max(width, height) / 2,\n\t            r0: math.sqrt(width * width + height * height) / 2,\n\t            path: rectPath(x, y, width, height),\n\t            vb: [x, y, width, height].join(\" \")\n\t        };\n\t    }\n\t    function toString() {\n\t        return this.join(\",\").replace(p2s, \"$1\");\n\t    }\n\t    function pathClone(pathArray) {\n\t        var res = clone(pathArray);\n\t        res.toString = toString;\n\t        return res;\n\t    }\n\t    function getPointAtSegmentLength(p1x, p1y, c1x, c1y, c2x, c2y, p2x, p2y, length) {\n\t        if (length == null) {\n\t            return bezlen(p1x, p1y, c1x, c1y, c2x, c2y, p2x, p2y);\n\t        } else {\n\t            return findDotsAtSegment(p1x, p1y, c1x, c1y, c2x, c2y, p2x, p2y,\n\t                getTotLen(p1x, p1y, c1x, c1y, c2x, c2y, p2x, p2y, length));\n\t        }\n\t    }\n\t    function getLengthFactory(istotal, subpath) {\n\t        function O(val) {\n\t            return +(+val).toFixed(3);\n\t        }\n\t        return Snap._.cacher(function (path, length, onlystart) {\n\t            if (path instanceof Element) {\n\t                path = path.attr(\"d\");\n\t            }\n\t            path = path2curve(path);\n\t            var x, y, p, l, sp = \"\", subpaths = {}, point,\n\t                len = 0;\n\t            for (var i = 0, ii = path.length; i < ii; i++) {\n\t                p = path[i];\n\t                if (p[0] == \"M\") {\n\t                    x = +p[1];\n\t                    y = +p[2];\n\t                } else {\n\t                    l = getPointAtSegmentLength(x, y, p[1], p[2], p[3], p[4], p[5], p[6]);\n\t                    if (len + l > length) {\n\t                        if (subpath && !subpaths.start) {\n\t                            point = getPointAtSegmentLength(x, y, p[1], p[2], p[3], p[4], p[5], p[6], length - len);\n\t                            sp += [\n\t                                \"C\" + O(point.start.x),\n\t                                O(point.start.y),\n\t                                O(point.m.x),\n\t                                O(point.m.y),\n\t                                O(point.x),\n\t                                O(point.y)\n\t                            ];\n\t                            if (onlystart) {return sp;}\n\t                            subpaths.start = sp;\n\t                            sp = [\n\t                                \"M\" + O(point.x),\n\t                                O(point.y) + \"C\" + O(point.n.x),\n\t                                O(point.n.y),\n\t                                O(point.end.x),\n\t                                O(point.end.y),\n\t                                O(p[5]),\n\t                                O(p[6])\n\t                            ].join();\n\t                            len += l;\n\t                            x = +p[5];\n\t                            y = +p[6];\n\t                            continue;\n\t                        }\n\t                        if (!istotal && !subpath) {\n\t                            point = getPointAtSegmentLength(x, y, p[1], p[2], p[3], p[4], p[5], p[6], length - len);\n\t                            return point;\n\t                        }\n\t                    }\n\t                    len += l;\n\t                    x = +p[5];\n\t                    y = +p[6];\n\t                }\n\t                sp += p.shift() + p;\n\t            }\n\t            subpaths.end = sp;\n\t            point = istotal ? len : subpath ? subpaths : findDotsAtSegment(x, y, p[0], p[1], p[2], p[3], p[4], p[5], 1);\n\t            return point;\n\t        }, null, Snap._.clone);\n\t    }\n\t    var getTotalLength = getLengthFactory(1),\n\t        getPointAtLength = getLengthFactory(),\n\t        getSubpathsAtLength = getLengthFactory(0, 1);\n\t    function findDotsAtSegment(p1x, p1y, c1x, c1y, c2x, c2y, p2x, p2y, t) {\n\t        var t1 = 1 - t,\n\t            t13 = pow(t1, 3),\n\t            t12 = pow(t1, 2),\n\t            t2 = t * t,\n\t            t3 = t2 * t,\n\t            x = t13 * p1x + t12 * 3 * t * c1x + t1 * 3 * t * t * c2x + t3 * p2x,\n\t            y = t13 * p1y + t12 * 3 * t * c1y + t1 * 3 * t * t * c2y + t3 * p2y,\n\t            mx = p1x + 2 * t * (c1x - p1x) + t2 * (c2x - 2 * c1x + p1x),\n\t            my = p1y + 2 * t * (c1y - p1y) + t2 * (c2y - 2 * c1y + p1y),\n\t            nx = c1x + 2 * t * (c2x - c1x) + t2 * (p2x - 2 * c2x + c1x),\n\t            ny = c1y + 2 * t * (c2y - c1y) + t2 * (p2y - 2 * c2y + c1y),\n\t            ax = t1 * p1x + t * c1x,\n\t            ay = t1 * p1y + t * c1y,\n\t            cx = t1 * c2x + t * p2x,\n\t            cy = t1 * c2y + t * p2y,\n\t            alpha = (90 - math.atan2(mx - nx, my - ny) * 180 / PI);\n\t        // (mx > nx || my < ny) && (alpha += 180);\n\t        return {\n\t            x: x,\n\t            y: y,\n\t            m: {x: mx, y: my},\n\t            n: {x: nx, y: ny},\n\t            start: {x: ax, y: ay},\n\t            end: {x: cx, y: cy},\n\t            alpha: alpha\n\t        };\n\t    }\n\t    function bezierBBox(p1x, p1y, c1x, c1y, c2x, c2y, p2x, p2y) {\n\t        if (!Snap.is(p1x, \"array\")) {\n\t            p1x = [p1x, p1y, c1x, c1y, c2x, c2y, p2x, p2y];\n\t        }\n\t        var bbox = curveDim.apply(null, p1x);\n\t        return box(\n\t            bbox.min.x,\n\t            bbox.min.y,\n\t            bbox.max.x - bbox.min.x,\n\t            bbox.max.y - bbox.min.y\n\t        );\n\t    }\n\t    function isPointInsideBBox(bbox, x, y) {\n\t        return  x >= bbox.x &&\n\t                x <= bbox.x + bbox.width &&\n\t                y >= bbox.y &&\n\t                y <= bbox.y + bbox.height;\n\t    }\n\t    function isBBoxIntersect(bbox1, bbox2) {\n\t        bbox1 = box(bbox1);\n\t        bbox2 = box(bbox2);\n\t        return isPointInsideBBox(bbox2, bbox1.x, bbox1.y)\n\t            || isPointInsideBBox(bbox2, bbox1.x2, bbox1.y)\n\t            || isPointInsideBBox(bbox2, bbox1.x, bbox1.y2)\n\t            || isPointInsideBBox(bbox2, bbox1.x2, bbox1.y2)\n\t            || isPointInsideBBox(bbox1, bbox2.x, bbox2.y)\n\t            || isPointInsideBBox(bbox1, bbox2.x2, bbox2.y)\n\t            || isPointInsideBBox(bbox1, bbox2.x, bbox2.y2)\n\t            || isPointInsideBBox(bbox1, bbox2.x2, bbox2.y2)\n\t            || (bbox1.x < bbox2.x2 && bbox1.x > bbox2.x\n\t                || bbox2.x < bbox1.x2 && bbox2.x > bbox1.x)\n\t            && (bbox1.y < bbox2.y2 && bbox1.y > bbox2.y\n\t                || bbox2.y < bbox1.y2 && bbox2.y > bbox1.y);\n\t    }\n\t    function base3(t, p1, p2, p3, p4) {\n\t        var t1 = -3 * p1 + 9 * p2 - 9 * p3 + 3 * p4,\n\t            t2 = t * t1 + 6 * p1 - 12 * p2 + 6 * p3;\n\t        return t * t2 - 3 * p1 + 3 * p2;\n\t    }\n\t    function bezlen(x1, y1, x2, y2, x3, y3, x4, y4, z) {\n\t        if (z == null) {\n\t            z = 1;\n\t        }\n\t        z = z > 1 ? 1 : z < 0 ? 0 : z;\n\t        var z2 = z / 2,\n\t            n = 12,\n\t            Tvalues = [-.1252,.1252,-.3678,.3678,-.5873,.5873,-.7699,.7699,-.9041,.9041,-.9816,.9816],\n\t            Cvalues = [0.2491,0.2491,0.2335,0.2335,0.2032,0.2032,0.1601,0.1601,0.1069,0.1069,0.0472,0.0472],\n\t            sum = 0;\n\t        for (var i = 0; i < n; i++) {\n\t            var ct = z2 * Tvalues[i] + z2,\n\t                xbase = base3(ct, x1, x2, x3, x4),\n\t                ybase = base3(ct, y1, y2, y3, y4),\n\t                comb = xbase * xbase + ybase * ybase;\n\t            sum += Cvalues[i] * math.sqrt(comb);\n\t        }\n\t        return z2 * sum;\n\t    }\n\t    function getTotLen(x1, y1, x2, y2, x3, y3, x4, y4, ll) {\n\t        if (ll < 0 || bezlen(x1, y1, x2, y2, x3, y3, x4, y4) < ll) {\n\t            return;\n\t        }\n\t        var t = 1,\n\t            step = t / 2,\n\t            t2 = t - step,\n\t            l,\n\t            e = .01;\n\t        l = bezlen(x1, y1, x2, y2, x3, y3, x4, y4, t2);\n\t        while (abs(l - ll) > e) {\n\t            step /= 2;\n\t            t2 += (l < ll ? 1 : -1) * step;\n\t            l = bezlen(x1, y1, x2, y2, x3, y3, x4, y4, t2);\n\t        }\n\t        return t2;\n\t    }\n\t    function intersect(x1, y1, x2, y2, x3, y3, x4, y4) {\n\t        if (\n\t            mmax(x1, x2) < mmin(x3, x4) ||\n\t            mmin(x1, x2) > mmax(x3, x4) ||\n\t            mmax(y1, y2) < mmin(y3, y4) ||\n\t            mmin(y1, y2) > mmax(y3, y4)\n\t        ) {\n\t            return;\n\t        }\n\t        var nx = (x1 * y2 - y1 * x2) * (x3 - x4) - (x1 - x2) * (x3 * y4 - y3 * x4),\n\t            ny = (x1 * y2 - y1 * x2) * (y3 - y4) - (y1 - y2) * (x3 * y4 - y3 * x4),\n\t            denominator = (x1 - x2) * (y3 - y4) - (y1 - y2) * (x3 - x4);\n\t\n\t        if (!denominator) {\n\t            return;\n\t        }\n\t        var px = nx / denominator,\n\t            py = ny / denominator,\n\t            px2 = +px.toFixed(2),\n\t            py2 = +py.toFixed(2);\n\t        if (\n\t            px2 < +mmin(x1, x2).toFixed(2) ||\n\t            px2 > +mmax(x1, x2).toFixed(2) ||\n\t            px2 < +mmin(x3, x4).toFixed(2) ||\n\t            px2 > +mmax(x3, x4).toFixed(2) ||\n\t            py2 < +mmin(y1, y2).toFixed(2) ||\n\t            py2 > +mmax(y1, y2).toFixed(2) ||\n\t            py2 < +mmin(y3, y4).toFixed(2) ||\n\t            py2 > +mmax(y3, y4).toFixed(2)\n\t        ) {\n\t            return;\n\t        }\n\t        return {x: px, y: py};\n\t    }\n\t    function inter(bez1, bez2) {\n\t        return interHelper(bez1, bez2);\n\t    }\n\t    function interCount(bez1, bez2) {\n\t        return interHelper(bez1, bez2, 1);\n\t    }\n\t    function interHelper(bez1, bez2, justCount) {\n\t        var bbox1 = bezierBBox(bez1),\n\t            bbox2 = bezierBBox(bez2);\n\t        if (!isBBoxIntersect(bbox1, bbox2)) {\n\t            return justCount ? 0 : [];\n\t        }\n\t        var l1 = bezlen.apply(0, bez1),\n\t            l2 = bezlen.apply(0, bez2),\n\t            n1 = ~~(l1 / 8),\n\t            n2 = ~~(l2 / 8),\n\t            dots1 = [],\n\t            dots2 = [],\n\t            xy = {},\n\t            res = justCount ? 0 : [];\n\t        for (var i = 0; i < n1 + 1; i++) {\n\t            var p = findDotsAtSegment.apply(0, bez1.concat(i / n1));\n\t            dots1.push({x: p.x, y: p.y, t: i / n1});\n\t        }\n\t        for (i = 0; i < n2 + 1; i++) {\n\t            p = findDotsAtSegment.apply(0, bez2.concat(i / n2));\n\t            dots2.push({x: p.x, y: p.y, t: i / n2});\n\t        }\n\t        for (i = 0; i < n1; i++) {\n\t            for (var j = 0; j < n2; j++) {\n\t                var di = dots1[i],\n\t                    di1 = dots1[i + 1],\n\t                    dj = dots2[j],\n\t                    dj1 = dots2[j + 1],\n\t                    ci = abs(di1.x - di.x) < .001 ? \"y\" : \"x\",\n\t                    cj = abs(dj1.x - dj.x) < .001 ? \"y\" : \"x\",\n\t                    is = intersect(di.x, di.y, di1.x, di1.y, dj.x, dj.y, dj1.x, dj1.y);\n\t                if (is) {\n\t                    if (xy[is.x.toFixed(4)] == is.y.toFixed(4)) {\n\t                        continue;\n\t                    }\n\t                    xy[is.x.toFixed(4)] = is.y.toFixed(4);\n\t                    var t1 = di.t + abs((is[ci] - di[ci]) / (di1[ci] - di[ci])) * (di1.t - di.t),\n\t                        t2 = dj.t + abs((is[cj] - dj[cj]) / (dj1[cj] - dj[cj])) * (dj1.t - dj.t);\n\t                    if (t1 >= 0 && t1 <= 1 && t2 >= 0 && t2 <= 1) {\n\t                        if (justCount) {\n\t                            res++;\n\t                        } else {\n\t                            res.push({\n\t                                x: is.x,\n\t                                y: is.y,\n\t                                t1: t1,\n\t                                t2: t2\n\t                            });\n\t                        }\n\t                    }\n\t                }\n\t            }\n\t        }\n\t        return res;\n\t    }\n\t    function pathIntersection(path1, path2) {\n\t        return interPathHelper(path1, path2);\n\t    }\n\t    function pathIntersectionNumber(path1, path2) {\n\t        return interPathHelper(path1, path2, 1);\n\t    }\n\t    function interPathHelper(path1, path2, justCount) {\n\t        path1 = path2curve(path1);\n\t        path2 = path2curve(path2);\n\t        var x1, y1, x2, y2, x1m, y1m, x2m, y2m, bez1, bez2,\n\t            res = justCount ? 0 : [];\n\t        for (var i = 0, ii = path1.length; i < ii; i++) {\n\t            var pi = path1[i];\n\t            if (pi[0] == \"M\") {\n\t                x1 = x1m = pi[1];\n\t                y1 = y1m = pi[2];\n\t            } else {\n\t                if (pi[0] == \"C\") {\n\t                    bez1 = [x1, y1].concat(pi.slice(1));\n\t                    x1 = bez1[6];\n\t                    y1 = bez1[7];\n\t                } else {\n\t                    bez1 = [x1, y1, x1, y1, x1m, y1m, x1m, y1m];\n\t                    x1 = x1m;\n\t                    y1 = y1m;\n\t                }\n\t                for (var j = 0, jj = path2.length; j < jj; j++) {\n\t                    var pj = path2[j];\n\t                    if (pj[0] == \"M\") {\n\t                        x2 = x2m = pj[1];\n\t                        y2 = y2m = pj[2];\n\t                    } else {\n\t                        if (pj[0] == \"C\") {\n\t                            bez2 = [x2, y2].concat(pj.slice(1));\n\t                            x2 = bez2[6];\n\t                            y2 = bez2[7];\n\t                        } else {\n\t                            bez2 = [x2, y2, x2, y2, x2m, y2m, x2m, y2m];\n\t                            x2 = x2m;\n\t                            y2 = y2m;\n\t                        }\n\t                        var intr = interHelper(bez1, bez2, justCount);\n\t                        if (justCount) {\n\t                            res += intr;\n\t                        } else {\n\t                            for (var k = 0, kk = intr.length; k < kk; k++) {\n\t                                intr[k].segment1 = i;\n\t                                intr[k].segment2 = j;\n\t                                intr[k].bez1 = bez1;\n\t                                intr[k].bez2 = bez2;\n\t                            }\n\t                            res = res.concat(intr);\n\t                        }\n\t                    }\n\t                }\n\t            }\n\t        }\n\t        return res;\n\t    }\n\t    function isPointInsidePath(path, x, y) {\n\t        var bbox = pathBBox(path);\n\t        return isPointInsideBBox(bbox, x, y) &&\n\t               interPathHelper(path, [[\"M\", x, y], [\"H\", bbox.x2 + 10]], 1) % 2 == 1;\n\t    }\n\t    function pathBBox(path) {\n\t        var pth = paths(path);\n\t        if (pth.bbox) {\n\t            return clone(pth.bbox);\n\t        }\n\t        if (!path) {\n\t            return box();\n\t        }\n\t        path = path2curve(path);\n\t        var x = 0,\n\t            y = 0,\n\t            X = [],\n\t            Y = [],\n\t            p;\n\t        for (var i = 0, ii = path.length; i < ii; i++) {\n\t            p = path[i];\n\t            if (p[0] == \"M\") {\n\t                x = p[1];\n\t                y = p[2];\n\t                X.push(x);\n\t                Y.push(y);\n\t            } else {\n\t                var dim = curveDim(x, y, p[1], p[2], p[3], p[4], p[5], p[6]);\n\t                X = X.concat(dim.min.x, dim.max.x);\n\t                Y = Y.concat(dim.min.y, dim.max.y);\n\t                x = p[5];\n\t                y = p[6];\n\t            }\n\t        }\n\t        var xmin = mmin.apply(0, X),\n\t            ymin = mmin.apply(0, Y),\n\t            xmax = mmax.apply(0, X),\n\t            ymax = mmax.apply(0, Y),\n\t            bb = box(xmin, ymin, xmax - xmin, ymax - ymin);\n\t        pth.bbox = clone(bb);\n\t        return bb;\n\t    }\n\t    function rectPath(x, y, w, h, r) {\n\t        if (r) {\n\t            return [\n\t                [\"M\", +x + (+r), y],\n\t                [\"l\", w - r * 2, 0],\n\t                [\"a\", r, r, 0, 0, 1, r, r],\n\t                [\"l\", 0, h - r * 2],\n\t                [\"a\", r, r, 0, 0, 1, -r, r],\n\t                [\"l\", r * 2 - w, 0],\n\t                [\"a\", r, r, 0, 0, 1, -r, -r],\n\t                [\"l\", 0, r * 2 - h],\n\t                [\"a\", r, r, 0, 0, 1, r, -r],\n\t                [\"z\"]\n\t            ];\n\t        }\n\t        var res = [[\"M\", x, y], [\"l\", w, 0], [\"l\", 0, h], [\"l\", -w, 0], [\"z\"]];\n\t        res.toString = toString;\n\t        return res;\n\t    }\n\t    function ellipsePath(x, y, rx, ry, a) {\n\t        if (a == null && ry == null) {\n\t            ry = rx;\n\t        }\n\t        x = +x;\n\t        y = +y;\n\t        rx = +rx;\n\t        ry = +ry;\n\t        if (a != null) {\n\t            var rad = Math.PI / 180,\n\t                x1 = x + rx * Math.cos(-ry * rad),\n\t                x2 = x + rx * Math.cos(-a * rad),\n\t                y1 = y + rx * Math.sin(-ry * rad),\n\t                y2 = y + rx * Math.sin(-a * rad),\n\t                res = [[\"M\", x1, y1], [\"A\", rx, rx, 0, +(a - ry > 180), 0, x2, y2]];\n\t        } else {\n\t            res = [\n\t                [\"M\", x, y],\n\t                [\"m\", 0, -ry],\n\t                [\"a\", rx, ry, 0, 1, 1, 0, 2 * ry],\n\t                [\"a\", rx, ry, 0, 1, 1, 0, -2 * ry],\n\t                [\"z\"]\n\t            ];\n\t        }\n\t        res.toString = toString;\n\t        return res;\n\t    }\n\t    var unit2px = Snap._unit2px,\n\t        getPath = {\n\t        path: function (el) {\n\t            return el.attr(\"path\");\n\t        },\n\t        circle: function (el) {\n\t            var attr = unit2px(el);\n\t            return ellipsePath(attr.cx, attr.cy, attr.r);\n\t        },\n\t        ellipse: function (el) {\n\t            var attr = unit2px(el);\n\t            return ellipsePath(attr.cx || 0, attr.cy || 0, attr.rx, attr.ry);\n\t        },\n\t        rect: function (el) {\n\t            var attr = unit2px(el);\n\t            return rectPath(attr.x || 0, attr.y || 0, attr.width, attr.height, attr.rx, attr.ry);\n\t        },\n\t        image: function (el) {\n\t            var attr = unit2px(el);\n\t            return rectPath(attr.x || 0, attr.y || 0, attr.width, attr.height);\n\t        },\n\t        line: function (el) {\n\t            return \"M\" + [el.attr(\"x1\") || 0, el.attr(\"y1\") || 0, el.attr(\"x2\"), el.attr(\"y2\")];\n\t        },\n\t        polyline: function (el) {\n\t            return \"M\" + el.attr(\"points\");\n\t        },\n\t        polygon: function (el) {\n\t            return \"M\" + el.attr(\"points\") + \"z\";\n\t        },\n\t        deflt: function (el) {\n\t            var bbox = el.node.getBBox();\n\t            return rectPath(bbox.x, bbox.y, bbox.width, bbox.height);\n\t        }\n\t    };\n\t    function pathToRelative(pathArray) {\n\t        var pth = paths(pathArray),\n\t            lowerCase = String.prototype.toLowerCase;\n\t        if (pth.rel) {\n\t            return pathClone(pth.rel);\n\t        }\n\t        if (!Snap.is(pathArray, \"array\") || !Snap.is(pathArray && pathArray[0], \"array\")) {\n\t            pathArray = Snap.parsePathString(pathArray);\n\t        }\n\t        var res = [],\n\t            x = 0,\n\t            y = 0,\n\t            mx = 0,\n\t            my = 0,\n\t            start = 0;\n\t        if (pathArray[0][0] == \"M\") {\n\t            x = pathArray[0][1];\n\t            y = pathArray[0][2];\n\t            mx = x;\n\t            my = y;\n\t            start++;\n\t            res.push([\"M\", x, y]);\n\t        }\n\t        for (var i = start, ii = pathArray.length; i < ii; i++) {\n\t            var r = res[i] = [],\n\t                pa = pathArray[i];\n\t            if (pa[0] != lowerCase.call(pa[0])) {\n\t                r[0] = lowerCase.call(pa[0]);\n\t                switch (r[0]) {\n\t                    case \"a\":\n\t                        r[1] = pa[1];\n\t                        r[2] = pa[2];\n\t                        r[3] = pa[3];\n\t                        r[4] = pa[4];\n\t                        r[5] = pa[5];\n\t                        r[6] = +(pa[6] - x).toFixed(3);\n\t                        r[7] = +(pa[7] - y).toFixed(3);\n\t                        break;\n\t                    case \"v\":\n\t                        r[1] = +(pa[1] - y).toFixed(3);\n\t                        break;\n\t                    case \"m\":\n\t                        mx = pa[1];\n\t                        my = pa[2];\n\t                    default:\n\t                        for (var j = 1, jj = pa.length; j < jj; j++) {\n\t                            r[j] = +(pa[j] - ((j % 2) ? x : y)).toFixed(3);\n\t                        }\n\t                }\n\t            } else {\n\t                r = res[i] = [];\n\t                if (pa[0] == \"m\") {\n\t                    mx = pa[1] + x;\n\t                    my = pa[2] + y;\n\t                }\n\t                for (var k = 0, kk = pa.length; k < kk; k++) {\n\t                    res[i][k] = pa[k];\n\t                }\n\t            }\n\t            var len = res[i].length;\n\t            switch (res[i][0]) {\n\t                case \"z\":\n\t                    x = mx;\n\t                    y = my;\n\t                    break;\n\t                case \"h\":\n\t                    x += +res[i][len - 1];\n\t                    break;\n\t                case \"v\":\n\t                    y += +res[i][len - 1];\n\t                    break;\n\t                default:\n\t                    x += +res[i][len - 2];\n\t                    y += +res[i][len - 1];\n\t            }\n\t        }\n\t        res.toString = toString;\n\t        pth.rel = pathClone(res);\n\t        return res;\n\t    }\n\t    function pathToAbsolute(pathArray) {\n\t        var pth = paths(pathArray);\n\t        if (pth.abs) {\n\t            return pathClone(pth.abs);\n\t        }\n\t        if (!is(pathArray, \"array\") || !is(pathArray && pathArray[0], \"array\")) { // rough assumption\n\t            pathArray = Snap.parsePathString(pathArray);\n\t        }\n\t        if (!pathArray || !pathArray.length) {\n\t            return [[\"M\", 0, 0]];\n\t        }\n\t        var res = [],\n\t            x = 0,\n\t            y = 0,\n\t            mx = 0,\n\t            my = 0,\n\t            start = 0,\n\t            pa0;\n\t        if (pathArray[0][0] == \"M\") {\n\t            x = +pathArray[0][1];\n\t            y = +pathArray[0][2];\n\t            mx = x;\n\t            my = y;\n\t            start++;\n\t            res[0] = [\"M\", x, y];\n\t        }\n\t        var crz = pathArray.length == 3 &&\n\t            pathArray[0][0] == \"M\" &&\n\t            pathArray[1][0].toUpperCase() == \"R\" &&\n\t            pathArray[2][0].toUpperCase() == \"Z\";\n\t        for (var r, pa, i = start, ii = pathArray.length; i < ii; i++) {\n\t            res.push(r = []);\n\t            pa = pathArray[i];\n\t            pa0 = pa[0];\n\t            if (pa0 != pa0.toUpperCase()) {\n\t                r[0] = pa0.toUpperCase();\n\t                switch (r[0]) {\n\t                    case \"A\":\n\t                        r[1] = pa[1];\n\t                        r[2] = pa[2];\n\t                        r[3] = pa[3];\n\t                        r[4] = pa[4];\n\t                        r[5] = pa[5];\n\t                        r[6] = +pa[6] + x;\n\t                        r[7] = +pa[7] + y;\n\t                        break;\n\t                    case \"V\":\n\t                        r[1] = +pa[1] + y;\n\t                        break;\n\t                    case \"H\":\n\t                        r[1] = +pa[1] + x;\n\t                        break;\n\t                    case \"R\":\n\t                        var dots = [x, y].concat(pa.slice(1));\n\t                        for (var j = 2, jj = dots.length; j < jj; j++) {\n\t                            dots[j] = +dots[j] + x;\n\t                            dots[++j] = +dots[j] + y;\n\t                        }\n\t                        res.pop();\n\t                        res = res.concat(catmullRom2bezier(dots, crz));\n\t                        break;\n\t                    case \"O\":\n\t                        res.pop();\n\t                        dots = ellipsePath(x, y, pa[1], pa[2]);\n\t                        dots.push(dots[0]);\n\t                        res = res.concat(dots);\n\t                        break;\n\t                    case \"U\":\n\t                        res.pop();\n\t                        res = res.concat(ellipsePath(x, y, pa[1], pa[2], pa[3]));\n\t                        r = [\"U\"].concat(res[res.length - 1].slice(-2));\n\t                        break;\n\t                    case \"M\":\n\t                        mx = +pa[1] + x;\n\t                        my = +pa[2] + y;\n\t                    default:\n\t                        for (j = 1, jj = pa.length; j < jj; j++) {\n\t                            r[j] = +pa[j] + ((j % 2) ? x : y);\n\t                        }\n\t                }\n\t            } else if (pa0 == \"R\") {\n\t                dots = [x, y].concat(pa.slice(1));\n\t                res.pop();\n\t                res = res.concat(catmullRom2bezier(dots, crz));\n\t                r = [\"R\"].concat(pa.slice(-2));\n\t            } else if (pa0 == \"O\") {\n\t                res.pop();\n\t                dots = ellipsePath(x, y, pa[1], pa[2]);\n\t                dots.push(dots[0]);\n\t                res = res.concat(dots);\n\t            } else if (pa0 == \"U\") {\n\t                res.pop();\n\t                res = res.concat(ellipsePath(x, y, pa[1], pa[2], pa[3]));\n\t                r = [\"U\"].concat(res[res.length - 1].slice(-2));\n\t            } else {\n\t                for (var k = 0, kk = pa.length; k < kk; k++) {\n\t                    r[k] = pa[k];\n\t                }\n\t            }\n\t            pa0 = pa0.toUpperCase();\n\t            if (pa0 != \"O\") {\n\t                switch (r[0]) {\n\t                    case \"Z\":\n\t                        x = +mx;\n\t                        y = +my;\n\t                        break;\n\t                    case \"H\":\n\t                        x = r[1];\n\t                        break;\n\t                    case \"V\":\n\t                        y = r[1];\n\t                        break;\n\t                    case \"M\":\n\t                        mx = r[r.length - 2];\n\t                        my = r[r.length - 1];\n\t                    default:\n\t                        x = r[r.length - 2];\n\t                        y = r[r.length - 1];\n\t                }\n\t            }\n\t        }\n\t        res.toString = toString;\n\t        pth.abs = pathClone(res);\n\t        return res;\n\t    }\n\t    function l2c(x1, y1, x2, y2) {\n\t        return [x1, y1, x2, y2, x2, y2];\n\t    }\n\t    function q2c(x1, y1, ax, ay, x2, y2) {\n\t        var _13 = 1 / 3,\n\t            _23 = 2 / 3;\n\t        return [\n\t                _13 * x1 + _23 * ax,\n\t                _13 * y1 + _23 * ay,\n\t                _13 * x2 + _23 * ax,\n\t                _13 * y2 + _23 * ay,\n\t                x2,\n\t                y2\n\t            ];\n\t    }\n\t    function a2c(x1, y1, rx, ry, angle, large_arc_flag, sweep_flag, x2, y2, recursive) {\n\t        // for more information of where this math came from visit:\n\t        // http://www.w3.org/TR/SVG11/implnote.html#ArcImplementationNotes\n\t        var _120 = PI * 120 / 180,\n\t            rad = PI / 180 * (+angle || 0),\n\t            res = [],\n\t            xy,\n\t            rotate = Snap._.cacher(function (x, y, rad) {\n\t                var X = x * math.cos(rad) - y * math.sin(rad),\n\t                    Y = x * math.sin(rad) + y * math.cos(rad);\n\t                return {x: X, y: Y};\n\t            });\n\t        if (!recursive) {\n\t            xy = rotate(x1, y1, -rad);\n\t            x1 = xy.x;\n\t            y1 = xy.y;\n\t            xy = rotate(x2, y2, -rad);\n\t            x2 = xy.x;\n\t            y2 = xy.y;\n\t            var cos = math.cos(PI / 180 * angle),\n\t                sin = math.sin(PI / 180 * angle),\n\t                x = (x1 - x2) / 2,\n\t                y = (y1 - y2) / 2;\n\t            var h = (x * x) / (rx * rx) + (y * y) / (ry * ry);\n\t            if (h > 1) {\n\t                h = math.sqrt(h);\n\t                rx = h * rx;\n\t                ry = h * ry;\n\t            }\n\t            var rx2 = rx * rx,\n\t                ry2 = ry * ry,\n\t                k = (large_arc_flag == sweep_flag ? -1 : 1) *\n\t                    math.sqrt(abs((rx2 * ry2 - rx2 * y * y - ry2 * x * x) / (rx2 * y * y + ry2 * x * x))),\n\t                cx = k * rx * y / ry + (x1 + x2) / 2,\n\t                cy = k * -ry * x / rx + (y1 + y2) / 2,\n\t                f1 = math.asin(((y1 - cy) / ry).toFixed(9)),\n\t                f2 = math.asin(((y2 - cy) / ry).toFixed(9));\n\t\n\t            f1 = x1 < cx ? PI - f1 : f1;\n\t            f2 = x2 < cx ? PI - f2 : f2;\n\t            f1 < 0 && (f1 = PI * 2 + f1);\n\t            f2 < 0 && (f2 = PI * 2 + f2);\n\t            if (sweep_flag && f1 > f2) {\n\t                f1 = f1 - PI * 2;\n\t            }\n\t            if (!sweep_flag && f2 > f1) {\n\t                f2 = f2 - PI * 2;\n\t            }\n\t        } else {\n\t            f1 = recursive[0];\n\t            f2 = recursive[1];\n\t            cx = recursive[2];\n\t            cy = recursive[3];\n\t        }\n\t        var df = f2 - f1;\n\t        if (abs(df) > _120) {\n\t            var f2old = f2,\n\t                x2old = x2,\n\t                y2old = y2;\n\t            f2 = f1 + _120 * (sweep_flag && f2 > f1 ? 1 : -1);\n\t            x2 = cx + rx * math.cos(f2);\n\t            y2 = cy + ry * math.sin(f2);\n\t            res = a2c(x2, y2, rx, ry, angle, 0, sweep_flag, x2old, y2old, [f2, f2old, cx, cy]);\n\t        }\n\t        df = f2 - f1;\n\t        var c1 = math.cos(f1),\n\t            s1 = math.sin(f1),\n\t            c2 = math.cos(f2),\n\t            s2 = math.sin(f2),\n\t            t = math.tan(df / 4),\n\t            hx = 4 / 3 * rx * t,\n\t            hy = 4 / 3 * ry * t,\n\t            m1 = [x1, y1],\n\t            m2 = [x1 + hx * s1, y1 - hy * c1],\n\t            m3 = [x2 + hx * s2, y2 - hy * c2],\n\t            m4 = [x2, y2];\n\t        m2[0] = 2 * m1[0] - m2[0];\n\t        m2[1] = 2 * m1[1] - m2[1];\n\t        if (recursive) {\n\t            return [m2, m3, m4].concat(res);\n\t        } else {\n\t            res = [m2, m3, m4].concat(res).join().split(\",\");\n\t            var newres = [];\n\t            for (var i = 0, ii = res.length; i < ii; i++) {\n\t                newres[i] = i % 2 ? rotate(res[i - 1], res[i], rad).y : rotate(res[i], res[i + 1], rad).x;\n\t            }\n\t            return newres;\n\t        }\n\t    }\n\t    function findDotAtSegment(p1x, p1y, c1x, c1y, c2x, c2y, p2x, p2y, t) {\n\t        var t1 = 1 - t;\n\t        return {\n\t            x: pow(t1, 3) * p1x + pow(t1, 2) * 3 * t * c1x + t1 * 3 * t * t * c2x + pow(t, 3) * p2x,\n\t            y: pow(t1, 3) * p1y + pow(t1, 2) * 3 * t * c1y + t1 * 3 * t * t * c2y + pow(t, 3) * p2y\n\t        };\n\t    }\n\t\n\t    // Returns bounding box of cubic bezier curve.\n\t    // Source: http://blog.hackers-cafe.net/2009/06/how-to-calculate-bezier-curves-bounding.html\n\t    // Original version: NISHIO Hirokazu\n\t    // Modifications: https://github.com/timo22345\n\t    function curveDim(x0, y0, x1, y1, x2, y2, x3, y3) {\n\t        var tvalues = [],\n\t            bounds = [[], []],\n\t            a, b, c, t, t1, t2, b2ac, sqrtb2ac;\n\t        for (var i = 0; i < 2; ++i) {\n\t            if (i == 0) {\n\t                b = 6 * x0 - 12 * x1 + 6 * x2;\n\t                a = -3 * x0 + 9 * x1 - 9 * x2 + 3 * x3;\n\t                c = 3 * x1 - 3 * x0;\n\t            } else {\n\t                b = 6 * y0 - 12 * y1 + 6 * y2;\n\t                a = -3 * y0 + 9 * y1 - 9 * y2 + 3 * y3;\n\t                c = 3 * y1 - 3 * y0;\n\t            }\n\t            if (abs(a) < 1e-12) {\n\t                if (abs(b) < 1e-12) {\n\t                    continue;\n\t                }\n\t                t = -c / b;\n\t                if (0 < t && t < 1) {\n\t                    tvalues.push(t);\n\t                }\n\t                continue;\n\t            }\n\t            b2ac = b * b - 4 * c * a;\n\t            sqrtb2ac = math.sqrt(b2ac);\n\t            if (b2ac < 0) {\n\t                continue;\n\t            }\n\t            t1 = (-b + sqrtb2ac) / (2 * a);\n\t            if (0 < t1 && t1 < 1) {\n\t                tvalues.push(t1);\n\t            }\n\t            t2 = (-b - sqrtb2ac) / (2 * a);\n\t            if (0 < t2 && t2 < 1) {\n\t                tvalues.push(t2);\n\t            }\n\t        }\n\t\n\t        var x, y, j = tvalues.length,\n\t            jlen = j,\n\t            mt;\n\t        while (j--) {\n\t            t = tvalues[j];\n\t            mt = 1 - t;\n\t            bounds[0][j] = (mt * mt * mt * x0) + (3 * mt * mt * t * x1) + (3 * mt * t * t * x2) + (t * t * t * x3);\n\t            bounds[1][j] = (mt * mt * mt * y0) + (3 * mt * mt * t * y1) + (3 * mt * t * t * y2) + (t * t * t * y3);\n\t        }\n\t\n\t        bounds[0][jlen] = x0;\n\t        bounds[1][jlen] = y0;\n\t        bounds[0][jlen + 1] = x3;\n\t        bounds[1][jlen + 1] = y3;\n\t        bounds[0].length = bounds[1].length = jlen + 2;\n\t\n\t\n\t        return {\n\t          min: {x: mmin.apply(0, bounds[0]), y: mmin.apply(0, bounds[1])},\n\t          max: {x: mmax.apply(0, bounds[0]), y: mmax.apply(0, bounds[1])}\n\t        };\n\t    }\n\t\n\t    function path2curve(path, path2) {\n\t        var pth = !path2 && paths(path);\n\t        if (!path2 && pth.curve) {\n\t            return pathClone(pth.curve);\n\t        }\n\t        var p = pathToAbsolute(path),\n\t            p2 = path2 && pathToAbsolute(path2),\n\t            attrs = {x: 0, y: 0, bx: 0, by: 0, X: 0, Y: 0, qx: null, qy: null},\n\t            attrs2 = {x: 0, y: 0, bx: 0, by: 0, X: 0, Y: 0, qx: null, qy: null},\n\t            processPath = function (path, d, pcom) {\n\t                var nx, ny;\n\t                if (!path) {\n\t                    return [\"C\", d.x, d.y, d.x, d.y, d.x, d.y];\n\t                }\n\t                !(path[0] in {T: 1, Q: 1}) && (d.qx = d.qy = null);\n\t                switch (path[0]) {\n\t                    case \"M\":\n\t                        d.X = path[1];\n\t                        d.Y = path[2];\n\t                        break;\n\t                    case \"A\":\n\t                        path = [\"C\"].concat(a2c.apply(0, [d.x, d.y].concat(path.slice(1))));\n\t                        break;\n\t                    case \"S\":\n\t                        if (pcom == \"C\" || pcom == \"S\") { // In \"S\" case we have to take into account, if the previous command is C/S.\n\t                            nx = d.x * 2 - d.bx;          // And reflect the previous\n\t                            ny = d.y * 2 - d.by;          // command's control point relative to the current point.\n\t                        }\n\t                        else {                            // or some else or nothing\n\t                            nx = d.x;\n\t                            ny = d.y;\n\t                        }\n\t                        path = [\"C\", nx, ny].concat(path.slice(1));\n\t                        break;\n\t                    case \"T\":\n\t                        if (pcom == \"Q\" || pcom == \"T\") { // In \"T\" case we have to take into account, if the previous command is Q/T.\n\t                            d.qx = d.x * 2 - d.qx;        // And make a reflection similar\n\t                            d.qy = d.y * 2 - d.qy;        // to case \"S\".\n\t                        }\n\t                        else {                            // or something else or nothing\n\t                            d.qx = d.x;\n\t                            d.qy = d.y;\n\t                        }\n\t                        path = [\"C\"].concat(q2c(d.x, d.y, d.qx, d.qy, path[1], path[2]));\n\t                        break;\n\t                    case \"Q\":\n\t                        d.qx = path[1];\n\t                        d.qy = path[2];\n\t                        path = [\"C\"].concat(q2c(d.x, d.y, path[1], path[2], path[3], path[4]));\n\t                        break;\n\t                    case \"L\":\n\t                        path = [\"C\"].concat(l2c(d.x, d.y, path[1], path[2]));\n\t                        break;\n\t                    case \"H\":\n\t                        path = [\"C\"].concat(l2c(d.x, d.y, path[1], d.y));\n\t                        break;\n\t                    case \"V\":\n\t                        path = [\"C\"].concat(l2c(d.x, d.y, d.x, path[1]));\n\t                        break;\n\t                    case \"Z\":\n\t                        path = [\"C\"].concat(l2c(d.x, d.y, d.X, d.Y));\n\t                        break;\n\t                }\n\t                return path;\n\t            },\n\t            fixArc = function (pp, i) {\n\t                if (pp[i].length > 7) {\n\t                    pp[i].shift();\n\t                    var pi = pp[i];\n\t                    while (pi.length) {\n\t                        pcoms1[i] = \"A\"; // if created multiple C:s, their original seg is saved\n\t                        p2 && (pcoms2[i] = \"A\"); // the same as above\n\t                        pp.splice(i++, 0, [\"C\"].concat(pi.splice(0, 6)));\n\t                    }\n\t                    pp.splice(i, 1);\n\t                    ii = mmax(p.length, p2 && p2.length || 0);\n\t                }\n\t            },\n\t            fixM = function (path1, path2, a1, a2, i) {\n\t                if (path1 && path2 && path1[i][0] == \"M\" && path2[i][0] != \"M\") {\n\t                    path2.splice(i, 0, [\"M\", a2.x, a2.y]);\n\t                    a1.bx = 0;\n\t                    a1.by = 0;\n\t                    a1.x = path1[i][1];\n\t                    a1.y = path1[i][2];\n\t                    ii = mmax(p.length, p2 && p2.length || 0);\n\t                }\n\t            },\n\t            pcoms1 = [], // path commands of original path p\n\t            pcoms2 = [], // path commands of original path p2\n\t            pfirst = \"\", // temporary holder for original path command\n\t            pcom = \"\"; // holder for previous path command of original path\n\t        for (var i = 0, ii = mmax(p.length, p2 && p2.length || 0); i < ii; i++) {\n\t            p[i] && (pfirst = p[i][0]); // save current path command\n\t\n\t            if (pfirst != \"C\") // C is not saved yet, because it may be result of conversion\n\t            {\n\t                pcoms1[i] = pfirst; // Save current path command\n\t                i && ( pcom = pcoms1[i - 1]); // Get previous path command pcom\n\t            }\n\t            p[i] = processPath(p[i], attrs, pcom); // Previous path command is inputted to processPath\n\t\n\t            if (pcoms1[i] != \"A\" && pfirst == \"C\") pcoms1[i] = \"C\"; // A is the only command\n\t            // which may produce multiple C:s\n\t            // so we have to make sure that C is also C in original path\n\t\n\t            fixArc(p, i); // fixArc adds also the right amount of A:s to pcoms1\n\t\n\t            if (p2) { // the same procedures is done to p2\n\t                p2[i] && (pfirst = p2[i][0]);\n\t                if (pfirst != \"C\") {\n\t                    pcoms2[i] = pfirst;\n\t                    i && (pcom = pcoms2[i - 1]);\n\t                }\n\t                p2[i] = processPath(p2[i], attrs2, pcom);\n\t\n\t                if (pcoms2[i] != \"A\" && pfirst == \"C\") {\n\t                    pcoms2[i] = \"C\";\n\t                }\n\t\n\t                fixArc(p2, i);\n\t            }\n\t            fixM(p, p2, attrs, attrs2, i);\n\t            fixM(p2, p, attrs2, attrs, i);\n\t            var seg = p[i],\n\t                seg2 = p2 && p2[i],\n\t                seglen = seg.length,\n\t                seg2len = p2 && seg2.length;\n\t            attrs.x = seg[seglen - 2];\n\t            attrs.y = seg[seglen - 1];\n\t            attrs.bx = toFloat(seg[seglen - 4]) || attrs.x;\n\t            attrs.by = toFloat(seg[seglen - 3]) || attrs.y;\n\t            attrs2.bx = p2 && (toFloat(seg2[seg2len - 4]) || attrs2.x);\n\t            attrs2.by = p2 && (toFloat(seg2[seg2len - 3]) || attrs2.y);\n\t            attrs2.x = p2 && seg2[seg2len - 2];\n\t            attrs2.y = p2 && seg2[seg2len - 1];\n\t        }\n\t        if (!p2) {\n\t            pth.curve = pathClone(p);\n\t        }\n\t        return p2 ? [p, p2] : p;\n\t    }\n\t    function mapPath(path, matrix) {\n\t        if (!matrix) {\n\t            return path;\n\t        }\n\t        var x, y, i, j, ii, jj, pathi;\n\t        path = path2curve(path);\n\t        for (i = 0, ii = path.length; i < ii; i++) {\n\t            pathi = path[i];\n\t            for (j = 1, jj = pathi.length; j < jj; j += 2) {\n\t                x = matrix.x(pathi[j], pathi[j + 1]);\n\t                y = matrix.y(pathi[j], pathi[j + 1]);\n\t                pathi[j] = x;\n\t                pathi[j + 1] = y;\n\t            }\n\t        }\n\t        return path;\n\t    }\n\t\n\t    // http://schepers.cc/getting-to-the-point\n\t    function catmullRom2bezier(crp, z) {\n\t        var d = [];\n\t        for (var i = 0, iLen = crp.length; iLen - 2 * !z > i; i += 2) {\n\t            var p = [\n\t                        {x: +crp[i - 2], y: +crp[i - 1]},\n\t                        {x: +crp[i],     y: +crp[i + 1]},\n\t                        {x: +crp[i + 2], y: +crp[i + 3]},\n\t                        {x: +crp[i + 4], y: +crp[i + 5]}\n\t                    ];\n\t            if (z) {\n\t                if (!i) {\n\t                    p[0] = {x: +crp[iLen - 2], y: +crp[iLen - 1]};\n\t                } else if (iLen - 4 == i) {\n\t                    p[3] = {x: +crp[0], y: +crp[1]};\n\t                } else if (iLen - 2 == i) {\n\t                    p[2] = {x: +crp[0], y: +crp[1]};\n\t                    p[3] = {x: +crp[2], y: +crp[3]};\n\t                }\n\t            } else {\n\t                if (iLen - 4 == i) {\n\t                    p[3] = p[2];\n\t                } else if (!i) {\n\t                    p[0] = {x: +crp[i], y: +crp[i + 1]};\n\t                }\n\t            }\n\t            d.push([\"C\",\n\t                  (-p[0].x + 6 * p[1].x + p[2].x) / 6,\n\t                  (-p[0].y + 6 * p[1].y + p[2].y) / 6,\n\t                  (p[1].x + 6 * p[2].x - p[3].x) / 6,\n\t                  (p[1].y + 6*p[2].y - p[3].y) / 6,\n\t                  p[2].x,\n\t                  p[2].y\n\t            ]);\n\t        }\n\t\n\t        return d;\n\t    }\n\t\n\t    // export\n\t    Snap.path = paths;\n\t\n\t    /*\\\n\t     * Snap.path.getTotalLength\n\t     [ method ]\n\t     **\n\t     * Returns the length of the given path in pixels\n\t     **\n\t     - path (string) SVG path string\n\t     **\n\t     = (number) length\n\t    \\*/\n\t    Snap.path.getTotalLength = getTotalLength;\n\t    /*\\\n\t     * Snap.path.getPointAtLength\n\t     [ method ]\n\t     **\n\t     * Returns the coordinates of the point located at the given length along the given path\n\t     **\n\t     - path (string) SVG path string\n\t     - length (number) length, in pixels, from the start of the path, excluding non-rendering jumps\n\t     **\n\t     = (object) representation of the point:\n\t     o {\n\t     o     x: (number) x coordinate,\n\t     o     y: (number) y coordinate,\n\t     o     alpha: (number) angle of derivative\n\t     o }\n\t    \\*/\n\t    Snap.path.getPointAtLength = getPointAtLength;\n\t    /*\\\n\t     * Snap.path.getSubpath\n\t     [ method ]\n\t     **\n\t     * Returns the subpath of a given path between given start and end lengths\n\t     **\n\t     - path (string) SVG path string\n\t     - from (number) length, in pixels, from the start of the path to the start of the segment\n\t     - to (number) length, in pixels, from the start of the path to the end of the segment\n\t     **\n\t     = (string) path string definition for the segment\n\t    \\*/\n\t    Snap.path.getSubpath = function (path, from, to) {\n\t        if (this.getTotalLength(path) - to < 1e-6) {\n\t            return getSubpathsAtLength(path, from).end;\n\t        }\n\t        var a = getSubpathsAtLength(path, to, 1);\n\t        return from ? getSubpathsAtLength(a, from).end : a;\n\t    };\n\t    /*\\\n\t     * Element.getTotalLength\n\t     [ method ]\n\t     **\n\t     * Returns the length of the path in pixels (only works for `path` elements)\n\t     = (number) length\n\t    \\*/\n\t    elproto.getTotalLength = function () {\n\t        if (this.node.getTotalLength) {\n\t            return this.node.getTotalLength();\n\t        }\n\t    };\n\t    // SIERRA Element.getPointAtLength()/Element.getTotalLength(): If a <path> is broken into different segments, is the jump distance to the new coordinates set by the _M_ or _m_ commands calculated as part of the path's total length?\n\t    /*\\\n\t     * Element.getPointAtLength\n\t     [ method ]\n\t     **\n\t     * Returns coordinates of the point located at the given length on the given path (only works for `path` elements)\n\t     **\n\t     - length (number) length, in pixels, from the start of the path, excluding non-rendering jumps\n\t     **\n\t     = (object) representation of the point:\n\t     o {\n\t     o     x: (number) x coordinate,\n\t     o     y: (number) y coordinate,\n\t     o     alpha: (number) angle of derivative\n\t     o }\n\t    \\*/\n\t    elproto.getPointAtLength = function (length) {\n\t        return getPointAtLength(this.attr(\"d\"), length);\n\t    };\n\t    // SIERRA Element.getSubpath(): Similar to the problem for Element.getPointAtLength(). Unclear how this would work for a segmented path. Overall, the concept of _subpath_ and what I'm calling a _segment_ (series of non-_M_ or _Z_ commands) is unclear.\n\t    /*\\\n\t     * Element.getSubpath\n\t     [ method ]\n\t     **\n\t     * Returns subpath of a given element from given start and end lengths (only works for `path` elements)\n\t     **\n\t     - from (number) length, in pixels, from the start of the path to the start of the segment\n\t     - to (number) length, in pixels, from the start of the path to the end of the segment\n\t     **\n\t     = (string) path string definition for the segment\n\t    \\*/\n\t    elproto.getSubpath = function (from, to) {\n\t        return Snap.path.getSubpath(this.attr(\"d\"), from, to);\n\t    };\n\t    Snap._.box = box;\n\t    /*\\\n\t     * Snap.path.findDotsAtSegment\n\t     [ method ]\n\t     **\n\t     * Utility method\n\t     **\n\t     * Finds dot coordinates on the given cubic beziér curve at the given t\n\t     - p1x (number) x of the first point of the curve\n\t     - p1y (number) y of the first point of the curve\n\t     - c1x (number) x of the first anchor of the curve\n\t     - c1y (number) y of the first anchor of the curve\n\t     - c2x (number) x of the second anchor of the curve\n\t     - c2y (number) y of the second anchor of the curve\n\t     - p2x (number) x of the second point of the curve\n\t     - p2y (number) y of the second point of the curve\n\t     - t (number) position on the curve (0..1)\n\t     = (object) point information in format:\n\t     o {\n\t     o     x: (number) x coordinate of the point,\n\t     o     y: (number) y coordinate of the point,\n\t     o     m: {\n\t     o         x: (number) x coordinate of the left anchor,\n\t     o         y: (number) y coordinate of the left anchor\n\t     o     },\n\t     o     n: {\n\t     o         x: (number) x coordinate of the right anchor,\n\t     o         y: (number) y coordinate of the right anchor\n\t     o     },\n\t     o     start: {\n\t     o         x: (number) x coordinate of the start of the curve,\n\t     o         y: (number) y coordinate of the start of the curve\n\t     o     },\n\t     o     end: {\n\t     o         x: (number) x coordinate of the end of the curve,\n\t     o         y: (number) y coordinate of the end of the curve\n\t     o     },\n\t     o     alpha: (number) angle of the curve derivative at the point\n\t     o }\n\t    \\*/\n\t    Snap.path.findDotsAtSegment = findDotsAtSegment;\n\t    /*\\\n\t     * Snap.path.bezierBBox\n\t     [ method ]\n\t     **\n\t     * Utility method\n\t     **\n\t     * Returns the bounding box of a given cubic beziér curve\n\t     - p1x (number) x of the first point of the curve\n\t     - p1y (number) y of the first point of the curve\n\t     - c1x (number) x of the first anchor of the curve\n\t     - c1y (number) y of the first anchor of the curve\n\t     - c2x (number) x of the second anchor of the curve\n\t     - c2y (number) y of the second anchor of the curve\n\t     - p2x (number) x of the second point of the curve\n\t     - p2y (number) y of the second point of the curve\n\t     * or\n\t     - bez (array) array of six points for beziér curve\n\t     = (object) bounding box\n\t     o {\n\t     o     x: (number) x coordinate of the left top point of the box,\n\t     o     y: (number) y coordinate of the left top point of the box,\n\t     o     x2: (number) x coordinate of the right bottom point of the box,\n\t     o     y2: (number) y coordinate of the right bottom point of the box,\n\t     o     width: (number) width of the box,\n\t     o     height: (number) height of the box\n\t     o }\n\t    \\*/\n\t    Snap.path.bezierBBox = bezierBBox;\n\t    /*\\\n\t     * Snap.path.isPointInsideBBox\n\t     [ method ]\n\t     **\n\t     * Utility method\n\t     **\n\t     * Returns `true` if given point is inside bounding box\n\t     - bbox (string) bounding box\n\t     - x (string) x coordinate of the point\n\t     - y (string) y coordinate of the point\n\t     = (boolean) `true` if point is inside\n\t    \\*/\n\t    Snap.path.isPointInsideBBox = isPointInsideBBox;\n\t    Snap.closest = function (x, y, X, Y) {\n\t        var r = 100,\n\t            b = box(x - r / 2, y - r / 2, r, r),\n\t            inside = [],\n\t            getter = X[0].hasOwnProperty(\"x\") ? function (i) {\n\t                return {\n\t                    x: X[i].x,\n\t                    y: X[i].y\n\t                };\n\t            } : function (i) {\n\t                return {\n\t                    x: X[i],\n\t                    y: Y[i]\n\t                };\n\t            },\n\t            found = 0;\n\t        while (r <= 1e6 && !found) {\n\t            for (var i = 0, ii = X.length; i < ii; i++) {\n\t                var xy = getter(i);\n\t                if (isPointInsideBBox(b, xy.x, xy.y)) {\n\t                    found++;\n\t                    inside.push(xy);\n\t                    break;\n\t                }\n\t            }\n\t            if (!found) {\n\t                r *= 2;\n\t                b = box(x - r / 2, y - r / 2, r, r)\n\t            }\n\t        }\n\t        if (r == 1e6) {\n\t            return;\n\t        }\n\t        var len = Infinity,\n\t            res;\n\t        for (i = 0, ii = inside.length; i < ii; i++) {\n\t            var l = Snap.len(x, y, inside[i].x, inside[i].y);\n\t            if (len > l) {\n\t                len = l;\n\t                inside[i].len = l;\n\t                res = inside[i];\n\t            }\n\t        }\n\t        return res;\n\t    };\n\t    /*\\\n\t     * Snap.path.isBBoxIntersect\n\t     [ method ]\n\t     **\n\t     * Utility method\n\t     **\n\t     * Returns `true` if two bounding boxes intersect\n\t     - bbox1 (string) first bounding box\n\t     - bbox2 (string) second bounding box\n\t     = (boolean) `true` if bounding boxes intersect\n\t    \\*/\n\t    Snap.path.isBBoxIntersect = isBBoxIntersect;\n\t    /*\\\n\t     * Snap.path.intersection\n\t     [ method ]\n\t     **\n\t     * Utility method\n\t     **\n\t     * Finds intersections of two paths\n\t     - path1 (string) path string\n\t     - path2 (string) path string\n\t     = (array) dots of intersection\n\t     o [\n\t     o     {\n\t     o         x: (number) x coordinate of the point,\n\t     o         y: (number) y coordinate of the point,\n\t     o         t1: (number) t value for segment of path1,\n\t     o         t2: (number) t value for segment of path2,\n\t     o         segment1: (number) order number for segment of path1,\n\t     o         segment2: (number) order number for segment of path2,\n\t     o         bez1: (array) eight coordinates representing beziér curve for the segment of path1,\n\t     o         bez2: (array) eight coordinates representing beziér curve for the segment of path2\n\t     o     }\n\t     o ]\n\t    \\*/\n\t    Snap.path.intersection = pathIntersection;\n\t    Snap.path.intersectionNumber = pathIntersectionNumber;\n\t    /*\\\n\t     * Snap.path.isPointInside\n\t     [ method ]\n\t     **\n\t     * Utility method\n\t     **\n\t     * Returns `true` if given point is inside a given closed path.\n\t     *\n\t     * Note: fill mode doesn’t affect the result of this method.\n\t     - path (string) path string\n\t     - x (number) x of the point\n\t     - y (number) y of the point\n\t     = (boolean) `true` if point is inside the path\n\t    \\*/\n\t    Snap.path.isPointInside = isPointInsidePath;\n\t    /*\\\n\t     * Snap.path.getBBox\n\t     [ method ]\n\t     **\n\t     * Utility method\n\t     **\n\t     * Returns the bounding box of a given path\n\t     - path (string) path string\n\t     = (object) bounding box\n\t     o {\n\t     o     x: (number) x coordinate of the left top point of the box,\n\t     o     y: (number) y coordinate of the left top point of the box,\n\t     o     x2: (number) x coordinate of the right bottom point of the box,\n\t     o     y2: (number) y coordinate of the right bottom point of the box,\n\t     o     width: (number) width of the box,\n\t     o     height: (number) height of the box\n\t     o }\n\t    \\*/\n\t    Snap.path.getBBox = pathBBox;\n\t    Snap.path.get = getPath;\n\t    /*\\\n\t     * Snap.path.toRelative\n\t     [ method ]\n\t     **\n\t     * Utility method\n\t     **\n\t     * Converts path coordinates into relative values\n\t     - path (string) path string\n\t     = (array) path string\n\t    \\*/\n\t    Snap.path.toRelative = pathToRelative;\n\t    /*\\\n\t     * Snap.path.toAbsolute\n\t     [ method ]\n\t     **\n\t     * Utility method\n\t     **\n\t     * Converts path coordinates into absolute values\n\t     - path (string) path string\n\t     = (array) path string\n\t    \\*/\n\t    Snap.path.toAbsolute = pathToAbsolute;\n\t    /*\\\n\t     * Snap.path.toCubic\n\t     [ method ]\n\t     **\n\t     * Utility method\n\t     **\n\t     * Converts path to a new path where all segments are cubic beziér curves\n\t     - pathString (string|array) path string or array of segments\n\t     = (array) array of segments\n\t    \\*/\n\t    Snap.path.toCubic = path2curve;\n\t    /*\\\n\t     * Snap.path.map\n\t     [ method ]\n\t     **\n\t     * Transform the path string with the given matrix\n\t     - path (string) path string\n\t     - matrix (object) see @Matrix\n\t     = (string) transformed path string\n\t    \\*/\n\t    Snap.path.map = mapPath;\n\t    Snap.path.toString = toString;\n\t    Snap.path.clone = pathClone;\n\t});\n\t\n\t// Copyright (c) 2013 Adobe Systems Incorporated. All rights reserved.\n\t//\n\t// Licensed under the Apache License, Version 2.0 (the \"License\");\n\t// you may not use this file except in compliance with the License.\n\t// You may obtain a copy of the License at\n\t//\n\t// http://www.apache.org/licenses/LICENSE-2.0\n\t//\n\t// Unless required by applicable law or agreed to in writing, software\n\t// distributed under the License is distributed on an \"AS IS\" BASIS,\n\t// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n\t// See the License for the specific language governing permissions and\n\t// limitations under the License.\n\tSnap.plugin(function (Snap, Element, Paper, glob) {\n\t    var mmax = Math.max,\n\t        mmin = Math.min;\n\t\n\t    // Set\n\t    var Set = function (items) {\n\t        this.items = [];\n\t\tthis.bindings = {};\n\t        this.length = 0;\n\t        this.type = \"set\";\n\t        if (items) {\n\t            for (var i = 0, ii = items.length; i < ii; i++) {\n\t                if (items[i]) {\n\t                    this[this.items.length] = this.items[this.items.length] = items[i];\n\t                    this.length++;\n\t                }\n\t            }\n\t        }\n\t    },\n\t    setproto = Set.prototype;\n\t    /*\\\n\t     * Set.push\n\t     [ method ]\n\t     **\n\t     * Adds each argument to the current set\n\t     = (object) original element\n\t    \\*/\n\t    setproto.push = function () {\n\t        var item,\n\t            len;\n\t        for (var i = 0, ii = arguments.length; i < ii; i++) {\n\t            item = arguments[i];\n\t            if (item) {\n\t                len = this.items.length;\n\t                this[len] = this.items[len] = item;\n\t                this.length++;\n\t            }\n\t        }\n\t        return this;\n\t    };\n\t    /*\\\n\t     * Set.pop\n\t     [ method ]\n\t     **\n\t     * Removes last element and returns it\n\t     = (object) element\n\t    \\*/\n\t    setproto.pop = function () {\n\t        this.length && delete this[this.length--];\n\t        return this.items.pop();\n\t    };\n\t    /*\\\n\t     * Set.forEach\n\t     [ method ]\n\t     **\n\t     * Executes given function for each element in the set\n\t     *\n\t     * If the function returns `false`, the loop stops running.\n\t     **\n\t     - callback (function) function to run\n\t     - thisArg (object) context object for the callback\n\t     = (object) Set object\n\t    \\*/\n\t    setproto.forEach = function (callback, thisArg) {\n\t        for (var i = 0, ii = this.items.length; i < ii; i++) {\n\t            if (callback.call(thisArg, this.items[i], i) === false) {\n\t                return this;\n\t            }\n\t        }\n\t        return this;\n\t    };\n\t    /*\\\n\t     * Set.animate\n\t     [ method ]\n\t     **\n\t     * Animates each element in set in sync.\n\t     *\n\t     **\n\t     - attrs (object) key-value pairs of destination attributes\n\t     - duration (number) duration of the animation in milliseconds\n\t     - easing (function) #optional easing function from @mina or custom\n\t     - callback (function) #optional callback function that executes when the animation ends\n\t     * or\n\t     - animation (array) array of animation parameter for each element in set in format `[attrs, duration, easing, callback]`\n\t     > Usage\n\t     | // animate all elements in set to radius 10\n\t     | set.animate({r: 10}, 500, mina.easein);\n\t     | // or\n\t     | // animate first element to radius 10, but second to radius 20 and in different time\n\t     | set.animate([{r: 10}, 500, mina.easein], [{r: 20}, 1500, mina.easein]);\n\t     = (Element) the current element\n\t    \\*/\n\t    setproto.animate = function (attrs, ms, easing, callback) {\n\t        if (typeof easing == \"function\" && !easing.length) {\n\t            callback = easing;\n\t            easing = mina.linear;\n\t        }\n\t        if (attrs instanceof Snap._.Animation) {\n\t            callback = attrs.callback;\n\t            easing = attrs.easing;\n\t            ms = easing.dur;\n\t            attrs = attrs.attr;\n\t        }\n\t        var args = arguments;\n\t        if (Snap.is(attrs, \"array\") && Snap.is(args[args.length - 1], \"array\")) {\n\t            var each = true;\n\t        }\n\t        var begin,\n\t            handler = function () {\n\t                if (begin) {\n\t                    this.b = begin;\n\t                } else {\n\t                    begin = this.b;\n\t                }\n\t            },\n\t            cb = 0,\n\t            set = this,\n\t            callbacker = callback && function () {\n\t                if (++cb == set.length) {\n\t                    callback.call(this);\n\t                }\n\t            };\n\t        return this.forEach(function (el, i) {\n\t            eve.once(\"snap.animcreated.\" + el.id, handler);\n\t            if (each) {\n\t                args[i] && el.animate.apply(el, args[i]);\n\t            } else {\n\t                el.animate(attrs, ms, easing, callbacker);\n\t            }\n\t        });\n\t    };\n\t    setproto.remove = function () {\n\t        while (this.length) {\n\t            this.pop().remove();\n\t        }\n\t        return this;\n\t    };\n\t    /*\\\n\t     * Set.bind\n\t     [ method ]\n\t     **\n\t     * Specifies how to handle a specific attribute when applied\n\t     * to a set.\n\t     *\n\t     **\n\t     - attr (string) attribute name\n\t     - callback (function) function to run\n\t     * or\n\t     - attr (string) attribute name\n\t     - element (Element) specific element in the set to apply the attribute to\n\t     * or\n\t     - attr (string) attribute name\n\t     - element (Element) specific element in the set to apply the attribute to\n\t     - eattr (string) attribute on the element to bind the attribute to\n\t     = (object) Set object\n\t    \\*/\n\t    setproto.bind = function (attr, a, b) {\n\t        var data = {};\n\t        if (typeof a == \"function\") {\n\t            this.bindings[attr] = a;\n\t        } else {\n\t            var aname = b || attr;\n\t            this.bindings[attr] = function (v) {\n\t                data[aname] = v;\n\t                a.attr(data);\n\t            };\n\t        }\n\t        return this;\n\t    };\n\t    setproto.attr = function (value) {\n\t        var unbound = {};\n\t        for (var k in value) {\n\t            if (this.bindings[k]) {\n\t                this.bindings[k](value[k]);\n\t            } else {\n\t                unbound[k] = value[k];\n\t            }\n\t        }\n\t        for (var i = 0, ii = this.items.length; i < ii; i++) {\n\t            this.items[i].attr(unbound);\n\t        }\n\t        return this;\n\t    };\n\t    /*\\\n\t     * Set.clear\n\t     [ method ]\n\t     **\n\t     * Removes all elements from the set\n\t    \\*/\n\t    setproto.clear = function () {\n\t        while (this.length) {\n\t            this.pop();\n\t        }\n\t    };\n\t    /*\\\n\t     * Set.splice\n\t     [ method ]\n\t     **\n\t     * Removes range of elements from the set\n\t     **\n\t     - index (number) position of the deletion\n\t     - count (number) number of element to remove\n\t     - insertion… (object) #optional elements to insert\n\t     = (object) set elements that were deleted\n\t    \\*/\n\t    setproto.splice = function (index, count, insertion) {\n\t        index = index < 0 ? mmax(this.length + index, 0) : index;\n\t        count = mmax(0, mmin(this.length - index, count));\n\t        var tail = [],\n\t            todel = [],\n\t            args = [],\n\t            i;\n\t        for (i = 2; i < arguments.length; i++) {\n\t            args.push(arguments[i]);\n\t        }\n\t        for (i = 0; i < count; i++) {\n\t            todel.push(this[index + i]);\n\t        }\n\t        for (; i < this.length - index; i++) {\n\t            tail.push(this[index + i]);\n\t        }\n\t        var arglen = args.length;\n\t        for (i = 0; i < arglen + tail.length; i++) {\n\t            this.items[index + i] = this[index + i] = i < arglen ? args[i] : tail[i - arglen];\n\t        }\n\t        i = this.items.length = this.length -= count - arglen;\n\t        while (this[i]) {\n\t            delete this[i++];\n\t        }\n\t        return new Set(todel);\n\t    };\n\t    /*\\\n\t     * Set.exclude\n\t     [ method ]\n\t     **\n\t     * Removes given element from the set\n\t     **\n\t     - element (object) element to remove\n\t     = (boolean) `true` if object was found and removed from the set\n\t    \\*/\n\t    setproto.exclude = function (el) {\n\t        for (var i = 0, ii = this.length; i < ii; i++) if (this[i] == el) {\n\t            this.splice(i, 1);\n\t            return true;\n\t        }\n\t        return false;\n\t    };\n\t    setproto.insertAfter = function (el) {\n\t        var i = this.items.length;\n\t        while (i--) {\n\t            this.items[i].insertAfter(el);\n\t        }\n\t        return this;\n\t    };\n\t    setproto.getBBox = function () {\n\t        var x = [],\n\t            y = [],\n\t            x2 = [],\n\t            y2 = [];\n\t        for (var i = this.items.length; i--;) if (!this.items[i].removed) {\n\t            var box = this.items[i].getBBox();\n\t            x.push(box.x);\n\t            y.push(box.y);\n\t            x2.push(box.x + box.width);\n\t            y2.push(box.y + box.height);\n\t        }\n\t        x = mmin.apply(0, x);\n\t        y = mmin.apply(0, y);\n\t        x2 = mmax.apply(0, x2);\n\t        y2 = mmax.apply(0, y2);\n\t        return {\n\t            x: x,\n\t            y: y,\n\t            x2: x2,\n\t            y2: y2,\n\t            width: x2 - x,\n\t            height: y2 - y,\n\t            cx: x + (x2 - x) / 2,\n\t            cy: y + (y2 - y) / 2\n\t        };\n\t    };\n\t    setproto.clone = function (s) {\n\t        s = new Set;\n\t        for (var i = 0, ii = this.items.length; i < ii; i++) {\n\t            s.push(this.items[i].clone());\n\t        }\n\t        return s;\n\t    };\n\t    setproto.toString = function () {\n\t        return \"Snap\\u2018s set\";\n\t    };\n\t    setproto.type = \"set\";\n\t    // export\n\t    Snap.Set = Set;\n\t    Snap.set = function () {\n\t        var set = new Set;\n\t        if (arguments.length) {\n\t            set.push.apply(set, Array.prototype.slice.call(arguments, 0));\n\t        }\n\t        return set;\n\t    };\n\t});\n\t\n\t// Copyright (c) 2013 Adobe Systems Incorporated. All rights reserved.\n\t//\n\t// Licensed under the Apache License, Version 2.0 (the \"License\");\n\t// you may not use this file except in compliance with the License.\n\t// You may obtain a copy of the License at\n\t//\n\t// http://www.apache.org/licenses/LICENSE-2.0\n\t//\n\t// Unless required by applicable law or agreed to in writing, software\n\t// distributed under the License is distributed on an \"AS IS\" BASIS,\n\t// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n\t// See the License for the specific language governing permissions and\n\t// limitations under the License.\n\tSnap.plugin(function (Snap, Element, Paper, glob) {\n\t    var names = {},\n\t        reUnit = /[a-z]+$/i,\n\t        Str = String;\n\t    names.stroke = names.fill = \"colour\";\n\t    function getEmpty(item) {\n\t        var l = item[0];\n\t        switch (l.toLowerCase()) {\n\t            case \"t\": return [l, 0, 0];\n\t            case \"m\": return [l, 1, 0, 0, 1, 0, 0];\n\t            case \"r\": if (item.length == 4) {\n\t                return [l, 0, item[2], item[3]];\n\t            } else {\n\t                return [l, 0];\n\t            }\n\t            case \"s\": if (item.length == 5) {\n\t                return [l, 1, 1, item[3], item[4]];\n\t            } else if (item.length == 3) {\n\t                return [l, 1, 1];\n\t            } else {\n\t                return [l, 1];\n\t            }\n\t        }\n\t    }\n\t    function equaliseTransform(t1, t2, getBBox) {\n\t        t2 = Str(t2).replace(/\\.{3}|\\u2026/g, t1);\n\t        t1 = Snap.parseTransformString(t1) || [];\n\t        t2 = Snap.parseTransformString(t2) || [];\n\t        var maxlength = Math.max(t1.length, t2.length),\n\t            from = [],\n\t            to = [],\n\t            i = 0, j, jj,\n\t            tt1, tt2;\n\t        for (; i < maxlength; i++) {\n\t            tt1 = t1[i] || getEmpty(t2[i]);\n\t            tt2 = t2[i] || getEmpty(tt1);\n\t            if ((tt1[0] != tt2[0]) ||\n\t                (tt1[0].toLowerCase() == \"r\" && (tt1[2] != tt2[2] || tt1[3] != tt2[3])) ||\n\t                (tt1[0].toLowerCase() == \"s\" && (tt1[3] != tt2[3] || tt1[4] != tt2[4]))\n\t                ) {\n\t                    t1 = Snap._.transform2matrix(t1, getBBox());\n\t                    t2 = Snap._.transform2matrix(t2, getBBox());\n\t                    from = [[\"m\", t1.a, t1.b, t1.c, t1.d, t1.e, t1.f]];\n\t                    to = [[\"m\", t2.a, t2.b, t2.c, t2.d, t2.e, t2.f]];\n\t                    break;\n\t            }\n\t            from[i] = [];\n\t            to[i] = [];\n\t            for (j = 0, jj = Math.max(tt1.length, tt2.length); j < jj; j++) {\n\t                j in tt1 && (from[i][j] = tt1[j]);\n\t                j in tt2 && (to[i][j] = tt2[j]);\n\t            }\n\t        }\n\t        return {\n\t            from: path2array(from),\n\t            to: path2array(to),\n\t            f: getPath(from)\n\t        };\n\t    }\n\t    function getNumber(val) {\n\t        return val;\n\t    }\n\t    function getUnit(unit) {\n\t        return function (val) {\n\t            return +val.toFixed(3) + unit;\n\t        };\n\t    }\n\t    function getViewBox(val) {\n\t        return val.join(\" \");\n\t    }\n\t    function getColour(clr) {\n\t        return Snap.rgb(clr[0], clr[1], clr[2]);\n\t    }\n\t    function getPath(path) {\n\t        var k = 0, i, ii, j, jj, out, a, b = [];\n\t        for (i = 0, ii = path.length; i < ii; i++) {\n\t            out = \"[\";\n\t            a = ['\"' + path[i][0] + '\"'];\n\t            for (j = 1, jj = path[i].length; j < jj; j++) {\n\t                a[j] = \"val[\" + (k++) + \"]\";\n\t            }\n\t            out += a + \"]\";\n\t            b[i] = out;\n\t        }\n\t        return Function(\"val\", \"return Snap.path.toString.call([\" + b + \"])\");\n\t    }\n\t    function path2array(path) {\n\t        var out = [];\n\t        for (var i = 0, ii = path.length; i < ii; i++) {\n\t            for (var j = 1, jj = path[i].length; j < jj; j++) {\n\t                out.push(path[i][j]);\n\t            }\n\t        }\n\t        return out;\n\t    }\n\t    function isNumeric(obj) {\n\t        return isFinite(parseFloat(obj));\n\t    }\n\t    function arrayEqual(arr1, arr2) {\n\t        if (!Snap.is(arr1, \"array\") || !Snap.is(arr2, \"array\")) {\n\t            return false;\n\t        }\n\t        return arr1.toString() == arr2.toString();\n\t    }\n\t    Element.prototype.equal = function (name, b) {\n\t        return eve(\"snap.util.equal\", this, name, b).firstDefined();\n\t    };\n\t    eve.on(\"snap.util.equal\", function (name, b) {\n\t        var A, B, a = Str(this.attr(name) || \"\"),\n\t            el = this;\n\t        if (isNumeric(a) && isNumeric(b)) {\n\t            return {\n\t                from: parseFloat(a),\n\t                to: parseFloat(b),\n\t                f: getNumber\n\t            };\n\t        }\n\t        if (names[name] == \"colour\") {\n\t            A = Snap.color(a);\n\t            B = Snap.color(b);\n\t            return {\n\t                from: [A.r, A.g, A.b, A.opacity],\n\t                to: [B.r, B.g, B.b, B.opacity],\n\t                f: getColour\n\t            };\n\t        }\n\t        if (name == \"viewBox\") {\n\t            A = this.attr(name).vb.split(\" \").map(Number);\n\t            B = b.split(\" \").map(Number);\n\t            return {\n\t                from: A,\n\t                to: B,\n\t                f: getViewBox\n\t            };\n\t        }\n\t        if (name == \"transform\" || name == \"gradientTransform\" || name == \"patternTransform\") {\n\t            if (b instanceof Snap.Matrix) {\n\t                b = b.toTransformString();\n\t            }\n\t            if (!Snap._.rgTransform.test(b)) {\n\t                b = Snap._.svgTransform2string(b);\n\t            }\n\t            return equaliseTransform(a, b, function () {\n\t                return el.getBBox(1);\n\t            });\n\t        }\n\t        if (name == \"d\" || name == \"path\") {\n\t            A = Snap.path.toCubic(a, b);\n\t            return {\n\t                from: path2array(A[0]),\n\t                to: path2array(A[1]),\n\t                f: getPath(A[0])\n\t            };\n\t        }\n\t        if (name == \"points\") {\n\t            A = Str(a).split(Snap._.separator);\n\t            B = Str(b).split(Snap._.separator);\n\t            return {\n\t                from: A,\n\t                to: B,\n\t                f: function (val) { return val; }\n\t            };\n\t        }\n\t        var aUnit = a.match(reUnit),\n\t            bUnit = Str(b).match(reUnit);\n\t        if (aUnit && arrayEqual(aUnit, bUnit)) {\n\t            return {\n\t                from: parseFloat(a),\n\t                to: parseFloat(b),\n\t                f: getUnit(aUnit)\n\t            };\n\t        } else {\n\t            return {\n\t                from: this.asPX(name),\n\t                to: this.asPX(name, b),\n\t                f: getNumber\n\t            };\n\t        }\n\t    });\n\t});\n\t\n\t// Copyright (c) 2013 Adobe Systems Incorporated. All rights reserved.\n\t//\n\t// Licensed under the Apache License, Version 2.0 (the \"License\");\n\t// you may not use this file except in compliance with the License.\n\t// You may obtain a copy of the License at\n\t//\n\t// http://www.apache.org/licenses/LICENSE-2.0\n\t//\n\t// Unless required by applicable law or agreed to in writing, software\n\t// distributed under the License is distributed on an \"AS IS\" BASIS,\n\t// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n\t// See the License for the specific language governing permissions and\n\t// limitations under the License.\n\tSnap.plugin(function (Snap, Element, Paper, glob) {\n\t    var elproto = Element.prototype,\n\t    has = \"hasOwnProperty\",\n\t    supportsTouch = \"createTouch\" in glob.doc,\n\t    events = [\n\t        \"click\", \"dblclick\", \"mousedown\", \"mousemove\", \"mouseout\",\n\t        \"mouseover\", \"mouseup\", \"touchstart\", \"touchmove\", \"touchend\",\n\t        \"touchcancel\"\n\t    ],\n\t    touchMap = {\n\t        mousedown: \"touchstart\",\n\t        mousemove: \"touchmove\",\n\t        mouseup: \"touchend\"\n\t    },\n\t    getScroll = function (xy, el) {\n\t        var name = xy == \"y\" ? \"scrollTop\" : \"scrollLeft\",\n\t            doc = el && el.node ? el.node.ownerDocument : glob.doc;\n\t        return doc[name in doc.documentElement ? \"documentElement\" : \"body\"][name];\n\t    },\n\t    preventDefault = function () {\n\t        this.returnValue = false;\n\t    },\n\t    preventTouch = function () {\n\t        return this.originalEvent.preventDefault();\n\t    },\n\t    stopPropagation = function () {\n\t        this.cancelBubble = true;\n\t    },\n\t    stopTouch = function () {\n\t        return this.originalEvent.stopPropagation();\n\t    },\n\t    addEvent = function (obj, type, fn, element) {\n\t        var realName = supportsTouch && touchMap[type] ? touchMap[type] : type,\n\t            f = function (e) {\n\t                var scrollY = getScroll(\"y\", element),\n\t                    scrollX = getScroll(\"x\", element);\n\t                if (supportsTouch && touchMap[has](type)) {\n\t                    for (var i = 0, ii = e.targetTouches && e.targetTouches.length; i < ii; i++) {\n\t                        if (e.targetTouches[i].target == obj || obj.contains(e.targetTouches[i].target)) {\n\t                            var olde = e;\n\t                            e = e.targetTouches[i];\n\t                            e.originalEvent = olde;\n\t                            e.preventDefault = preventTouch;\n\t                            e.stopPropagation = stopTouch;\n\t                            break;\n\t                        }\n\t                    }\n\t                }\n\t                var x = e.clientX + scrollX,\n\t                    y = e.clientY + scrollY;\n\t                return fn.call(element, e, x, y);\n\t            };\n\t\n\t        if (type !== realName) {\n\t            obj.addEventListener(type, f, false);\n\t        }\n\t\n\t        obj.addEventListener(realName, f, false);\n\t\n\t        return function () {\n\t            if (type !== realName) {\n\t                obj.removeEventListener(type, f, false);\n\t            }\n\t\n\t            obj.removeEventListener(realName, f, false);\n\t            return true;\n\t        };\n\t    },\n\t    drag = [],\n\t    dragMove = function (e) {\n\t        var x = e.clientX,\n\t            y = e.clientY,\n\t            scrollY = getScroll(\"y\"),\n\t            scrollX = getScroll(\"x\"),\n\t            dragi,\n\t            j = drag.length;\n\t        while (j--) {\n\t            dragi = drag[j];\n\t            if (supportsTouch) {\n\t                var i = e.touches && e.touches.length,\n\t                    touch;\n\t                while (i--) {\n\t                    touch = e.touches[i];\n\t                    if (touch.identifier == dragi.el._drag.id || dragi.el.node.contains(touch.target)) {\n\t                        x = touch.clientX;\n\t                        y = touch.clientY;\n\t                        (e.originalEvent ? e.originalEvent : e).preventDefault();\n\t                        break;\n\t                    }\n\t                }\n\t            } else {\n\t                e.preventDefault();\n\t            }\n\t            var node = dragi.el.node,\n\t                o,\n\t                next = node.nextSibling,\n\t                parent = node.parentNode,\n\t                display = node.style.display;\n\t            // glob.win.opera && parent.removeChild(node);\n\t            // node.style.display = \"none\";\n\t            // o = dragi.el.paper.getElementByPoint(x, y);\n\t            // node.style.display = display;\n\t            // glob.win.opera && (next ? parent.insertBefore(node, next) : parent.appendChild(node));\n\t            // o && eve(\"snap.drag.over.\" + dragi.el.id, dragi.el, o);\n\t            x += scrollX;\n\t            y += scrollY;\n\t            eve(\"snap.drag.move.\" + dragi.el.id, dragi.move_scope || dragi.el, x - dragi.el._drag.x, y - dragi.el._drag.y, x, y, e);\n\t        }\n\t    },\n\t    dragUp = function (e) {\n\t        Snap.unmousemove(dragMove).unmouseup(dragUp);\n\t        var i = drag.length,\n\t            dragi;\n\t        while (i--) {\n\t            dragi = drag[i];\n\t            dragi.el._drag = {};\n\t            eve(\"snap.drag.end.\" + dragi.el.id, dragi.end_scope || dragi.start_scope || dragi.move_scope || dragi.el, e);\n\t            eve.off(\"snap.drag.*.\" + dragi.el.id);\n\t        }\n\t        drag = [];\n\t    };\n\t    /*\\\n\t     * Element.click\n\t     [ method ]\n\t     **\n\t     * Adds a click event handler to the element\n\t     - handler (function) handler for the event\n\t     = (object) @Element\n\t    \\*/\n\t    /*\\\n\t     * Element.unclick\n\t     [ method ]\n\t     **\n\t     * Removes a click event handler from the element\n\t     - handler (function) handler for the event\n\t     = (object) @Element\n\t    \\*/\n\t\n\t    /*\\\n\t     * Element.dblclick\n\t     [ method ]\n\t     **\n\t     * Adds a double click event handler to the element\n\t     - handler (function) handler for the event\n\t     = (object) @Element\n\t    \\*/\n\t    /*\\\n\t     * Element.undblclick\n\t     [ method ]\n\t     **\n\t     * Removes a double click event handler from the element\n\t     - handler (function) handler for the event\n\t     = (object) @Element\n\t    \\*/\n\t\n\t    /*\\\n\t     * Element.mousedown\n\t     [ method ]\n\t     **\n\t     * Adds a mousedown event handler to the element\n\t     - handler (function) handler for the event\n\t     = (object) @Element\n\t    \\*/\n\t    /*\\\n\t     * Element.unmousedown\n\t     [ method ]\n\t     **\n\t     * Removes a mousedown event handler from the element\n\t     - handler (function) handler for the event\n\t     = (object) @Element\n\t    \\*/\n\t\n\t    /*\\\n\t     * Element.mousemove\n\t     [ method ]\n\t     **\n\t     * Adds a mousemove event handler to the element\n\t     - handler (function) handler for the event\n\t     = (object) @Element\n\t    \\*/\n\t    /*\\\n\t     * Element.unmousemove\n\t     [ method ]\n\t     **\n\t     * Removes a mousemove event handler from the element\n\t     - handler (function) handler for the event\n\t     = (object) @Element\n\t    \\*/\n\t\n\t    /*\\\n\t     * Element.mouseout\n\t     [ method ]\n\t     **\n\t     * Adds a mouseout event handler to the element\n\t     - handler (function) handler for the event\n\t     = (object) @Element\n\t    \\*/\n\t    /*\\\n\t     * Element.unmouseout\n\t     [ method ]\n\t     **\n\t     * Removes a mouseout event handler from the element\n\t     - handler (function) handler for the event\n\t     = (object) @Element\n\t    \\*/\n\t\n\t    /*\\\n\t     * Element.mouseover\n\t     [ method ]\n\t     **\n\t     * Adds a mouseover event handler to the element\n\t     - handler (function) handler for the event\n\t     = (object) @Element\n\t    \\*/\n\t    /*\\\n\t     * Element.unmouseover\n\t     [ method ]\n\t     **\n\t     * Removes a mouseover event handler from the element\n\t     - handler (function) handler for the event\n\t     = (object) @Element\n\t    \\*/\n\t\n\t    /*\\\n\t     * Element.mouseup\n\t     [ method ]\n\t     **\n\t     * Adds a mouseup event handler to the element\n\t     - handler (function) handler for the event\n\t     = (object) @Element\n\t    \\*/\n\t    /*\\\n\t     * Element.unmouseup\n\t     [ method ]\n\t     **\n\t     * Removes a mouseup event handler from the element\n\t     - handler (function) handler for the event\n\t     = (object) @Element\n\t    \\*/\n\t\n\t    /*\\\n\t     * Element.touchstart\n\t     [ method ]\n\t     **\n\t     * Adds a touchstart event handler to the element\n\t     - handler (function) handler for the event\n\t     = (object) @Element\n\t    \\*/\n\t    /*\\\n\t     * Element.untouchstart\n\t     [ method ]\n\t     **\n\t     * Removes a touchstart event handler from the element\n\t     - handler (function) handler for the event\n\t     = (object) @Element\n\t    \\*/\n\t\n\t    /*\\\n\t     * Element.touchmove\n\t     [ method ]\n\t     **\n\t     * Adds a touchmove event handler to the element\n\t     - handler (function) handler for the event\n\t     = (object) @Element\n\t    \\*/\n\t    /*\\\n\t     * Element.untouchmove\n\t     [ method ]\n\t     **\n\t     * Removes a touchmove event handler from the element\n\t     - handler (function) handler for the event\n\t     = (object) @Element\n\t    \\*/\n\t\n\t    /*\\\n\t     * Element.touchend\n\t     [ method ]\n\t     **\n\t     * Adds a touchend event handler to the element\n\t     - handler (function) handler for the event\n\t     = (object) @Element\n\t    \\*/\n\t    /*\\\n\t     * Element.untouchend\n\t     [ method ]\n\t     **\n\t     * Removes a touchend event handler from the element\n\t     - handler (function) handler for the event\n\t     = (object) @Element\n\t    \\*/\n\t\n\t    /*\\\n\t     * Element.touchcancel\n\t     [ method ]\n\t     **\n\t     * Adds a touchcancel event handler to the element\n\t     - handler (function) handler for the event\n\t     = (object) @Element\n\t    \\*/\n\t    /*\\\n\t     * Element.untouchcancel\n\t     [ method ]\n\t     **\n\t     * Removes a touchcancel event handler from the element\n\t     - handler (function) handler for the event\n\t     = (object) @Element\n\t    \\*/\n\t    for (var i = events.length; i--;) {\n\t        (function (eventName) {\n\t            Snap[eventName] = elproto[eventName] = function (fn, scope) {\n\t                if (Snap.is(fn, \"function\")) {\n\t                    this.events = this.events || [];\n\t                    this.events.push({\n\t                        name: eventName,\n\t                        f: fn,\n\t                        unbind: addEvent(this.node || document, eventName, fn, scope || this)\n\t                    });\n\t                } else {\n\t                    for (var i = 0, ii = this.events.length; i < ii; i++) if (this.events[i].name == eventName) {\n\t                        try {\n\t                            this.events[i].f.call(this);\n\t                        } catch (e) {}\n\t                    }\n\t                }\n\t                return this;\n\t            };\n\t            Snap[\"un\" + eventName] =\n\t            elproto[\"un\" + eventName] = function (fn) {\n\t                var events = this.events || [],\n\t                    l = events.length;\n\t                while (l--) if (events[l].name == eventName &&\n\t                               (events[l].f == fn || !fn)) {\n\t                    events[l].unbind();\n\t                    events.splice(l, 1);\n\t                    !events.length && delete this.events;\n\t                    return this;\n\t                }\n\t                return this;\n\t            };\n\t        })(events[i]);\n\t    }\n\t    /*\\\n\t     * Element.hover\n\t     [ method ]\n\t     **\n\t     * Adds hover event handlers to the element\n\t     - f_in (function) handler for hover in\n\t     - f_out (function) handler for hover out\n\t     - icontext (object) #optional context for hover in handler\n\t     - ocontext (object) #optional context for hover out handler\n\t     = (object) @Element\n\t    \\*/\n\t    elproto.hover = function (f_in, f_out, scope_in, scope_out) {\n\t        return this.mouseover(f_in, scope_in).mouseout(f_out, scope_out || scope_in);\n\t    };\n\t    /*\\\n\t     * Element.unhover\n\t     [ method ]\n\t     **\n\t     * Removes hover event handlers from the element\n\t     - f_in (function) handler for hover in\n\t     - f_out (function) handler for hover out\n\t     = (object) @Element\n\t    \\*/\n\t    elproto.unhover = function (f_in, f_out) {\n\t        return this.unmouseover(f_in).unmouseout(f_out);\n\t    };\n\t    var draggable = [];\n\t    // SIERRA unclear what _context_ refers to for starting, ending, moving the drag gesture.\n\t    // SIERRA Element.drag(): _x position of the mouse_: Where are the x/y values offset from?\n\t    // SIERRA Element.drag(): much of this member's doc appears to be duplicated for some reason.\n\t    // SIERRA Unclear about this sentence: _Additionally following drag events will be triggered: drag.start.<id> on start, drag.end.<id> on end and drag.move.<id> on every move._ Is there a global _drag_ object to which you can assign handlers keyed by an element's ID?\n\t    /*\\\n\t     * Element.drag\n\t     [ method ]\n\t     **\n\t     * Adds event handlers for an element's drag gesture\n\t     **\n\t     - onmove (function) handler for moving\n\t     - onstart (function) handler for drag start\n\t     - onend (function) handler for drag end\n\t     - mcontext (object) #optional context for moving handler\n\t     - scontext (object) #optional context for drag start handler\n\t     - econtext (object) #optional context for drag end handler\n\t     * Additionaly following `drag` events are triggered: `drag.start.<id>` on start,\n\t     * `drag.end.<id>` on end and `drag.move.<id>` on every move. When element is dragged over another element\n\t     * `drag.over.<id>` fires as well.\n\t     *\n\t     * Start event and start handler are called in specified context or in context of the element with following parameters:\n\t     o x (number) x position of the mouse\n\t     o y (number) y position of the mouse\n\t     o event (object) DOM event object\n\t     * Move event and move handler are called in specified context or in context of the element with following parameters:\n\t     o dx (number) shift by x from the start point\n\t     o dy (number) shift by y from the start point\n\t     o x (number) x position of the mouse\n\t     o y (number) y position of the mouse\n\t     o event (object) DOM event object\n\t     * End event and end handler are called in specified context or in context of the element with following parameters:\n\t     o event (object) DOM event object\n\t     = (object) @Element\n\t    \\*/\n\t    elproto.drag = function (onmove, onstart, onend, move_scope, start_scope, end_scope) {\n\t        var el = this;\n\t        if (!arguments.length) {\n\t            var origTransform;\n\t            return el.drag(function (dx, dy) {\n\t                this.attr({\n\t                    transform: origTransform + (origTransform ? \"T\" : \"t\") + [dx, dy]\n\t                });\n\t            }, function () {\n\t                origTransform = this.transform().local;\n\t            });\n\t        }\n\t        function start(e, x, y) {\n\t            (e.originalEvent || e).preventDefault();\n\t            el._drag.x = x;\n\t            el._drag.y = y;\n\t            el._drag.id = e.identifier;\n\t            !drag.length && Snap.mousemove(dragMove).mouseup(dragUp);\n\t            drag.push({el: el, move_scope: move_scope, start_scope: start_scope, end_scope: end_scope});\n\t            onstart && eve.on(\"snap.drag.start.\" + el.id, onstart);\n\t            onmove && eve.on(\"snap.drag.move.\" + el.id, onmove);\n\t            onend && eve.on(\"snap.drag.end.\" + el.id, onend);\n\t            eve(\"snap.drag.start.\" + el.id, start_scope || move_scope || el, x, y, e);\n\t        }\n\t        function init(e, x, y) {\n\t            eve(\"snap.draginit.\" + el.id, el, e, x, y);\n\t        }\n\t        eve.on(\"snap.draginit.\" + el.id, start);\n\t        el._drag = {};\n\t        draggable.push({el: el, start: start, init: init});\n\t        el.mousedown(init);\n\t        return el;\n\t    };\n\t    /*\n\t     * Element.onDragOver\n\t     [ method ]\n\t     **\n\t     * Shortcut to assign event handler for `drag.over.<id>` event, where `id` is the element's `id` (see @Element.id)\n\t     - f (function) handler for event, first argument would be the element you are dragging over\n\t    \\*/\n\t    // elproto.onDragOver = function (f) {\n\t    //     f ? eve.on(\"snap.drag.over.\" + this.id, f) : eve.unbind(\"snap.drag.over.\" + this.id);\n\t    // };\n\t    /*\\\n\t     * Element.undrag\n\t     [ method ]\n\t     **\n\t     * Removes all drag event handlers from the given element\n\t    \\*/\n\t    elproto.undrag = function () {\n\t        var i = draggable.length;\n\t        while (i--) if (draggable[i].el == this) {\n\t            this.unmousedown(draggable[i].init);\n\t            draggable.splice(i, 1);\n\t            eve.unbind(\"snap.drag.*.\" + this.id);\n\t            eve.unbind(\"snap.draginit.\" + this.id);\n\t        }\n\t        !draggable.length && Snap.unmousemove(dragMove).unmouseup(dragUp);\n\t        return this;\n\t    };\n\t});\n\t\n\t// Copyright (c) 2013 Adobe Systems Incorporated. All rights reserved.\n\t//\n\t// Licensed under the Apache License, Version 2.0 (the \"License\");\n\t// you may not use this file except in compliance with the License.\n\t// You may obtain a copy of the License at\n\t//\n\t// http://www.apache.org/licenses/LICENSE-2.0\n\t//\n\t// Unless required by applicable law or agreed to in writing, software\n\t// distributed under the License is distributed on an \"AS IS\" BASIS,\n\t// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n\t// See the License for the specific language governing permissions and\n\t// limitations under the License.\n\tSnap.plugin(function (Snap, Element, Paper, glob) {\n\t    var elproto = Element.prototype,\n\t        pproto = Paper.prototype,\n\t        rgurl = /^\\s*url\\((.+)\\)/,\n\t        Str = String,\n\t        $ = Snap._.$;\n\t    Snap.filter = {};\n\t    /*\\\n\t     * Paper.filter\n\t     [ method ]\n\t     **\n\t     * Creates a `<filter>` element\n\t     **\n\t     - filstr (string) SVG fragment of filter provided as a string\n\t     = (object) @Element\n\t     * Note: It is recommended to use filters embedded into the page inside an empty SVG element.\n\t     > Usage\n\t     | var f = paper.filter('<feGaussianBlur stdDeviation=\"2\"/>'),\n\t     |     c = paper.circle(10, 10, 10).attr({\n\t     |         filter: f\n\t     |     });\n\t    \\*/\n\t    pproto.filter = function (filstr) {\n\t        var paper = this;\n\t        if (paper.type != \"svg\") {\n\t            paper = paper.paper;\n\t        }\n\t        var f = Snap.parse(Str(filstr)),\n\t            id = Snap._.id(),\n\t            width = paper.node.offsetWidth,\n\t            height = paper.node.offsetHeight,\n\t            filter = $(\"filter\");\n\t        $(filter, {\n\t            id: id,\n\t            filterUnits: \"userSpaceOnUse\"\n\t        });\n\t        filter.appendChild(f.node);\n\t        paper.defs.appendChild(filter);\n\t        return new Element(filter);\n\t    };\n\t\n\t    eve.on(\"snap.util.getattr.filter\", function () {\n\t        eve.stop();\n\t        var p = $(this.node, \"filter\");\n\t        if (p) {\n\t            var match = Str(p).match(rgurl);\n\t            return match && Snap.select(match[1]);\n\t        }\n\t    });\n\t    eve.on(\"snap.util.attr.filter\", function (value) {\n\t        if (value instanceof Element && value.type == \"filter\") {\n\t            eve.stop();\n\t            var id = value.node.id;\n\t            if (!id) {\n\t                $(value.node, {id: value.id});\n\t                id = value.id;\n\t            }\n\t            $(this.node, {\n\t                filter: Snap.url(id)\n\t            });\n\t        }\n\t        if (!value || value == \"none\") {\n\t            eve.stop();\n\t            this.node.removeAttribute(\"filter\");\n\t        }\n\t    });\n\t    /*\\\n\t     * Snap.filter.blur\n\t     [ method ]\n\t     **\n\t     * Returns an SVG markup string for the blur filter\n\t     **\n\t     - x (number) amount of horizontal blur, in pixels\n\t     - y (number) #optional amount of vertical blur, in pixels\n\t     = (string) filter representation\n\t     > Usage\n\t     | var f = paper.filter(Snap.filter.blur(5, 10)),\n\t     |     c = paper.circle(10, 10, 10).attr({\n\t     |         filter: f\n\t     |     });\n\t    \\*/\n\t    Snap.filter.blur = function (x, y) {\n\t        if (x == null) {\n\t            x = 2;\n\t        }\n\t        var def = y == null ? x : [x, y];\n\t        return Snap.format('\\<feGaussianBlur stdDeviation=\"{def}\"/>', {\n\t            def: def\n\t        });\n\t    };\n\t    Snap.filter.blur.toString = function () {\n\t        return this();\n\t    };\n\t    /*\\\n\t     * Snap.filter.shadow\n\t     [ method ]\n\t     **\n\t     * Returns an SVG markup string for the shadow filter\n\t     **\n\t     - dx (number) #optional horizontal shift of the shadow, in pixels\n\t     - dy (number) #optional vertical shift of the shadow, in pixels\n\t     - blur (number) #optional amount of blur\n\t     - color (string) #optional color of the shadow\n\t     - opacity (number) #optional `0..1` opacity of the shadow\n\t     * or\n\t     - dx (number) #optional horizontal shift of the shadow, in pixels\n\t     - dy (number) #optional vertical shift of the shadow, in pixels\n\t     - color (string) #optional color of the shadow\n\t     - opacity (number) #optional `0..1` opacity of the shadow\n\t     * which makes blur default to `4`. Or\n\t     - dx (number) #optional horizontal shift of the shadow, in pixels\n\t     - dy (number) #optional vertical shift of the shadow, in pixels\n\t     - opacity (number) #optional `0..1` opacity of the shadow\n\t     = (string) filter representation\n\t     > Usage\n\t     | var f = paper.filter(Snap.filter.shadow(0, 2, 3)),\n\t     |     c = paper.circle(10, 10, 10).attr({\n\t     |         filter: f\n\t     |     });\n\t    \\*/\n\t    Snap.filter.shadow = function (dx, dy, blur, color, opacity) {\n\t        if (typeof blur == \"string\") {\n\t            color = blur;\n\t            opacity = color;\n\t            blur = 4;\n\t        }\n\t        if (typeof color != \"string\") {\n\t            opacity = color;\n\t            color = \"#000\";\n\t        }\n\t        color = color || \"#000\";\n\t        if (blur == null) {\n\t            blur = 4;\n\t        }\n\t        if (opacity == null) {\n\t            opacity = 1;\n\t        }\n\t        if (dx == null) {\n\t            dx = 0;\n\t            dy = 2;\n\t        }\n\t        if (dy == null) {\n\t            dy = dx;\n\t        }\n\t        color = Snap.color(color);\n\t        return Snap.format('<feGaussianBlur in=\"SourceAlpha\" stdDeviation=\"{blur}\"/><feOffset dx=\"{dx}\" dy=\"{dy}\" result=\"offsetblur\"/><feFlood flood-color=\"{color}\"/><feComposite in2=\"offsetblur\" operator=\"in\"/><feComponentTransfer><feFuncA type=\"linear\" slope=\"{opacity}\"/></feComponentTransfer><feMerge><feMergeNode/><feMergeNode in=\"SourceGraphic\"/></feMerge>', {\n\t            color: color,\n\t            dx: dx,\n\t            dy: dy,\n\t            blur: blur,\n\t            opacity: opacity\n\t        });\n\t    };\n\t    Snap.filter.shadow.toString = function () {\n\t        return this();\n\t    };\n\t    /*\\\n\t     * Snap.filter.grayscale\n\t     [ method ]\n\t     **\n\t     * Returns an SVG markup string for the grayscale filter\n\t     **\n\t     - amount (number) amount of filter (`0..1`)\n\t     = (string) filter representation\n\t    \\*/\n\t    Snap.filter.grayscale = function (amount) {\n\t        if (amount == null) {\n\t            amount = 1;\n\t        }\n\t        return Snap.format('<feColorMatrix type=\"matrix\" values=\"{a} {b} {c} 0 0 {d} {e} {f} 0 0 {g} {b} {h} 0 0 0 0 0 1 0\"/>', {\n\t            a: 0.2126 + 0.7874 * (1 - amount),\n\t            b: 0.7152 - 0.7152 * (1 - amount),\n\t            c: 0.0722 - 0.0722 * (1 - amount),\n\t            d: 0.2126 - 0.2126 * (1 - amount),\n\t            e: 0.7152 + 0.2848 * (1 - amount),\n\t            f: 0.0722 - 0.0722 * (1 - amount),\n\t            g: 0.2126 - 0.2126 * (1 - amount),\n\t            h: 0.0722 + 0.9278 * (1 - amount)\n\t        });\n\t    };\n\t    Snap.filter.grayscale.toString = function () {\n\t        return this();\n\t    };\n\t    /*\\\n\t     * Snap.filter.sepia\n\t     [ method ]\n\t     **\n\t     * Returns an SVG markup string for the sepia filter\n\t     **\n\t     - amount (number) amount of filter (`0..1`)\n\t     = (string) filter representation\n\t    \\*/\n\t    Snap.filter.sepia = function (amount) {\n\t        if (amount == null) {\n\t            amount = 1;\n\t        }\n\t        return Snap.format('<feColorMatrix type=\"matrix\" values=\"{a} {b} {c} 0 0 {d} {e} {f} 0 0 {g} {h} {i} 0 0 0 0 0 1 0\"/>', {\n\t            a: 0.393 + 0.607 * (1 - amount),\n\t            b: 0.769 - 0.769 * (1 - amount),\n\t            c: 0.189 - 0.189 * (1 - amount),\n\t            d: 0.349 - 0.349 * (1 - amount),\n\t            e: 0.686 + 0.314 * (1 - amount),\n\t            f: 0.168 - 0.168 * (1 - amount),\n\t            g: 0.272 - 0.272 * (1 - amount),\n\t            h: 0.534 - 0.534 * (1 - amount),\n\t            i: 0.131 + 0.869 * (1 - amount)\n\t        });\n\t    };\n\t    Snap.filter.sepia.toString = function () {\n\t        return this();\n\t    };\n\t    /*\\\n\t     * Snap.filter.saturate\n\t     [ method ]\n\t     **\n\t     * Returns an SVG markup string for the saturate filter\n\t     **\n\t     - amount (number) amount of filter (`0..1`)\n\t     = (string) filter representation\n\t    \\*/\n\t    Snap.filter.saturate = function (amount) {\n\t        if (amount == null) {\n\t            amount = 1;\n\t        }\n\t        return Snap.format('<feColorMatrix type=\"saturate\" values=\"{amount}\"/>', {\n\t            amount: 1 - amount\n\t        });\n\t    };\n\t    Snap.filter.saturate.toString = function () {\n\t        return this();\n\t    };\n\t    /*\\\n\t     * Snap.filter.hueRotate\n\t     [ method ]\n\t     **\n\t     * Returns an SVG markup string for the hue-rotate filter\n\t     **\n\t     - angle (number) angle of rotation\n\t     = (string) filter representation\n\t    \\*/\n\t    Snap.filter.hueRotate = function (angle) {\n\t        angle = angle || 0;\n\t        return Snap.format('<feColorMatrix type=\"hueRotate\" values=\"{angle}\"/>', {\n\t            angle: angle\n\t        });\n\t    };\n\t    Snap.filter.hueRotate.toString = function () {\n\t        return this();\n\t    };\n\t    /*\\\n\t     * Snap.filter.invert\n\t     [ method ]\n\t     **\n\t     * Returns an SVG markup string for the invert filter\n\t     **\n\t     - amount (number) amount of filter (`0..1`)\n\t     = (string) filter representation\n\t    \\*/\n\t    Snap.filter.invert = function (amount) {\n\t        if (amount == null) {\n\t            amount = 1;\n\t        }\n\t//        <feColorMatrix type=\"matrix\" values=\"-1 0 0 0 1  0 -1 0 0 1  0 0 -1 0 1  0 0 0 1 0\" color-interpolation-filters=\"sRGB\"/>\n\t        return Snap.format('<feComponentTransfer><feFuncR type=\"table\" tableValues=\"{amount} {amount2}\"/><feFuncG type=\"table\" tableValues=\"{amount} {amount2}\"/><feFuncB type=\"table\" tableValues=\"{amount} {amount2}\"/></feComponentTransfer>', {\n\t            amount: amount,\n\t            amount2: 1 - amount\n\t        });\n\t    };\n\t    Snap.filter.invert.toString = function () {\n\t        return this();\n\t    };\n\t    /*\\\n\t     * Snap.filter.brightness\n\t     [ method ]\n\t     **\n\t     * Returns an SVG markup string for the brightness filter\n\t     **\n\t     - amount (number) amount of filter (`0..1`)\n\t     = (string) filter representation\n\t    \\*/\n\t    Snap.filter.brightness = function (amount) {\n\t        if (amount == null) {\n\t            amount = 1;\n\t        }\n\t        return Snap.format('<feComponentTransfer><feFuncR type=\"linear\" slope=\"{amount}\"/><feFuncG type=\"linear\" slope=\"{amount}\"/><feFuncB type=\"linear\" slope=\"{amount}\"/></feComponentTransfer>', {\n\t            amount: amount\n\t        });\n\t    };\n\t    Snap.filter.brightness.toString = function () {\n\t        return this();\n\t    };\n\t    /*\\\n\t     * Snap.filter.contrast\n\t     [ method ]\n\t     **\n\t     * Returns an SVG markup string for the contrast filter\n\t     **\n\t     - amount (number) amount of filter (`0..1`)\n\t     = (string) filter representation\n\t    \\*/\n\t    Snap.filter.contrast = function (amount) {\n\t        if (amount == null) {\n\t            amount = 1;\n\t        }\n\t        return Snap.format('<feComponentTransfer><feFuncR type=\"linear\" slope=\"{amount}\" intercept=\"{amount2}\"/><feFuncG type=\"linear\" slope=\"{amount}\" intercept=\"{amount2}\"/><feFuncB type=\"linear\" slope=\"{amount}\" intercept=\"{amount2}\"/></feComponentTransfer>', {\n\t            amount: amount,\n\t            amount2: .5 - amount / 2\n\t        });\n\t    };\n\t    Snap.filter.contrast.toString = function () {\n\t        return this();\n\t    };\n\t});\n\t\n\t// Copyright (c) 2014 Adobe Systems Incorporated. All rights reserved.\n\t//\n\t// Licensed under the Apache License, Version 2.0 (the \"License\");\n\t// you may not use this file except in compliance with the License.\n\t// You may obtain a copy of the License at\n\t//\n\t// http://www.apache.org/licenses/LICENSE-2.0\n\t//\n\t// Unless required by applicable law or agreed to in writing, software\n\t// distributed under the License is distributed on an \"AS IS\" BASIS,\n\t// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n\t// See the License for the specific language governing permissions and\n\t// limitations under the License.\n\tSnap.plugin(function (Snap, Element, Paper, glob, Fragment) {\n\t    var box = Snap._.box,\n\t        is = Snap.is,\n\t        firstLetter = /^[^a-z]*([tbmlrc])/i,\n\t        toString = function () {\n\t            return \"T\" + this.dx + \",\" + this.dy;\n\t        };\n\t    /*\\\n\t     * Element.getAlign\n\t     [ method ]\n\t     **\n\t     * Returns shift needed to align the element relatively to given element.\n\t     * If no elements specified, parent `<svg>` container will be used.\n\t     - el (object) @optional alignment element\n\t     - way (string) one of six values: `\"top\"`, `\"middle\"`, `\"bottom\"`, `\"left\"`, `\"center\"`, `\"right\"`\n\t     = (object|string) Object in format `{dx: , dy: }` also has a string representation as a transformation string\n\t     > Usage\n\t     | el.transform(el.getAlign(el2, \"top\"));\n\t     * or\n\t     | var dy = el.getAlign(el2, \"top\").dy;\n\t    \\*/\n\t    Element.prototype.getAlign = function (el, way) {\n\t        if (way == null && is(el, \"string\")) {\n\t            way = el;\n\t            el = null;\n\t        }\n\t        el = el || this.paper;\n\t        var bx = el.getBBox ? el.getBBox() : box(el),\n\t            bb = this.getBBox(),\n\t            out = {};\n\t        way = way && way.match(firstLetter);\n\t        way = way ? way[1].toLowerCase() : \"c\";\n\t        switch (way) {\n\t            case \"t\":\n\t                out.dx = 0;\n\t                out.dy = bx.y - bb.y;\n\t            break;\n\t            case \"b\":\n\t                out.dx = 0;\n\t                out.dy = bx.y2 - bb.y2;\n\t            break;\n\t            case \"m\":\n\t                out.dx = 0;\n\t                out.dy = bx.cy - bb.cy;\n\t            break;\n\t            case \"l\":\n\t                out.dx = bx.x - bb.x;\n\t                out.dy = 0;\n\t            break;\n\t            case \"r\":\n\t                out.dx = bx.x2 - bb.x2;\n\t                out.dy = 0;\n\t            break;\n\t            default:\n\t                out.dx = bx.cx - bb.cx;\n\t                out.dy = 0;\n\t            break;\n\t        }\n\t        out.toString = toString;\n\t        return out;\n\t    };\n\t    /*\\\n\t     * Element.align\n\t     [ method ]\n\t     **\n\t     * Aligns the element relatively to given one via transformation.\n\t     * If no elements specified, parent `<svg>` container will be used.\n\t     - el (object) @optional alignment element\n\t     - way (string) one of six values: `\"top\"`, `\"middle\"`, `\"bottom\"`, `\"left\"`, `\"center\"`, `\"right\"`\n\t     = (object) this element\n\t     > Usage\n\t     | el.align(el2, \"top\");\n\t     * or\n\t     | el.align(\"middle\");\n\t    \\*/\n\t    Element.prototype.align = function (el, way) {\n\t        return this.transform(\"...\" + this.getAlign(el, way));\n\t    };\n\t});\n\t\n\tmodule.exports = Snap\n\n\n/***/ }),\n\n/***/ \"./src/layouts/index.js\":\n/***/ (function(module, exports, __webpack_require__) {\n\n\t\"use strict\";\n\t\n\tObject.defineProperty(exports, \"__esModule\", {\n\t  value: true\n\t});\n\t\n\tvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\t\n\tvar _react = __webpack_require__(\"./node_modules/react/react.js\");\n\t\n\tvar _react2 = _interopRequireDefault(_react);\n\t\n\tvar _gatsbyLink = __webpack_require__(\"./node_modules/gatsby-link/index.js\");\n\t\n\tvar _gatsbyLink2 = _interopRequireDefault(_gatsbyLink);\n\t\n\tvar _reactResponsiveGrid = __webpack_require__(\"./node_modules/react-responsive-grid/dist/index.js\");\n\t\n\tvar _arrowLeft = __webpack_require__(\"./node_modules/react-icons/lib/fa/arrow-left.js\");\n\t\n\tvar _arrowLeft2 = _interopRequireDefault(_arrowLeft);\n\t\n\tvar _reactBurgerMenu = __webpack_require__(\"./node_modules/react-burger-menu/lib/BurgerMenu.js\");\n\t\n\tvar _typography = __webpack_require__(\"./src/utils/typography.js\");\n\t\n\tfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\t\n\tfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\t\n\tfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\t\n\tfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }\n\t\n\tvar Template = function (_React$Component) {\n\t  _inherits(Template, _React$Component);\n\t\n\t  function Template(props) {\n\t    _classCallCheck(this, Template);\n\t\n\t    var _this = _possibleConstructorReturn(this, (Template.__proto__ || Object.getPrototypeOf(Template)).call(this, props));\n\t\n\t    _this.state = {\n\t      mobile: false,\n\t      isOpen: false\n\t    };\n\t    return _this;\n\t  }\n\t\n\t  _createClass(Template, [{\n\t    key: \"componentDidMount\",\n\t    value: function componentDidMount() {\n\t      var check = false;\n\t      (function (a) {\n\t        if (/(android|bb\\d+|meego).+mobile|avantgo|bada\\/|blackberry|blazer|compal|elaine|fennec|hiptop|iemobile|ip(hone|od)|iris|kindle|lge |maemo|midp|mmp|mobile.+firefox|netfront|opera m(ob|in)i|palm( os)?|phone|p(ixi|re)\\/|plucker|pocket|psp|series(4|6)0|symbian|treo|up\\.(browser|link)|vodafone|wap|windows ce|xda|xiino/i.test(a) || /1207|6310|6590|3gso|4thp|50[1-6]i|770s|802s|a wa|abac|ac(er|oo|s\\-)|ai(ko|rn)|al(av|ca|co)|amoi|an(ex|ny|yw)|aptu|ar(ch|go)|as(te|us)|attw|au(di|\\-m|r |s )|avan|be(ck|ll|nq)|bi(lb|rd)|bl(ac|az)|br(e|v)w|bumb|bw\\-(n|u)|c55\\/|capi|ccwa|cdm\\-|cell|chtm|cldc|cmd\\-|co(mp|nd)|craw|da(it|ll|ng)|dbte|dc\\-s|devi|dica|dmob|do(c|p)o|ds(12|\\-d)|el(49|ai)|em(l2|ul)|er(ic|k0)|esl8|ez([4-7]0|os|wa|ze)|fetc|fly(\\-|_)|g1 u|g560|gene|gf\\-5|g\\-mo|go(\\.w|od)|gr(ad|un)|haie|hcit|hd\\-(m|p|t)|hei\\-|hi(pt|ta)|hp( i|ip)|hs\\-c|ht(c(\\-| |_|a|g|p|s|t)|tp)|hu(aw|tc)|i\\-(20|go|ma)|i230|iac( |\\-|\\/)|ibro|idea|ig01|ikom|im1k|inno|ipaq|iris|ja(t|v)a|jbro|jemu|jigs|kddi|keji|kgt( |\\/)|klon|kpt |kwc\\-|kyo(c|k)|le(no|xi)|lg( g|\\/(k|l|u)|50|54|\\-[a-w])|libw|lynx|m1\\-w|m3ga|m50\\/|ma(te|ui|xo)|mc(01|21|ca)|m\\-cr|me(rc|ri)|mi(o8|oa|ts)|mmef|mo(01|02|bi|de|do|t(\\-| |o|v)|zz)|mt(50|p1|v )|mwbp|mywa|n10[0-2]|n20[2-3]|n30(0|2)|n50(0|2|5)|n7(0(0|1)|10)|ne((c|m)\\-|on|tf|wf|wg|wt)|nok(6|i)|nzph|o2im|op(ti|wv)|oran|owg1|p800|pan(a|d|t)|pdxg|pg(13|\\-([1-8]|c))|phil|pire|pl(ay|uc)|pn\\-2|po(ck|rt|se)|prox|psio|pt\\-g|qa\\-a|qc(07|12|21|32|60|\\-[2-7]|i\\-)|qtek|r380|r600|raks|rim9|ro(ve|zo)|s55\\/|sa(ge|ma|mm|ms|ny|va)|sc(01|h\\-|oo|p\\-)|sdk\\/|se(c(\\-|0|1)|47|mc|nd|ri)|sgh\\-|shar|sie(\\-|m)|sk\\-0|sl(45|id)|sm(al|ar|b3|it|t5)|so(ft|ny)|sp(01|h\\-|v\\-|v )|sy(01|mb)|t2(18|50)|t6(00|10|18)|ta(gt|lk)|tcl\\-|tdg\\-|tel(i|m)|tim\\-|t\\-mo|to(pl|sh)|ts(70|m\\-|m3|m5)|tx\\-9|up(\\.b|g1|si)|utst|v400|v750|veri|vi(rg|te)|vk(40|5[0-3]|\\-v)|vm40|voda|vulc|vx(52|53|60|61|70|80|81|83|85|98)|w3c(\\-| )|webc|whit|wi(g |nc|nw)|wmlb|wonu|x700|yas\\-|your|zeto|zte\\-/i.test(a.substr(0, 4))) check = true;\n\t      })(navigator.userAgent || navigator.vendor || window.opera);\n\t      this.setState({ mobile: check });\n\t    }\n\t  }, {\n\t    key: \"showSettings\",\n\t    value: function showSettings(event) {\n\t      event.preventDefault();\n\t    }\n\t  }, {\n\t    key: \"handleSideNavigation\",\n\t    value: function handleSideNavigation() {\n\t      this.setState({ isOpen: false });\n\t    }\n\t  }, {\n\t    key: \"render\",\n\t    value: function render() {\n\t      var _this2 = this;\n\t\n\t      var _props = this.props,\n\t          location = _props.location,\n\t          children = _props.children;\n\t\n\t      var height = this.state.mobile ? 56 : 64;\n\t      styles.bmBurgerButton.left = this.state.mobile ? 16 : 24;\n\t      styles.bmBurgerButton.top = this.state.mobile ? 16 : 20;\n\t      var header = void 0,\n\t          title = void 0;\n\t      if (location.pathname === \"/\" || location.pathname === '/about') {\n\t        title = 'Fog Up Some Comics';\n\t        header = _react2.default.createElement(\n\t          _reactBurgerMenu.slide,\n\t          {\n\t            styles: styles,\n\t            onStateChange: function onStateChange(_ref) {\n\t              var isOpen = _ref.isOpen;\n\t              return _this2.setState({ isOpen: isOpen });\n\t            },\n\t            isOpen: this.state.isOpen\n\t          },\n\t          _react2.default.createElement(\n\t            _gatsbyLink2.default,\n\t            { onClick: this.handleSideNavigation.bind(this), id: \"home\", className: \"menu-item\", to: \"/\" },\n\t            \"Home\"\n\t          ),\n\t          _react2.default.createElement(\n\t            _gatsbyLink2.default,\n\t            { onClick: this.handleSideNavigation.bind(this), id: \"about\", className: \"menu-item\", to: \"/about\" },\n\t            \"About\"\n\t          )\n\t        )\n\t        // <a onClick={ this.showSettings } className=\"menu-item--small\" href=\"\">Settings</a>\n\t        ;\n\t      } else {\n\t        title = 'Comics';\n\t        header = _react2.default.createElement(\n\t          _gatsbyLink2.default,\n\t          {\n\t            style: {\n\t              boxShadow: \"none\",\n\t              textDecoration: \"none\",\n\t              color: \"inherit\"\n\t            },\n\t            to: \"/\"\n\t          },\n\t          _react2.default.createElement(_arrowLeft2.default, { size: 24, color: 'white', style: styles.bmBurgerButton })\n\t        );\n\t      }\n\t      return _react2.default.createElement(\n\t        \"div\",\n\t        { style: { paddingBottom: 60, minHeight: '100vh', position: 'relative' } },\n\t        _react2.default.createElement(\n\t          \"nav\",\n\t          { style: {\n\t              height: height,\n\t              backgroundColor: '#63ccff',\n\t              position: 'fixed',\n\t              width: '100%',\n\t              boxShadow: '0 4px 5px 0 rgba(0, 0, 0, 0.14), 0 1px 10px 0 rgba(0, 0, 0, 0.12), 0 2px 4px -1px rgba(0, 0, 0, 0.3)'\n\t            } },\n\t          _react2.default.createElement(\n\t            \"div\",\n\t            { style: { position: 'absolute', left: 72, top: 16 } },\n\t            _react2.default.createElement(\n\t              \"p\",\n\t              { style: {\n\t                  color: 'white',\n\t                  fontSize: 20,\n\t                  fontFamily: 'Merriweather Sans,Helvetica,Arial,sans-serif'\n\t                } },\n\t              title\n\t            )\n\t          )\n\t        ),\n\t        header,\n\t        _react2.default.createElement(\n\t          _reactResponsiveGrid.Container,\n\t          {\n\t            style: {\n\t              maxWidth: (0, _typography.rhythm)(24),\n\t              padding: (0, _typography.rhythm)(1.5) + \" \" + (0, _typography.rhythm)(3 / 4),\n\t              paddingTop: height + 16\n\t            }\n\t          },\n\t          children()\n\t        ),\n\t        _react2.default.createElement(\n\t          \"footer\",\n\t          {\n\t            style: {\n\t              minHeight: 50,\n\t              position: 'absolute',\n\t              bottom: 0,\n\t              width: '100%',\n\t              backgroundColor: '#039be5'\n\t            }\n\t          },\n\t          _react2.default.createElement(\n\t            \"div\",\n\t            { style: { width: '90%', padding: 10, height: 50, lineHeight: 1.5, color: 'white', margin: 'auto' } },\n\t            _react2.default.createElement(\n\t              \"span\",\n\t              { style: { marginTop: 20 } },\n\t              \"\\xA9\"\n\t            ),\n\t            \" 2017 Austin Lanari\"\n\t          )\n\t        )\n\t      );\n\t    }\n\t  }]);\n\t\n\t  return Template;\n\t}(_react2.default.Component);\n\t\n\tTemplate.propTypes = {\n\t  children: _react2.default.PropTypes.function,\n\t  location: _react2.default.PropTypes.object,\n\t  route: _react2.default.PropTypes.object\n\t};\n\t\n\tvar styles = {\n\t  bmBurgerButton: {\n\t    position: 'fixed',\n\t    width: '24px',\n\t    color: 'white',\n\t    height: '24px',\n\t    left: 16,\n\t    top: 16\n\t  },\n\t  bmBurgerBars: {\n\t    background: 'white'\n\t  },\n\t  bmCrossButton: {\n\t    height: '24px',\n\t    width: '24px'\n\t  },\n\t  bmCross: {\n\t    background: '#bdc3c7'\n\t  },\n\t  bmMenu: {\n\t    background: 'white',\n\t    padding: '2.5em 1.5em 0',\n\t    fontSize: '1.15em'\n\t  },\n\t  bmMorphShape: {\n\t    fill: '#373a47'\n\t  },\n\t  bmItemList: {\n\t    color: '#b8b7ad'\n\t  },\n\t  bmItem: {\n\t    paddingTop: 16,\n\t    textDecoration: 'none'\n\t  },\n\t  bmOverlay: {\n\t    background: 'rgba(0, 0, 0, 0.3)',\n\t    height: '100%'\n\t  }\n\t};\n\t\n\texports.default = Template;\n\tmodule.exports = exports[\"default\"];\n\n/***/ })\n\n});\n\n\n// WEBPACK FOOTER //\n// component---src-layouts-index-js-9d93516b8231fdafe343.js","module.exports = {\"layoutContext\":{}}\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/json-loader!./.cache/json/layout-index.json\n// module id = ./node_modules/json-loader/index.js!./.cache/json/layout-index.json\n// module chunks = 3954140758598355500 7489246917808536000","\n  import React from \"react\"\n  import Component from \"/home/austin/newFusc/FuSC/src/layouts/index.js\"\n  import data from \"/home/austin/newFusc/FuSC/.cache/json/layout-index.json\"\n\n  export default (props) => <Component {...props} {...data} />\n  \n\n\n// WEBPACK FOOTER //\n// ./.cache/layouts/index.js","var requestFrame = (function () {\n  var window = this\n  var raf = window.requestAnimationFrame ||\n    window.mozRequestAnimationFrame ||\n    window.webkitRequestAnimationFrame ||\n    function fallbackRAF(func) {\n      return window.setTimeout(func, 20)\n    }\n  return function requestFrameFunction(func) {\n    return raf(func)\n  }\n})()\n\nvar cancelFrame = (function () {\n  var window = this\n  var cancel = window.cancelAnimationFrame ||\n    window.mozCancelAnimationFrame ||\n    window.webkitCancelAnimationFrame ||\n    window.clearTimeout\n  return function cancelFrameFunction(id) {\n    return cancel(id)\n  }\n})()\n\nfunction resizeListener(e) {\n  var win = e.target || e.srcElement\n  if (win.__resizeRAF__) {\n    cancelFrame(win.__resizeRAF__)\n  }\n  win.__resizeRAF__ = requestFrame(function () {\n    var trigger = win.__resizeTrigger__\n    trigger.__resizeListeners__.forEach(function (fn) {\n      fn.call(trigger, e)\n    })\n  })\n}\n\nvar exports = function exports(element, fn) {\n  var window = this\n  var document = window.document\n  var isIE\n\n  var attachEvent = document.attachEvent\n  if (typeof navigator !== 'undefined') {\n    isIE = navigator.userAgent.match(/Trident/) ||\n      navigator.userAgent.match(/Edge/)\n  }\n\n  function objectLoad() {\n    this.contentDocument.defaultView.__resizeTrigger__ = this.__resizeElement__\n    this.contentDocument.defaultView.addEventListener('resize', resizeListener)\n  }\n\n  if (!element.__resizeListeners__) {\n    element.__resizeListeners__ = []\n    if (attachEvent) {\n      element.__resizeTrigger__ = element\n      element.attachEvent('onresize', resizeListener)\n    } else {\n      if (getComputedStyle(element).position === 'static') {\n        element.style.position = 'relative'\n      }\n      var obj = (element.__resizeTrigger__ = document.createElement('object'))\n      obj.setAttribute(\n        'style',\n        'display: block; position: absolute; top: 0; left: 0; height: 100%; width: 100%; overflow: hidden; pointer-events: none; z-index: -1; opacity: 0;'\n      )\n      obj.setAttribute('class', 'resize-sensor')\n      obj.__resizeElement__ = element\n      obj.onload = objectLoad\n      obj.type = 'text/html'\n      if (isIE) {\n        element.appendChild(obj)\n      }\n      obj.data = 'about:blank'\n      if (!isIE) {\n        element.appendChild(obj)\n      }\n    }\n  }\n  element.__resizeListeners__.push(fn)\n}\n\nmodule.exports = typeof window === 'undefined' ? exports : exports.bind(window)\n\nmodule.exports.unbind = function (element, fn) {\n  var attachEvent = document.attachEvent\n  if (fn) {\n    element.__resizeListeners__.splice(\n      element.__resizeListeners__.indexOf(fn),\n      1\n    )\n  } else {\n    element.__resizeListeners__ = []\n  }\n  if (!element.__resizeListeners__.length) {\n    if (attachEvent) {\n      element.detachEvent('onresize', resizeListener)\n    } else {\n      element.__resizeTrigger__.contentDocument.defaultView.removeEventListener(\n        'resize',\n        resizeListener\n      )\n      delete element.__resizeTrigger__.contentDocument.defaultView.__resizeTrigger__\n      element.__resizeTrigger__ = !element.removeChild(\n        element.__resizeTrigger__\n      )\n    }\n    delete element.__resizeListeners__\n  }\n}\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/element-resize-event/index.js\n// module id = ./node_modules/element-resize-event/index.js\n// module chunks = 7489246917808536000","// Copyright (c) 2013 Adobe Systems Incorporated. All rights reserved.\n// \n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n// \n// http://www.apache.org/licenses/LICENSE-2.0\n// \n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n// ┌────────────────────────────────────────────────────────────┐ \\\\\n// │ Eve 0.4.2 - JavaScript Events Library                      │ \\\\\n// ├────────────────────────────────────────────────────────────┤ \\\\\n// │ Author Dmitry Baranovskiy (http://dmitry.baranovskiy.com/) │ \\\\\n// └────────────────────────────────────────────────────────────┘ \\\\\n\n(function (glob) {\n    var version = \"0.4.2\",\n        has = \"hasOwnProperty\",\n        separator = /[\\.\\/]/,\n        comaseparator = /\\s*,\\s*/,\n        wildcard = \"*\",\n        fun = function () {},\n        numsort = function (a, b) {\n            return a - b;\n        },\n        current_event,\n        stop,\n        events = {n: {}},\n        firstDefined = function () {\n            for (var i = 0, ii = this.length; i < ii; i++) {\n                if (typeof this[i] != \"undefined\") {\n                    return this[i];\n                }\n            }\n        },\n        lastDefined = function () {\n            var i = this.length;\n            while (--i) {\n                if (typeof this[i] != \"undefined\") {\n                    return this[i];\n                }\n            }\n        },\n    /*\\\n     * eve\n     [ method ]\n\n     * Fires event with given `name`, given scope and other parameters.\n\n     > Arguments\n\n     - name (string) name of the *event*, dot (`.`) or slash (`/`) separated\n     - scope (object) context for the event handlers\n     - varargs (...) the rest of arguments will be sent to event handlers\n\n     = (object) array of returned values from the listeners. Array has two methods `.firstDefined()` and `.lastDefined()` to get first or last not `undefined` value.\n    \\*/\n        eve = function (name, scope) {\n            name = String(name);\n            var e = events,\n                oldstop = stop,\n                args = Array.prototype.slice.call(arguments, 2),\n                listeners = eve.listeners(name),\n                z = 0,\n                f = false,\n                l,\n                indexed = [],\n                queue = {},\n                out = [],\n                ce = current_event,\n                errors = [];\n            out.firstDefined = firstDefined;\n            out.lastDefined = lastDefined;\n            current_event = name;\n            stop = 0;\n            for (var i = 0, ii = listeners.length; i < ii; i++) if (\"zIndex\" in listeners[i]) {\n                indexed.push(listeners[i].zIndex);\n                if (listeners[i].zIndex < 0) {\n                    queue[listeners[i].zIndex] = listeners[i];\n                }\n            }\n            indexed.sort(numsort);\n            while (indexed[z] < 0) {\n                l = queue[indexed[z++]];\n                out.push(l.apply(scope, args));\n                if (stop) {\n                    stop = oldstop;\n                    return out;\n                }\n            }\n            for (i = 0; i < ii; i++) {\n                l = listeners[i];\n                if (\"zIndex\" in l) {\n                    if (l.zIndex == indexed[z]) {\n                        out.push(l.apply(scope, args));\n                        if (stop) {\n                            break;\n                        }\n                        do {\n                            z++;\n                            l = queue[indexed[z]];\n                            l && out.push(l.apply(scope, args));\n                            if (stop) {\n                                break;\n                            }\n                        } while (l)\n                    } else {\n                        queue[l.zIndex] = l;\n                    }\n                } else {\n                    out.push(l.apply(scope, args));\n                    if (stop) {\n                        break;\n                    }\n                }\n            }\n            stop = oldstop;\n            current_event = ce;\n            return out;\n        };\n        // Undocumented. Debug only.\n        eve._events = events;\n    /*\\\n     * eve.listeners\n     [ method ]\n\n     * Internal method which gives you array of all event handlers that will be triggered by the given `name`.\n\n     > Arguments\n\n     - name (string) name of the event, dot (`.`) or slash (`/`) separated\n\n     = (array) array of event handlers\n    \\*/\n    eve.listeners = function (name) {\n        var names = name.split(separator),\n            e = events,\n            item,\n            items,\n            k,\n            i,\n            ii,\n            j,\n            jj,\n            nes,\n            es = [e],\n            out = [];\n        for (i = 0, ii = names.length; i < ii; i++) {\n            nes = [];\n            for (j = 0, jj = es.length; j < jj; j++) {\n                e = es[j].n;\n                items = [e[names[i]], e[wildcard]];\n                k = 2;\n                while (k--) {\n                    item = items[k];\n                    if (item) {\n                        nes.push(item);\n                        out = out.concat(item.f || []);\n                    }\n                }\n            }\n            es = nes;\n        }\n        return out;\n    };\n    \n    /*\\\n     * eve.on\n     [ method ]\n     **\n     * Binds given event handler with a given name. You can use wildcards “`*`” for the names:\n     | eve.on(\"*.under.*\", f);\n     | eve(\"mouse.under.floor\"); // triggers f\n     * Use @eve to trigger the listener.\n     **\n     > Arguments\n     **\n     - name (string) name of the event, dot (`.`) or slash (`/`) separated, with optional wildcards\n     - f (function) event handler function\n     **\n     = (function) returned function accepts a single numeric parameter that represents z-index of the handler. It is an optional feature and only used when you need to ensure that some subset of handlers will be invoked in a given order, despite of the order of assignment. \n     > Example:\n     | eve.on(\"mouse\", eatIt)(2);\n     | eve.on(\"mouse\", scream);\n     | eve.on(\"mouse\", catchIt)(1);\n     * This will ensure that `catchIt` function will be called before `eatIt`.\n     *\n     * If you want to put your handler before non-indexed handlers, specify a negative value.\n     * Note: I assume most of the time you don’t need to worry about z-index, but it’s nice to have this feature “just in case”.\n    \\*/\n    eve.on = function (name, f) {\n        name = String(name);\n        if (typeof f != \"function\") {\n            return function () {};\n        }\n        var names = name.split(comaseparator);\n        for (var i = 0, ii = names.length; i < ii; i++) {\n            (function (name) {\n                var names = name.split(separator),\n                    e = events,\n                    exist;\n                for (var i = 0, ii = names.length; i < ii; i++) {\n                    e = e.n;\n                    e = e.hasOwnProperty(names[i]) && e[names[i]] || (e[names[i]] = {n: {}});\n                }\n                e.f = e.f || [];\n                for (i = 0, ii = e.f.length; i < ii; i++) if (e.f[i] == f) {\n                    exist = true;\n                    break;\n                }\n                !exist && e.f.push(f);\n            }(names[i]));\n        }\n        return function (zIndex) {\n            if (+zIndex == +zIndex) {\n                f.zIndex = +zIndex;\n            }\n        };\n    };\n    /*\\\n     * eve.f\n     [ method ]\n     **\n     * Returns function that will fire given event with optional arguments.\n     * Arguments that will be passed to the result function will be also\n     * concated to the list of final arguments.\n     | el.onclick = eve.f(\"click\", 1, 2);\n     | eve.on(\"click\", function (a, b, c) {\n     |     console.log(a, b, c); // 1, 2, [event object]\n     | });\n     > Arguments\n     - event (string) event name\n     - varargs (…) and any other arguments\n     = (function) possible event handler function\n    \\*/\n    eve.f = function (event) {\n        var attrs = [].slice.call(arguments, 1);\n        return function () {\n            eve.apply(null, [event, null].concat(attrs).concat([].slice.call(arguments, 0)));\n        };\n    };\n    /*\\\n     * eve.stop\n     [ method ]\n     **\n     * Is used inside an event handler to stop the event, preventing any subsequent listeners from firing.\n    \\*/\n    eve.stop = function () {\n        stop = 1;\n    };\n    /*\\\n     * eve.nt\n     [ method ]\n     **\n     * Could be used inside event handler to figure out actual name of the event.\n     **\n     > Arguments\n     **\n     - subname (string) #optional subname of the event\n     **\n     = (string) name of the event, if `subname` is not specified\n     * or\n     = (boolean) `true`, if current event’s name contains `subname`\n    \\*/\n    eve.nt = function (subname) {\n        if (subname) {\n            return new RegExp(\"(?:\\\\.|\\\\/|^)\" + subname + \"(?:\\\\.|\\\\/|$)\").test(current_event);\n        }\n        return current_event;\n    };\n    /*\\\n     * eve.nts\n     [ method ]\n     **\n     * Could be used inside event handler to figure out actual name of the event.\n     **\n     **\n     = (array) names of the event\n    \\*/\n    eve.nts = function () {\n        return current_event.split(separator);\n    };\n    /*\\\n     * eve.off\n     [ method ]\n     **\n     * Removes given function from the list of event listeners assigned to given name.\n     * If no arguments specified all the events will be cleared.\n     **\n     > Arguments\n     **\n     - name (string) name of the event, dot (`.`) or slash (`/`) separated, with optional wildcards\n     - f (function) event handler function\n    \\*/\n    /*\\\n     * eve.unbind\n     [ method ]\n     **\n     * See @eve.off\n    \\*/\n    eve.off = eve.unbind = function (name, f) {\n        if (!name) {\n            eve._events = events = {n: {}};\n            return;\n        }\n        var names = name.split(comaseparator);\n        if (names.length > 1) {\n            for (var i = 0, ii = names.length; i < ii; i++) {\n                eve.off(names[i], f);\n            }\n            return;\n        }\n        names = name.split(separator);\n        var e,\n            key,\n            splice,\n            i, ii, j, jj,\n            cur = [events];\n        for (i = 0, ii = names.length; i < ii; i++) {\n            for (j = 0; j < cur.length; j += splice.length - 2) {\n                splice = [j, 1];\n                e = cur[j].n;\n                if (names[i] != wildcard) {\n                    if (e[names[i]]) {\n                        splice.push(e[names[i]]);\n                    }\n                } else {\n                    for (key in e) if (e[has](key)) {\n                        splice.push(e[key]);\n                    }\n                }\n                cur.splice.apply(cur, splice);\n            }\n        }\n        for (i = 0, ii = cur.length; i < ii; i++) {\n            e = cur[i];\n            while (e.n) {\n                if (f) {\n                    if (e.f) {\n                        for (j = 0, jj = e.f.length; j < jj; j++) if (e.f[j] == f) {\n                            e.f.splice(j, 1);\n                            break;\n                        }\n                        !e.f.length && delete e.f;\n                    }\n                    for (key in e.n) if (e.n[has](key) && e.n[key].f) {\n                        var funcs = e.n[key].f;\n                        for (j = 0, jj = funcs.length; j < jj; j++) if (funcs[j] == f) {\n                            funcs.splice(j, 1);\n                            break;\n                        }\n                        !funcs.length && delete e.n[key].f;\n                    }\n                } else {\n                    delete e.f;\n                    for (key in e.n) if (e.n[has](key) && e.n[key].f) {\n                        delete e.n[key].f;\n                    }\n                }\n                e = e.n;\n            }\n        }\n    };\n    /*\\\n     * eve.once\n     [ method ]\n     **\n     * Binds given event handler with a given name to only run once then unbind itself.\n     | eve.once(\"login\", f);\n     | eve(\"login\"); // triggers f\n     | eve(\"login\"); // no listeners\n     * Use @eve to trigger the listener.\n     **\n     > Arguments\n     **\n     - name (string) name of the event, dot (`.`) or slash (`/`) separated, with optional wildcards\n     - f (function) event handler function\n     **\n     = (function) same return function as @eve.on\n    \\*/\n    eve.once = function (name, f) {\n        var f2 = function () {\n            eve.unbind(name, f2);\n            return f.apply(this, arguments);\n        };\n        return eve.on(name, f2);\n    };\n    /*\\\n     * eve.version\n     [ property (string) ]\n     **\n     * Current version of the library.\n    \\*/\n    eve.version = version;\n    eve.toString = function () {\n        return \"You are running Eve \" + version;\n    };\n    (typeof module != \"undefined\" && module.exports) ? (module.exports = eve) : (typeof define === \"function\" && define.amd ? (define(\"eve\", [], function() { return eve; })) : (glob.eve = eve));\n})(this);\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/eve/eve.js\n// module id = ./node_modules/eve/eve.js\n// module chunks = 7489246917808536000","// Generated by CoffeeScript 1.6.3\n(function() {\n  var getNanoSeconds, hrtime, loadTime;\n\n  if ((typeof performance !== \"undefined\" && performance !== null) && performance.now) {\n    module.exports = function() {\n      return performance.now();\n    };\n  } else if ((typeof process !== \"undefined\" && process !== null) && process.hrtime) {\n    module.exports = function() {\n      return (getNanoSeconds() - loadTime) / 1e6;\n    };\n    hrtime = process.hrtime;\n    getNanoSeconds = function() {\n      var hr;\n      hr = hrtime();\n      return hr[0] * 1e9 + hr[1];\n    };\n    loadTime = getNanoSeconds();\n  } else if (Date.now) {\n    module.exports = function() {\n      return Date.now() - loadTime;\n    };\n    loadTime = Date.now();\n  } else {\n    module.exports = function() {\n      return new Date().getTime() - loadTime;\n    };\n    loadTime = new Date().getTime();\n  }\n\n}).call(this);\n\n/*\n//@ sourceMappingURL=performance-now.map\n*/\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/performance-now/lib/performance-now.js\n// module id = ./node_modules/performance-now/lib/performance-now.js\n// module chunks = 7489246917808536000","var now = require('performance-now')\n  , global = typeof window === 'undefined' ? {} : window\n  , vendors = ['moz', 'webkit']\n  , suffix = 'AnimationFrame'\n  , raf = global['request' + suffix]\n  , caf = global['cancel' + suffix] || global['cancelRequest' + suffix]\n  , isNative = true\n\nfor(var i = 0; i < vendors.length && !raf; i++) {\n  raf = global[vendors[i] + 'Request' + suffix]\n  caf = global[vendors[i] + 'Cancel' + suffix]\n      || global[vendors[i] + 'CancelRequest' + suffix]\n}\n\n// Some versions of FF have rAF but not cAF\nif(!raf || !caf) {\n  isNative = false\n\n  var last = 0\n    , id = 0\n    , queue = []\n    , frameDuration = 1000 / 60\n\n  raf = function(callback) {\n    if(queue.length === 0) {\n      var _now = now()\n        , next = Math.max(0, frameDuration - (_now - last))\n      last = next + _now\n      setTimeout(function() {\n        var cp = queue.slice(0)\n        // Clear queue here to prevent\n        // callbacks from appending listeners\n        // to the current frame's queue\n        queue.length = 0\n        for(var i = 0; i < cp.length; i++) {\n          if(!cp[i].cancelled) {\n            try{\n              cp[i].callback(last)\n            } catch(e) {\n              setTimeout(function() { throw e }, 0)\n            }\n          }\n        }\n      }, Math.round(next))\n    }\n    queue.push({\n      handle: ++id,\n      callback: callback,\n      cancelled: false\n    })\n    return id\n  }\n\n  caf = function(handle) {\n    for(var i = 0; i < queue.length; i++) {\n      if(queue[i].handle === handle) {\n        queue[i].cancelled = true\n      }\n    }\n  }\n}\n\nmodule.exports = function(fn) {\n  // Wrap in a new function to prevent\n  // `cancel` potentially being assigned\n  // to the native rAF function\n  if(!isNative) {\n    return raf.call(global, fn)\n  }\n  return raf.call(global, function() {\n    try{\n      fn.apply(this, arguments)\n    } catch(e) {\n      setTimeout(function() { throw e }, 0)\n    }\n  })\n}\nmodule.exports.cancel = function() {\n  caf.apply(global, arguments)\n}\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/raf/index.js\n// module id = ./node_modules/raf/index.js\n// module chunks = 7489246917808536000","'use strict';\n\nObject.defineProperty(exports, '__esModule', {\n  value: true\n});\n\nvar _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };\n\nvar _createClass = (function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ('value' in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; })();\n\nvar _get = function get(_x, _x2, _x3) { var _again = true; _function: while (_again) { var object = _x, property = _x2, receiver = _x3; _again = false; if (object === null) object = Function.prototype; var desc = Object.getOwnPropertyDescriptor(object, property); if (desc === undefined) { var parent = Object.getPrototypeOf(object); if (parent === null) { return undefined; } else { _x = parent; _x2 = property; _x3 = receiver; _again = true; desc = parent = undefined; continue _function; } } else if ('value' in desc) { return desc.value; } else { var getter = desc.get; if (getter === undefined) { return undefined; } return getter.call(receiver); } } };\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { 'default': obj }; }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError('Cannot call a class as a function'); } }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== 'function' && superClass !== null) { throw new TypeError('Super expression must either be null or a function, not ' + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }\n\nvar _react = require('react');\n\nvar _react2 = _interopRequireDefault(_react);\n\nvar _propTypes = require('prop-types');\n\nvar _propTypes2 = _interopRequireDefault(_propTypes);\n\nvar BurgerIcon = (function (_Component) {\n  _inherits(BurgerIcon, _Component);\n\n  function BurgerIcon(props) {\n    _classCallCheck(this, BurgerIcon);\n\n    _get(Object.getPrototypeOf(BurgerIcon.prototype), 'constructor', this).call(this, props);\n    this.state = {\n      hover: false\n    };\n  }\n\n  _createClass(BurgerIcon, [{\n    key: 'getLineStyle',\n    value: function getLineStyle(index) {\n      return {\n        position: 'absolute',\n        height: '20%',\n        left: 0,\n        right: 0,\n        top: 20 * (index * 2) + '%',\n        opacity: this.state.hover ? 0.6 : 1\n      };\n    }\n  }, {\n    key: 'render',\n    value: function render() {\n      var _this = this;\n\n      var icon = undefined;\n      var buttonStyle = {\n        position: 'absolute',\n        left: 0,\n        top: 0,\n        width: '100%',\n        height: '100%',\n        margin: 0,\n        padding: 0,\n        border: 'none',\n        opacity: 0,\n        fontSize: 8\n      };\n\n      if (this.props.customIcon) {\n        var extraProps = {\n          className: 'bm-icon',\n          style: _extends({ width: '100%', height: '100%' }, this.props.styles.bmIcon)\n        };\n        icon = _react2['default'].cloneElement(this.props.customIcon, extraProps);\n      } else {\n        icon = _react2['default'].createElement(\n          'span',\n          null,\n          [0, 1, 2].map(function (bar) {\n            return _react2['default'].createElement('span', {\n              key: bar,\n              className: 'bm-burger-bars ' + _this.props.barClassName,\n              style: _extends({}, _this.getLineStyle(bar), _this.props.styles.bmBurgerBars)\n            });\n          })\n        );\n      }\n\n      return _react2['default'].createElement(\n        'div',\n        {\n          className: 'bm-burger-button ' + this.props.className,\n          style: _extends({ zIndex: 1 }, this.props.styles.bmBurgerButton)\n        },\n        icon,\n        _react2['default'].createElement(\n          'button',\n          {\n            onClick: this.props.onClick,\n            onMouseOver: function () {\n              return _this.setState({ hover: true });\n            },\n            onMouseOut: function () {\n              return _this.setState({ hover: false });\n            },\n            style: buttonStyle\n          },\n          'Open Menu'\n        )\n      );\n    }\n  }]);\n\n  return BurgerIcon;\n})(_react.Component);\n\nexports['default'] = BurgerIcon;\n\nBurgerIcon.propTypes = {\n  barClassName: _propTypes2['default'].string,\n  customIcon: _propTypes2['default'].element,\n  styles: _propTypes2['default'].object\n};\n\nBurgerIcon.defaultProps = {\n  barClassName: '',\n  className: '',\n  styles: {}\n};\nmodule.exports = exports['default'];\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/react-burger-menu/lib/BurgerIcon.js\n// module id = ./node_modules/react-burger-menu/lib/BurgerIcon.js\n// module chunks = 7489246917808536000","'use strict';\n\nObject.defineProperty(exports, '__esModule', {\n  value: true\n});\nexports['default'] = {\n  slide: require('./menus/slide'),\n  stack: require('./menus/stack'),\n  elastic: require('./menus/elastic'),\n  bubble: require('./menus/bubble'),\n  push: require('./menus/push'),\n  pushRotate: require('./menus/pushRotate'),\n  scaleDown: require('./menus/scaleDown'),\n  scaleRotate: require('./menus/scaleRotate'),\n  fallDown: require('./menus/fallDown')\n};\nmodule.exports = exports['default'];\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/react-burger-menu/lib/BurgerMenu.js\n// module id = ./node_modules/react-burger-menu/lib/BurgerMenu.js\n// module chunks = 7489246917808536000","'use strict';\n\nObject.defineProperty(exports, '__esModule', {\n  value: true\n});\n\nvar _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };\n\nvar _createClass = (function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ('value' in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; })();\n\nvar _get = function get(_x, _x2, _x3) { var _again = true; _function: while (_again) { var object = _x, property = _x2, receiver = _x3; _again = false; if (object === null) object = Function.prototype; var desc = Object.getOwnPropertyDescriptor(object, property); if (desc === undefined) { var parent = Object.getPrototypeOf(object); if (parent === null) { return undefined; } else { _x = parent; _x2 = property; _x3 = receiver; _again = true; desc = parent = undefined; continue _function; } } else if ('value' in desc) { return desc.value; } else { var getter = desc.get; if (getter === undefined) { return undefined; } return getter.call(receiver); } } };\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { 'default': obj }; }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError('Cannot call a class as a function'); } }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== 'function' && superClass !== null) { throw new TypeError('Super expression must either be null or a function, not ' + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }\n\nvar _react = require('react');\n\nvar _react2 = _interopRequireDefault(_react);\n\nvar _propTypes = require('prop-types');\n\nvar _propTypes2 = _interopRequireDefault(_propTypes);\n\nvar CrossIcon = (function (_Component) {\n  _inherits(CrossIcon, _Component);\n\n  function CrossIcon() {\n    _classCallCheck(this, CrossIcon);\n\n    _get(Object.getPrototypeOf(CrossIcon.prototype), 'constructor', this).apply(this, arguments);\n  }\n\n  _createClass(CrossIcon, [{\n    key: 'getCrossStyle',\n    value: function getCrossStyle(type) {\n      return {\n        position: 'absolute',\n        width: 3,\n        height: 14,\n        transform: type === 'before' ? 'rotate(45deg)' : 'rotate(-45deg)'\n      };\n    }\n  }, {\n    key: 'render',\n    value: function render() {\n      var _this = this;\n\n      var icon;\n      var buttonWrapperStyle = {\n        position: 'absolute',\n        width: 24,\n        height: 24,\n        right: 8,\n        top: 8\n      };\n      var buttonStyle = {\n        position: 'absolute',\n        left: 0,\n        top: 0,\n        width: '100%',\n        height: '100%',\n        margin: 0,\n        padding: 0,\n        border: 'none',\n        textIndent: -9999,\n        background: 'transparent',\n        outline: 'none'\n      };\n\n      if (this.props.customIcon) {\n        var extraProps = {\n          className: 'bm-cross',\n          style: _extends({ width: '100%', height: '100%' }, this.props.styles.bmCross)\n        };\n        icon = _react2['default'].cloneElement(this.props.customIcon, extraProps);\n      } else {\n        icon = _react2['default'].createElement(\n          'span',\n          { style: { position: 'absolute', top: '6px', right: '14px' } },\n          ['before', 'after'].map(function (type, i) {\n            return _react2['default'].createElement('span', {\n              key: i,\n              className: 'bm-cross ' + _this.props.crossClassName,\n              style: _extends({}, _this.getCrossStyle(type), _this.props.styles.bmCross)\n            });\n          })\n        );\n      }\n\n      return _react2['default'].createElement(\n        'div',\n        {\n          className: 'bm-cross-button ' + this.props.className,\n          style: _extends({}, buttonWrapperStyle, this.props.styles.bmCrossButton)\n        },\n        icon,\n        _react2['default'].createElement(\n          'button',\n          { onClick: this.props.onClick, style: buttonStyle },\n          'Close Menu'\n        )\n      );\n    }\n  }]);\n\n  return CrossIcon;\n})(_react.Component);\n\nexports['default'] = CrossIcon;\n\nCrossIcon.propTypes = {\n  crossClassName: _propTypes2['default'].string,\n  customIcon: _propTypes2['default'].element,\n  styles: _propTypes2['default'].object\n};\n\nCrossIcon.defaultProps = {\n  crossClassName: '',\n  className: '',\n  styles: {}\n};\nmodule.exports = exports['default'];\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/react-burger-menu/lib/CrossIcon.js\n// module id = ./node_modules/react-burger-menu/lib/CrossIcon.js\n// module chunks = 7489246917808536000","'use strict';\n\nObject.defineProperty(exports, '__esModule', {\n  value: true\n});\nvar styles = {\n\n  overlay: function overlay(isOpen) {\n    return {\n      position: 'fixed',\n      zIndex: 1,\n      width: '100%',\n      height: '100%',\n      background: 'rgba(0, 0, 0, 0.3)',\n      opacity: isOpen ? 1 : 0,\n      MozTransform: isOpen ? '' : 'translate3d(100%, 0, 0)',\n      MsTransform: isOpen ? '' : 'translate3d(100%, 0, 0)',\n      OTransform: isOpen ? '' : 'translate3d(100%, 0, 0)',\n      WebkitTransform: isOpen ? '' : 'translate3d(100%, 0, 0)',\n      transform: isOpen ? '' : 'translate3d(100%, 0, 0)',\n      transition: isOpen ? 'opacity 0.3s' : 'opacity 0.3s, transform 0s 0.3s'\n    };\n  },\n\n  menuWrap: function menuWrap(isOpen, width, right) {\n    return {\n      position: 'fixed',\n      right: right ? 0 : 'inherit',\n      zIndex: 2,\n      width: width,\n      height: '100%',\n      MozTransform: isOpen ? '' : right ? 'translate3d(100%, 0, 0)' : 'translate3d(-100%, 0, 0)',\n      MsTransform: isOpen ? '' : right ? 'translate3d(100%, 0, 0)' : 'translate3d(-100%, 0, 0)',\n      OTransform: isOpen ? '' : right ? 'translate3d(100%, 0, 0)' : 'translate3d(-100%, 0, 0)',\n      WebkitTransform: isOpen ? '' : right ? 'translate3d(100%, 0, 0)' : 'translate3d(-100%, 0, 0)',\n      transform: isOpen ? '' : right ? 'translate3d(100%, 0, 0)' : 'translate3d(-100%, 0, 0)',\n      transition: 'all 0.5s'\n    };\n  },\n\n  menu: function menu() {\n    return {\n      height: '100%',\n      boxSizing: 'border-box',\n      overflow: 'auto'\n    };\n  },\n\n  itemList: function itemList() {\n    return {\n      height: '100%'\n    };\n  },\n\n  item: function item() {\n    return {\n      display: 'block',\n      outline: 'none'\n    };\n  }\n\n};\n\nexports['default'] = styles;\nmodule.exports = exports['default'];\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/react-burger-menu/lib/baseStyles.js\n// module id = ./node_modules/react-burger-menu/lib/baseStyles.js\n// module chunks = 7489246917808536000","'use strict';\n\nObject.defineProperty(exports, '__esModule', {\n  value: true\n});\n\nvar _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };\n\nvar _createClass = (function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ('value' in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; })();\n\nvar _get = function get(_x2, _x3, _x4) { var _again = true; _function: while (_again) { var object = _x2, property = _x3, receiver = _x4; _again = false; if (object === null) object = Function.prototype; var desc = Object.getOwnPropertyDescriptor(object, property); if (desc === undefined) { var parent = Object.getPrototypeOf(object); if (parent === null) { return undefined; } else { _x2 = parent; _x3 = property; _x4 = receiver; _again = true; desc = parent = undefined; continue _function; } } else if ('value' in desc) { return desc.value; } else { var getter = desc.get; if (getter === undefined) { return undefined; } return getter.call(receiver); } } };\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { 'default': obj }; }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError('Cannot call a class as a function'); } }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== 'function' && superClass !== null) { throw new TypeError('Super expression must either be null or a function, not ' + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }\n\nvar _react = require('react');\n\nvar _react2 = _interopRequireDefault(_react);\n\nvar _reactDom = require('react-dom');\n\nvar _reactDom2 = _interopRequireDefault(_reactDom);\n\nvar _propTypes = require('prop-types');\n\nvar _propTypes2 = _interopRequireDefault(_propTypes);\n\nvar _baseStyles = require('./baseStyles');\n\nvar _baseStyles2 = _interopRequireDefault(_baseStyles);\n\nvar _BurgerIcon = require('./BurgerIcon');\n\nvar _BurgerIcon2 = _interopRequireDefault(_BurgerIcon);\n\nvar _CrossIcon = require('./CrossIcon');\n\nvar _CrossIcon2 = _interopRequireDefault(_CrossIcon);\n\nexports['default'] = function (styles) {\n  var Menu = (function (_Component) {\n    _inherits(Menu, _Component);\n\n    function Menu(props) {\n      _classCallCheck(this, Menu);\n\n      _get(Object.getPrototypeOf(Menu.prototype), 'constructor', this).call(this, props);\n      this.state = {\n        isOpen: props && typeof props.isOpen !== 'undefined' ? props.isOpen : false\n      };\n    }\n\n    _createClass(Menu, [{\n      key: 'toggleMenu',\n      value: function toggleMenu() {\n        var _this = this;\n\n        var newState = { isOpen: !this.state.isOpen };\n\n        this.applyWrapperStyles();\n\n        this.setState(newState, function () {\n          _this.props.onStateChange(newState);\n\n          // Timeout ensures wrappers are cleared after animation finishes.\n          _this.timeoutId && clearTimeout(_this.timeoutId);\n          _this.timeoutId = setTimeout(function () {\n            _this.timeoutId = null;\n            if (!newState.isOpen) {\n              _this.applyWrapperStyles(false);\n            }\n          }, 500);\n        });\n      }\n\n      // Applies component-specific styles to external wrapper elements.\n    }, {\n      key: 'applyWrapperStyles',\n      value: function applyWrapperStyles() {\n        var set = arguments.length <= 0 || arguments[0] === undefined ? true : arguments[0];\n\n        if (this.props.bodyClassName) {\n          var body = document.querySelector('body');\n          body.classList[set ? 'add' : 'remove'](this.props.bodyClassName);\n        }\n\n        if (styles.pageWrap && this.props.pageWrapId) {\n          this.handleExternalWrapper(this.props.pageWrapId, styles.pageWrap, set);\n        }\n\n        if (styles.outerContainer && this.props.outerContainerId) {\n          this.handleExternalWrapper(this.props.outerContainerId, styles.outerContainer, set);\n        }\n      }\n\n      // Sets or unsets styles on DOM elements outside the menu component.\n      // This is necessary for correct page interaction with some of the menus.\n      // Throws and returns if the required external elements don't exist,\n      // which means any external page animations won't be applied.\n    }, {\n      key: 'handleExternalWrapper',\n      value: function handleExternalWrapper(id, wrapperStyles, set) {\n        var html = document.querySelector('html');\n        var body = document.querySelector('body');\n        var wrapper = document.getElementById(id);\n\n        if (!wrapper) {\n          console.error(\"Element with ID '\" + id + \"' not found\");\n          return;\n        }\n\n        var builtStyles = this.getStyle(wrapperStyles);\n\n        for (var prop in builtStyles) {\n          if (builtStyles.hasOwnProperty(prop)) {\n            wrapper.style[prop] = set ? builtStyles[prop] : '';\n          }\n        }\n\n        // Prevent any horizontal scroll.\n        [html, body].forEach(function (element) {\n          element.style['overflow-x'] = set ? 'hidden' : '';\n        });\n      }\n\n      // Builds styles incrementally for a given element.\n    }, {\n      key: 'getStyles',\n      value: function getStyles(el, index, inline) {\n        var propName = 'bm' + el.replace(el.charAt(0), el.charAt(0).toUpperCase());\n\n        // Set base styles.\n        var output = _baseStyles2['default'][el] ? this.getStyle(_baseStyles2['default'][el]) : {};\n\n        // Add animation-specific styles.\n        if (styles[el]) {\n          output = _extends({}, output, this.getStyle(styles[el], index + 1));\n        }\n\n        // Add custom styles.\n        if (this.props.styles[propName]) {\n          output = _extends({}, output, this.props.styles[propName]);\n        }\n\n        // Add element inline styles.\n        if (inline) {\n          output = _extends({}, output, inline);\n        }\n\n        return output;\n      }\n    }, {\n      key: 'getStyle',\n      value: function getStyle(style, index) {\n        var width = this.props.width;\n        if (typeof width !== 'string') width = width + 'px';\n\n        return style(this.state.isOpen, width, this.props.right, index);\n      }\n    }, {\n      key: 'listenForClose',\n      value: function listenForClose(e) {\n        e = e || window.event;\n\n        if (this.state.isOpen && (e.key === 'Escape' || e.keyCode === 27)) {\n          this.toggleMenu();\n        }\n      }\n    }, {\n      key: 'componentWillMount',\n      value: function componentWillMount() {\n        if (!styles) {\n          throw new Error('No styles supplied');\n        }\n\n        // Allow initial open state to be set by props.\n        if (this.props.isOpen) {\n          this.toggleMenu();\n        }\n      }\n    }, {\n      key: 'componentDidMount',\n      value: function componentDidMount() {\n        window.onkeydown = this.listenForClose.bind(this);\n\n        // Allow initial open state to be set by props for animations with wrapper elements.\n        if (this.props.isOpen) {\n          this.toggleMenu();\n        }\n      }\n    }, {\n      key: 'componentWillUnmount',\n      value: function componentWillUnmount() {\n        window.onkeydown = null;\n\n        this.applyWrapperStyles(false);\n      }\n    }, {\n      key: 'componentDidUpdate',\n      value: function componentDidUpdate() {\n        var _this2 = this;\n\n        if (styles.svg) {\n          (function () {\n            var morphShape = _reactDom2['default'].findDOMNode(_this2, 'bm-morph-shape');\n            var path = styles.svg.lib(morphShape).select('path');\n\n            if (_this2.state.isOpen) {\n              // Animate SVG path.\n              styles.svg.animate(path);\n            } else {\n              // Reset path (timeout ensures animation happens off screen).\n              setTimeout(function () {\n                path.attr('d', styles.svg.pathInitial);\n              }, 300);\n            }\n          })();\n        }\n      }\n    }, {\n      key: 'componentWillReceiveProps',\n      value: function componentWillReceiveProps(nextProps) {\n        if (typeof nextProps.isOpen !== 'undefined' && nextProps.isOpen !== this.state.isOpen) {\n          this.toggleMenu();\n        }\n      }\n    }, {\n      key: 'render',\n      value: function render() {\n        var _this3 = this;\n\n        return _react2['default'].createElement(\n          'div',\n          null,\n          !this.props.noOverlay && _react2['default'].createElement('div', {\n            className: 'bm-overlay ' + this.props.overlayClassName,\n            onClick: function () {\n              return _this3.toggleMenu();\n            },\n            style: this.getStyles('overlay')\n          }),\n          _react2['default'].createElement(\n            'div',\n            {\n              id: this.props.id,\n              className: 'bm-menu-wrap ' + this.props.className,\n              style: this.getStyles('menuWrap')\n            },\n            styles.svg && _react2['default'].createElement(\n              'div',\n              { className: 'bm-morph-shape ' + this.props.morphShapeClassName, style: this.getStyles('morphShape') },\n              _react2['default'].createElement(\n                'svg',\n                { width: '100%', height: '100%', viewBox: '0 0 100 800', preserveAspectRatio: 'none' },\n                _react2['default'].createElement('path', { d: styles.svg.pathInitial })\n              )\n            ),\n            _react2['default'].createElement(\n              'div',\n              { className: 'bm-menu ' + this.props.menuClassName, style: this.getStyles('menu') },\n              _react2['default'].createElement(\n                'nav',\n                { className: 'bm-item-list ' + this.props.itemListClassName, style: this.getStyles('itemList') },\n                _react2['default'].Children.map(this.props.children, function (item, index) {\n                  if (item) {\n                    var extraProps = {\n                      key: index,\n                      style: _this3.getStyles('item', index, item.props.style)\n                    };\n                    return _react2['default'].cloneElement(item, extraProps);\n                  }\n                })\n              )\n            ),\n            this.props.customCrossIcon !== false && _react2['default'].createElement(\n              'div',\n              { style: this.getStyles('closeButton') },\n              _react2['default'].createElement(_CrossIcon2['default'], {\n                onClick: function () {\n                  return _this3.toggleMenu();\n                },\n                styles: this.props.styles,\n                customIcon: this.props.customCrossIcon,\n                className: this.props.crossButtonClassName,\n                crossClassName: this.props.crossClassName\n              })\n            )\n          ),\n          this.props.customBurgerIcon !== false && _react2['default'].createElement(_BurgerIcon2['default'], {\n            onClick: function () {\n              return _this3.toggleMenu();\n            },\n            styles: this.props.styles,\n            customIcon: this.props.customBurgerIcon,\n            className: this.props.burgerButtonClassName,\n            barClassName: this.props.burgerBarClassName\n          })\n        );\n      }\n    }]);\n\n    return Menu;\n  })(_react.Component);\n\n  Menu.propTypes = {\n    bodyClassName: _propTypes2['default'].string,\n    burgerBarClassName: _propTypes2['default'].string,\n    burgerButtonClassName: _propTypes2['default'].string,\n    crossButtonClassName: _propTypes2['default'].string,\n    crossClassName: _propTypes2['default'].string,\n    customBurgerIcon: _propTypes2['default'].oneOfType([_propTypes2['default'].element, _propTypes2['default'].oneOf([false])]),\n    customCrossIcon: _propTypes2['default'].oneOfType([_propTypes2['default'].element, _propTypes2['default'].oneOf([false])]),\n    id: _propTypes2['default'].string,\n    isOpen: _propTypes2['default'].bool,\n    itemListClassName: _propTypes2['default'].string,\n    menuClassName: _propTypes2['default'].string,\n    morphShapeClassName: _propTypes2['default'].string,\n    noOverlay: _propTypes2['default'].bool,\n    onStateChange: _propTypes2['default'].func,\n    outerContainerId: styles && styles.outerContainer ? _propTypes2['default'].string.isRequired : _propTypes2['default'].string,\n    overlayClassName: _propTypes2['default'].string,\n    pageWrapId: styles && styles.pageWrap ? _propTypes2['default'].string.isRequired : _propTypes2['default'].string,\n    right: _propTypes2['default'].bool,\n    styles: _propTypes2['default'].object,\n    width: _propTypes2['default'].oneOfType([_propTypes2['default'].number, _propTypes2['default'].string])\n  };\n\n  Menu.defaultProps = {\n    bodyClassName: '',\n    burgerBarClassName: '',\n    burgerButtonClassName: '',\n    className: '',\n    crossButtonClassName: '',\n    crossClassName: '',\n    id: '',\n    itemListClassName: '',\n    menuClassName: '',\n    morphShapeClassName: '',\n    noOverlay: false,\n    onStateChange: function onStateChange() {},\n    outerContainerId: '',\n    overlayClassName: '',\n    pageWrapId: '',\n    styles: {},\n    width: 300\n  };\n\n  return Menu;\n};\n\nmodule.exports = exports['default'];\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/react-burger-menu/lib/menuFactory.js\n// module id = ./node_modules/react-burger-menu/lib/menuFactory.js\n// module chunks = 7489246917808536000","'use strict';\n\nObject.defineProperty(exports, '__esModule', {\n  value: true\n});\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { 'default': obj }; }\n\nvar _snapsvgImporter = require('../snapsvgImporter');\n\nvar _snapsvgImporter2 = _interopRequireDefault(_snapsvgImporter);\n\nvar _menuFactory = require('../menuFactory');\n\nvar _menuFactory2 = _interopRequireDefault(_menuFactory);\n\nvar styles = {\n\n  svg: {\n    lib: _snapsvgImporter2['default'],\n    pathInitial: 'M-7.312,0H0c0,0,0,113.839,0,400c0,264.506,0,400,0,400h-7.312V0z',\n    pathOpen: 'M-7.312,0H15c0,0,66,113.339,66,399.5C81,664.006,15,800,15,800H-7.312V0z;M-7.312,0H100c0,0,0,113.839,0,400c0,264.506,0,400,0,400H-7.312V0z',\n    animate: function animate(path) {\n      var pos = 0;\n      var steps = this.pathOpen.split(';');\n      var stepsTotal = steps.length;\n      var mina = window.mina;\n\n      var nextStep = function nextStep() {\n        if (pos > stepsTotal - 1) return;\n\n        path.animate({ path: steps[pos] }, pos === 0 ? 400 : 500, pos === 0 ? mina.easein : mina.elastic, function () {\n          nextStep();\n        });\n\n        pos++;\n      };\n\n      nextStep();\n    }\n  },\n\n  morphShape: function morphShape(isOpen, width, right) {\n    return {\n      position: 'absolute',\n      width: '100%',\n      height: '100%',\n      right: right ? 'inherit' : 0,\n      left: right ? 0 : 'inherit',\n      MozTransform: right ? 'rotateY(180deg)' : 'rotateY(0deg)',\n      MsTransform: right ? 'rotateY(180deg)' : 'rotateY(0deg)',\n      OTransform: right ? 'rotateY(180deg)' : 'rotateY(0deg)',\n      WebkitTransform: right ? 'rotateY(180deg)' : 'rotateY(0deg)',\n      transform: right ? 'rotateY(180deg)' : 'rotateY(0deg)'\n    };\n  },\n\n  menuWrap: function menuWrap(isOpen, width, right) {\n    return {\n      MozTransform: isOpen ? 'translate3d(0, 0, 0)' : right ? 'translate3d(100%, 0, 0)' : 'translate3d(-100%, 0, 0)',\n      MsTransform: isOpen ? 'translate3d(0, 0, 0)' : right ? 'translate3d(100%, 0, 0)' : 'translate3d(-100%, 0, 0)',\n      OTransform: isOpen ? 'translate3d(0, 0, 0)' : right ? 'translate3d(100%, 0, 0)' : 'translate3d(-100%, 0, 0)',\n      WebkitTransform: isOpen ? 'translate3d(0, 0, 0)' : right ? 'translate3d(100%, 0, 0)' : 'translate3d(-100%, 0, 0)',\n      transform: isOpen ? 'translate3d(0, 0, 0)' : right ? 'translate3d(100%, 0, 0)' : 'translate3d(-100%, 0, 0)',\n      transition: isOpen ? 'transform 0.4s 0s' : 'transform 0.4s'\n    };\n  },\n\n  menu: function menu(isOpen, width, right) {\n    width -= 140;\n    return {\n      position: 'fixed',\n      MozTransform: isOpen ? '' : right ? 'translate3d(' + width + ', 0, 0)' : 'translate3d(-' + width + ', 0, 0)',\n      MsTransform: isOpen ? '' : right ? 'translate3d(' + width + ', 0, 0)' : 'translate3d(-' + width + ', 0, 0)',\n      OTransform: isOpen ? '' : right ? 'translate3d(' + width + ', 0, 0)' : 'translate3d(-' + width + ', 0, 0)',\n      WebkitTransform: isOpen ? '' : right ? 'translate3d(' + width + ', 0, 0)' : 'translate3d(-' + width + ', 0, 0)',\n      transform: isOpen ? '' : right ? 'translate3d(' + width + ', 0, 0)' : 'translate3d(-' + width + ', 0, 0)',\n      transition: isOpen ? 'opacity 0.1s 0.4s cubic-bezier(.17, .67, .1, 1.27), transform 0.1s 0.4s cubic-bezier(.17, .67, .1, 1.27)' : 'opacity 0s 0.3s cubic-bezier(.17, .67, .1, 1.27), transform 0s 0.3s cubic-bezier(.17, .67, .1, 1.27)',\n      opacity: isOpen ? 1 : 0\n    };\n  },\n\n  item: function item(isOpen, width, right, nthChild) {\n    width -= 140;\n    return {\n      MozTransform: isOpen ? 'translate3d(0, 0, 0)' : right ? 'translate3d(' + width + ', 0, 0)' : 'translate3d(-' + width + ', 0, 0)',\n      MsTransform: isOpen ? 'translate3d(0, 0, 0)' : right ? 'translate3d(' + width + ', 0, 0)' : 'translate3d(-' + width + ', 0, 0)',\n      OTransform: isOpen ? 'translate3d(0, 0, 0)' : right ? 'translate3d(' + width + ', 0, 0)' : 'translate3d(-' + width + ', 0, 0)',\n      WebkitTransform: isOpen ? 'translate3d(0, 0, 0)' : right ? 'translate3d(' + width + ', 0, 0)' : 'translate3d(-' + width + ', 0, 0)',\n      transform: isOpen ? 'translate3d(0, 0, 0)' : right ? 'translate3d(' + width + ', 0, 0)' : 'translate3d(-' + width + ', 0, 0)',\n      transition: isOpen ? 'opacity 0.3s 0.4s, transform 0.3s 0.4s' : 'opacity 0s 0.3s cubic-bezier(.17, .67, .1, 1.27), transform 0s 0.3s cubic-bezier(.17, .67, .1, 1.27)',\n      opacity: isOpen ? 1 : 0\n    };\n  },\n\n  closeButton: function closeButton(isOpen, width, right) {\n    width -= 140;\n    return {\n      MozTransform: isOpen ? 'translate3d(0, 0, 0)' : right ? 'translate3d(' + width + ', 0, 0)' : 'translate3d(-' + width + ', 0, 0)',\n      MsTransform: isOpen ? 'translate3d(0, 0, 0)' : right ? 'translate3d(' + width + ', 0, 0)' : 'translate3d(-' + width + ', 0, 0)',\n      OTransform: isOpen ? 'translate3d(0, 0, 0)' : right ? 'translate3d(' + width + ', 0, 0)' : 'translate3d(-' + width + ', 0, 0)',\n      WebkitTransform: isOpen ? 'translate3d(0, 0, 0)' : right ? 'translate3d(' + width + ', 0, 0)' : 'translate3d(-' + width + ', 0, 0)',\n      transform: isOpen ? 'translate3d(0, 0, 0)' : right ? 'translate3d(' + width + ', 0, 0)' : 'translate3d(-' + width + ', 0, 0)',\n      transition: isOpen ? 'opacity 0.3s 0.4s cubic-bezier(.17, .67, .1, 1.27), transform 0.3s 0.4s cubic-bezier(.17, .67, .1, 1.27)' : 'opacity 0s 0.3s cubic-bezier(.17, .67, .1, 1.27), transform 0s 0.3s cubic-bezier(.17, .67, .1, 1.27)',\n      opacity: isOpen ? 1 : 0\n    };\n  }\n};\n\nexports['default'] = (0, _menuFactory2['default'])(styles);\nmodule.exports = exports['default'];\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/react-burger-menu/lib/menus/bubble.js\n// module id = ./node_modules/react-burger-menu/lib/menus/bubble.js\n// module chunks = 7489246917808536000","'use strict';\n\nObject.defineProperty(exports, '__esModule', {\n  value: true\n});\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { 'default': obj }; }\n\nvar _snapsvgImporter = require('../snapsvgImporter');\n\nvar _snapsvgImporter2 = _interopRequireDefault(_snapsvgImporter);\n\nvar _menuFactory = require('../menuFactory');\n\nvar _menuFactory2 = _interopRequireDefault(_menuFactory);\n\nvar styles = {\n\n  svg: {\n    lib: _snapsvgImporter2['default'],\n    pathInitial: 'M-1,0h101c0,0-97.833,153.603-97.833,396.167C2.167,627.579,100,800,100,800H-1V0z',\n    pathOpen: 'M-1,0h101c0,0,0-1,0,395c0,404,0,405,0,405H-1V0z',\n    animate: function animate(path) {\n      path.animate({ path: this.pathOpen }, 400, window.mina.easeinout);\n    }\n  },\n\n  morphShape: function morphShape(isOpen, width, right) {\n    return {\n      position: 'absolute',\n      width: 120,\n      height: '100%',\n      right: right ? 'inherit' : 0,\n      left: right ? 0 : 'inherit',\n      MozTransform: right ? 'rotateY(180deg)' : '',\n      MsTransform: right ? 'rotateY(180deg)' : '',\n      OTransform: right ? 'rotateY(180deg)' : '',\n      WebkitTransform: right ? 'rotateY(180deg)' : '',\n      transform: right ? 'rotateY(180deg)' : ''\n    };\n  },\n\n  menuWrap: function menuWrap(isOpen, width, right) {\n    return {\n      MozTransform: isOpen ? 'translate3d(0, 0, 0)' : right ? 'translate3d(100%, 0, 0)' : 'translate3d(-100%, 0, 0)',\n      MsTransform: isOpen ? 'translate3d(0, 0, 0)' : right ? 'translate3d(100%, 0, 0)' : 'translate3d(-100%, 0, 0)',\n      OTransform: isOpen ? 'translate3d(0, 0, 0)' : right ? 'translate3d(100%, 0, 0)' : 'translate3d(-100%, 0, 0)',\n      WebkitTransform: isOpen ? 'translate3d(0, 0, 0)' : right ? 'translate3d(100%, 0, 0)' : 'translate3d(-100%, 0, 0)',\n      transform: isOpen ? 'translate3d(0, 0, 0)' : right ? 'translate3d(100%, 0, 0)' : 'translate3d(-100%, 0, 0)',\n      transition: 'all 0.3s'\n    };\n  },\n\n  menu: function menu(isOpen, width, right) {\n    return {\n      position: 'fixed',\n      right: right ? 0 : 'inherit',\n      width: 180,\n      whiteSpace: 'nowrap',\n      boxSizing: 'border-box',\n      overflow: 'visible'\n    };\n  },\n\n  itemList: function itemList(isOpen, width, right) {\n    if (right) {\n      return {\n        position: 'relative',\n        left: '-110px',\n        width: '170%',\n        overflow: 'auto'\n      };\n    }\n  },\n\n  pageWrap: function pageWrap(isOpen, width, right) {\n    return {\n      MozTransform: isOpen ? '' : right ? 'translate3d(-100px, 0, 0)' : 'translate3d(100px, 0, 0)',\n      MsTransform: isOpen ? '' : right ? 'translate3d(-100px, 0, 0)' : 'translate3d(100px, 0, 0)',\n      OTransform: isOpen ? '' : right ? 'translate3d(-100px, 0, 0)' : 'translate3d(100px, 0, 0)',\n      WebkitTransform: isOpen ? '' : right ? 'translate3d(-100px, 0, 0)' : 'translate3d(100px, 0, 0)',\n      transform: isOpen ? '' : right ? 'translate3d(-100px, 0, 0)' : 'translate3d(100px, 0, 0)',\n      transition: isOpen ? 'all 0.3s' : 'all 0.3s 0.1s'\n    };\n  },\n\n  outerContainer: function outerContainer(isOpen) {\n    return {\n      overflow: isOpen ? '' : 'hidden'\n    };\n  }\n};\n\nexports['default'] = (0, _menuFactory2['default'])(styles);\nmodule.exports = exports['default'];\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/react-burger-menu/lib/menus/elastic.js\n// module id = ./node_modules/react-burger-menu/lib/menus/elastic.js\n// module chunks = 7489246917808536000","'use strict';\n\nObject.defineProperty(exports, '__esModule', {\n  value: true\n});\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { 'default': obj }; }\n\nvar _menuFactory = require('../menuFactory');\n\nvar _menuFactory2 = _interopRequireDefault(_menuFactory);\n\nvar styles = {\n\n  menuWrap: function menuWrap(isOpen) {\n    return {\n      MozTransform: isOpen ? '' : 'translate3d(0, -100%, 0)',\n      MsTransform: isOpen ? '' : 'translate3d(0, -100%, 0)',\n      OTransform: isOpen ? '' : 'translate3d(0, -100%, 0)',\n      WebkitTransform: isOpen ? '' : 'translate3d(0, -100%, 0)',\n      transform: isOpen ? '' : 'translate3d(0, -100%, 0)',\n      transition: 'all 0.5s ease-in-out'\n    };\n  },\n\n  pageWrap: function pageWrap(isOpen, width, right) {\n    return {\n      MozTransform: isOpen ? '' : right ? 'translate3d(-' + width + ', 0, 0)' : 'translate3d(' + width + ', 0, 0)',\n      MsTransform: isOpen ? '' : right ? 'translate3d(-' + width + ', 0, 0)' : 'translate3d(' + width + ', 0, 0)',\n      OTransform: isOpen ? '' : right ? 'translate3d(-' + width + ', 0, 0)' : 'translate3d(' + width + ', 0, 0)',\n      WebkitTransform: isOpen ? '' : right ? 'translate3d(-' + width + ', 0, 0)' : 'translate3d(' + width + ', 0, 0)',\n      transform: isOpen ? '' : right ? 'translate3d(-' + width + ', 0, 0)' : 'translate3d(' + width + ', 0, 0)',\n      transition: 'all 0.5s'\n    };\n  },\n\n  outerContainer: function outerContainer(isOpen) {\n    return {\n      perspective: '1500px',\n      perspectiveOrigin: '0% 50%',\n      overflow: isOpen ? '' : 'hidden'\n    };\n  }\n};\n\nexports['default'] = (0, _menuFactory2['default'])(styles);\nmodule.exports = exports['default'];\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/react-burger-menu/lib/menus/fallDown.js\n// module id = ./node_modules/react-burger-menu/lib/menus/fallDown.js\n// module chunks = 7489246917808536000","'use strict';\n\nObject.defineProperty(exports, '__esModule', {\n  value: true\n});\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { 'default': obj }; }\n\nvar _menuFactory = require('../menuFactory');\n\nvar _menuFactory2 = _interopRequireDefault(_menuFactory);\n\nvar styles = {\n\n  pageWrap: function pageWrap(isOpen, width, right) {\n    return {\n      MozTransform: isOpen ? '' : right ? 'translate3d(-' + width + ', 0, 0)' : 'translate3d(' + width + ', 0, 0)',\n      MsTransform: isOpen ? '' : right ? 'translate3d(-' + width + ', 0, 0)' : 'translate3d(' + width + ', 0, 0)',\n      OTransform: isOpen ? '' : right ? 'translate3d(-' + width + ', 0, 0)' : 'translate3d(' + width + ', 0, 0)',\n      WebkitTransform: isOpen ? '' : right ? 'translate3d(-' + width + ', 0, 0)' : 'translate3d(' + width + ', 0, 0)',\n      transform: isOpen ? '' : right ? 'translate3d(-' + width + ', 0, 0)' : 'translate3d(' + width + ', 0, 0)',\n      transition: 'all 0.5s'\n    };\n  },\n\n  outerContainer: function outerContainer(isOpen) {\n    return {\n      overflow: isOpen ? '' : 'hidden'\n    };\n  }\n};\n\nexports['default'] = (0, _menuFactory2['default'])(styles);\nmodule.exports = exports['default'];\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/react-burger-menu/lib/menus/push.js\n// module id = ./node_modules/react-burger-menu/lib/menus/push.js\n// module chunks = 7489246917808536000","'use strict';\n\nObject.defineProperty(exports, '__esModule', {\n  value: true\n});\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { 'default': obj }; }\n\nvar _menuFactory = require('../menuFactory');\n\nvar _menuFactory2 = _interopRequireDefault(_menuFactory);\n\nvar styles = {\n\n  pageWrap: function pageWrap(isOpen, width, right) {\n    return {\n      MozTransform: isOpen ? '' : right ? 'translate3d(-' + width + ', 0, 0) rotateY(15deg)' : 'translate3d(' + width + ', 0, 0) rotateY(-15deg)',\n      MsTransform: isOpen ? '' : right ? 'translate3d(-' + width + ', 0, 0) rotateY(15deg)' : 'translate3d(' + width + ', 0, 0) rotateY(-15deg)',\n      OTransform: isOpen ? '' : right ? 'translate3d(-' + width + ', 0, 0) rotateY(15deg)' : 'translate3d(' + width + ', 0, 0) rotateY(-15deg)',\n      WebkitTransform: isOpen ? '' : right ? 'translate3d(-' + width + ', 0, 0) rotateY(15deg)' : 'translate3d(' + width + ', 0, 0) rotateY(-15deg)',\n      transform: isOpen ? '' : right ? 'translate3d(-' + width + ', 0, 0) rotateY(15deg)' : 'translate3d(' + width + ', 0, 0) rotateY(-15deg)',\n      transformOrigin: right ? '100% 50%' : '0% 50%',\n      transformStyle: 'preserve-3d',\n      transition: 'all 0.5s'\n    };\n  },\n\n  outerContainer: function outerContainer(isOpen) {\n    return {\n      perspective: '1500px',\n      overflow: isOpen ? '' : 'hidden'\n    };\n  }\n};\n\nexports['default'] = (0, _menuFactory2['default'])(styles);\nmodule.exports = exports['default'];\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/react-burger-menu/lib/menus/pushRotate.js\n// module id = ./node_modules/react-burger-menu/lib/menus/pushRotate.js\n// module chunks = 7489246917808536000","'use strict';\n\nObject.defineProperty(exports, '__esModule', {\n  value: true\n});\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { 'default': obj }; }\n\nvar _menuFactory = require('../menuFactory');\n\nvar _menuFactory2 = _interopRequireDefault(_menuFactory);\n\nvar styles = {\n\n  pageWrap: function pageWrap(isOpen, width) {\n    return {\n      MozTransform: isOpen ? '' : 'translate3d(0, 0, -' + width + ')',\n      MsTransform: isOpen ? '' : 'translate3d(0, 0, -' + width + ')',\n      OTransform: isOpen ? '' : 'translate3d(0, 0, -' + width + ')',\n      WebkitTransform: isOpen ? '' : 'translate3d(0, 0, -' + width + ')',\n      transform: isOpen ? '' : 'translate3d(0, 0, -' + width + ')',\n      transformOrigin: '100%',\n      transformStyle: 'preserve-3d',\n      transition: 'all 0.5s'\n    };\n  },\n\n  outerContainer: function outerContainer() {\n    return {\n      perspective: '1500px'\n    };\n  }\n};\n\nexports['default'] = (0, _menuFactory2['default'])(styles);\nmodule.exports = exports['default'];\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/react-burger-menu/lib/menus/scaleDown.js\n// module id = ./node_modules/react-burger-menu/lib/menus/scaleDown.js\n// module chunks = 7489246917808536000","'use strict';\n\nObject.defineProperty(exports, '__esModule', {\n  value: true\n});\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { 'default': obj }; }\n\nvar _menuFactory = require('../menuFactory');\n\nvar _menuFactory2 = _interopRequireDefault(_menuFactory);\n\nvar styles = {\n\n  pageWrap: function pageWrap(isOpen, width, right) {\n    return {\n      MozTransform: isOpen ? '' : right ? 'translate3d(-100px, 0, -600px) rotateY(20deg)' : 'translate3d(100px, 0, -600px) rotateY(-20deg)',\n      MsTransform: isOpen ? '' : right ? 'translate3d(-100px, 0, -600px) rotateY(20deg)' : 'translate3d(100px, 0, -600px) rotateY(-20deg)',\n      OTransform: isOpen ? '' : right ? 'translate3d(-100px, 0, -600px) rotateY(20deg)' : 'translate3d(100px, 0, -600px) rotateY(-20deg)',\n      WebkitTransform: isOpen ? '' : right ? 'translate3d(-100px, 0, -600px) rotateY(20deg)' : 'translate3d(100px, 0, -600px) rotateY(-20deg)',\n      transform: isOpen ? '' : right ? 'translate3d(-100px, 0, -600px) rotateY(20deg)' : 'translate3d(100px, 0, -600px) rotateY(-20deg)',\n      transformStyle: 'preserve-3d',\n      transition: 'all 0.5s',\n      overflow: isOpen ? '' : 'hidden'\n    };\n  },\n\n  outerContainer: function outerContainer(isOpen) {\n    return {\n      perspective: '1500px',\n      overflow: isOpen ? '' : 'hidden'\n    };\n  }\n};\n\nexports['default'] = (0, _menuFactory2['default'])(styles);\nmodule.exports = exports['default'];\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/react-burger-menu/lib/menus/scaleRotate.js\n// module id = ./node_modules/react-burger-menu/lib/menus/scaleRotate.js\n// module chunks = 7489246917808536000","'use strict';\n\nObject.defineProperty(exports, '__esModule', {\n  value: true\n});\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { 'default': obj }; }\n\nvar _menuFactory = require('../menuFactory');\n\nvar _menuFactory2 = _interopRequireDefault(_menuFactory);\n\nvar styles = {};\n\nexports['default'] = (0, _menuFactory2['default'])(styles);\nmodule.exports = exports['default'];\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/react-burger-menu/lib/menus/slide.js\n// module id = ./node_modules/react-burger-menu/lib/menus/slide.js\n// module chunks = 7489246917808536000","'use strict';\n\nObject.defineProperty(exports, '__esModule', {\n  value: true\n});\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { 'default': obj }; }\n\nvar _menuFactory = require('../menuFactory');\n\nvar _menuFactory2 = _interopRequireDefault(_menuFactory);\n\nvar styles = {\n\n  menuWrap: function menuWrap(isOpen, width, right) {\n    return {\n      MozTransform: isOpen ? '' : right ? 'translate3d(' + width + ', 0, 0)' : 'translate3d(-' + width + ', 0, 0)',\n      MsTransform: isOpen ? '' : right ? 'translate3d(' + width + ', 0, 0)' : 'translate3d(-' + width + ', 0, 0)',\n      OTransform: isOpen ? '' : right ? 'translate3d(' + width + ', 0, 0)' : 'translate3d(-' + width + ', 0, 0)',\n      WebkitTransform: isOpen ? '' : right ? 'translate3d(' + width + ', 0, 0)' : 'translate3d(-' + width + ', 0, 0)',\n      transform: isOpen ? '' : right ? 'translate3d(' + width + ', 0, 0)' : 'translate3d(-' + width + ', 0, 0)',\n      transition: isOpen ? 'transform 0.8s cubic-bezier(0.7, 0, 0.3, 1)' : 'transform 0.4s cubic-bezier(0.7, 0, 0.3, 1)'\n    };\n  },\n\n  item: function item(isOpen, width, right, nthChild) {\n    return {\n      MozTransform: isOpen ? '' : 'translate3d(0, ' + nthChild * 500 + 'px, 0)',\n      MsTransform: isOpen ? '' : 'translate3d(0, ' + nthChild * 500 + 'px, 0)',\n      OTransform: isOpen ? '' : 'translate3d(0, ' + nthChild * 500 + 'px, 0)',\n      WebkitTransform: isOpen ? '' : 'translate3d(0, ' + nthChild * 500 + 'px, 0)',\n      transform: isOpen ? '' : 'translate3d(0, ' + nthChild * 500 + 'px, 0)',\n      transition: isOpen ? 'transform 0.8s cubic-bezier(0.7, 0, 0.3, 1)' : 'transform 0s 0.2s cubic-bezier(0.7, 0, 0.3, 1)'\n    };\n  }\n};\n\nexports['default'] = (0, _menuFactory2['default'])(styles);\nmodule.exports = exports['default'];\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/react-burger-menu/lib/menus/stack.js\n// module id = ./node_modules/react-burger-menu/lib/menus/stack.js\n// module chunks = 7489246917808536000","'use strict';\n\nObject.defineProperty(exports, '__esModule', {\n  value: true\n});\n\nexports['default'] = function () {\n  var Snap = undefined;\n  try {\n    Snap = require('snapsvg-cjs');\n  } finally {\n    return Snap;\n  }\n};\n\nmodule.exports = exports['default'];\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/react-burger-menu/lib/snapsvgImporter.js\n// module id = ./node_modules/react-burger-menu/lib/snapsvgImporter.js\n// module chunks = 7489246917808536000","var ReactDOM = require('react-dom');\nvar elementResizeEvent = require('element-resize-event');\n\nmodule.exports = {\n  getInitialState: function() {\n    if (this.props.initialComponentWidth !== undefined && this.props.initialComponentWidth !== null) {\n      return {\n        componentWidth: this.props.initialComponentWidth\n      };\n    } else {\n      return {};\n    }\n  },\n  // Add our resize sensor.\n  componentDidMount: function() {\n    this.setState({\n      componentWidth: ReactDOM.findDOMNode(this).getBoundingClientRect().width\n    });\n    elementResizeEvent(ReactDOM.findDOMNode(this), this.onResize);\n  },\n  // When the DOM updates, check that our resize sensor is still there.\n  componentDidUpdate: function() {\n    if (0 === ReactDOM.findDOMNode(this).getElementsByClassName('resize-sensor').length) {\n      elementResizeEvent(ReactDOM.findDOMNode(this), this.onResize);\n    }\n  },\n  onResize: function() {\n    this.setState({\n      componentWidth: ReactDOM.findDOMNode(this).getBoundingClientRect().width\n    });\n  }\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/react-component-width-mixin/index.js\n// module id = ./node_modules/react-component-width-mixin/index.js\n// module chunks = 7489246917808536000","'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };\n\nvar _react = require('react');\n\nvar _react2 = _interopRequireDefault(_react);\n\nvar _propTypes = require('prop-types');\n\nvar _propTypes2 = _interopRequireDefault(_propTypes);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction _objectWithoutProperties(obj, keys) { var target = {}; for (var i in obj) { if (keys.indexOf(i) >= 0) continue; if (!Object.prototype.hasOwnProperty.call(obj, i)) continue; target[i] = obj[i]; } return target; }\n\nvar IconBase = function IconBase(_ref, _ref2) {\n  var children = _ref.children;\n  var color = _ref.color;\n  var size = _ref.size;\n  var style = _ref.style;\n\n  var props = _objectWithoutProperties(_ref, ['children', 'color', 'size', 'style']);\n\n  var _ref2$reactIconBase = _ref2.reactIconBase;\n  var reactIconBase = _ref2$reactIconBase === undefined ? {} : _ref2$reactIconBase;\n\n  var computedSize = size || reactIconBase.size || '1em';\n  return _react2.default.createElement('svg', _extends({\n    children: children,\n    fill: 'currentColor',\n    preserveAspectRatio: 'xMidYMid meet',\n    height: computedSize,\n    width: computedSize\n  }, reactIconBase, props, {\n    style: _extends({\n      verticalAlign: 'middle',\n      color: color || reactIconBase.color\n    }, reactIconBase.style || {}, style)\n  }));\n};\n\nIconBase.propTypes = {\n  color: _propTypes2.default.string,\n  size: _propTypes2.default.oneOfType([_propTypes2.default.string, _propTypes2.default.number]),\n  style: _propTypes2.default.object\n};\n\nIconBase.contextTypes = {\n  reactIconBase: _propTypes2.default.shape(IconBase.propTypes)\n};\n\nexports.default = IconBase;\nmodule.exports = exports['default'];\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/react-icon-base/lib/index.js\n// module id = ./node_modules/react-icon-base/lib/index.js\n// module chunks = 7489246917808536000","'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\n\nvar _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };\n\nvar _react = require('react');\n\nvar _react2 = _interopRequireDefault(_react);\n\nvar _reactIconBase = require('react-icon-base');\n\nvar _reactIconBase2 = _interopRequireDefault(_reactIconBase);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nvar FaArrowLeft = function FaArrowLeft(props) {\n    return _react2.default.createElement(\n        _reactIconBase2.default,\n        _extends({ viewBox: '0 0 40 40' }, props),\n        _react2.default.createElement(\n            'g',\n            null,\n            _react2.default.createElement('path', { d: 'm36.3 20v2.9q0 1.1-0.7 2t-1.9 0.8h-15.7l6.5 6.6q0.9 0.8 0.9 2t-0.9 2l-1.7 1.7q-0.8 0.8-2 0.8-1.1 0-2-0.8l-14.5-14.6q-0.9-0.8-0.9-2 0-1.1 0.9-2l14.5-14.5q0.8-0.9 2-0.9 1.2 0 2 0.9l1.7 1.6q0.9 0.9 0.9 2.1t-0.9 2l-6.5 6.5h15.7q1.1 0 1.9 0.9t0.7 2z' })\n        )\n    );\n};\n\nexports.default = FaArrowLeft;\nmodule.exports = exports['default'];\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/react-icons/lib/fa/arrow-left.js\n// module id = ./node_modules/react-icons/lib/fa/arrow-left.js\n// module chunks = 7489246917808536000","// Generated by CoffeeScript 1.9.2\nvar resizeListener;\n\nresizeListener = require('./resizeListener');\n\nmodule.exports = {\n  getInitialState: function() {\n    if (this.props.initialPageWidth) {\n      return {\n        pageWidth: this.props.initialPageWidth\n      };\n    } else {\n      return {};\n    }\n  },\n  componentDidMount: function() {\n    return resizeListener.on(this.onResize);\n  },\n  componentWillUnmount: function() {\n    return resizeListener.off(this.onResize);\n  },\n  onResize: function(pageWidth) {\n    return this.setState({\n      pageWidth: pageWidth\n    });\n  }\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/react-page-width/dist/index.js\n// module id = ./node_modules/react-page-width/dist/index.js\n// module chunks = 7489246917808536000","// Generated by CoffeeScript 1.9.2\nvar currentWidth, onResize, raf, subscribers, ticking, update;\n\nraf = require('raf');\n\ncurrentWidth = void 0;\n\nsubscribers = [];\n\nticking = false;\n\nif (typeof window !== \"undefined\" && window !== null) {\n  currentWidth = window.innerWidth;\n}\n\nonResize = function() {\n  if (!ticking) {\n    ticking = true;\n    return raf(update);\n  }\n};\n\nupdate = function() {\n  var i, len, subscriber;\n  currentWidth = window.innerWidth;\n  for (i = 0, len = subscribers.length; i < len; i++) {\n    subscriber = subscribers[i];\n    subscriber(currentWidth);\n  }\n  return ticking = false;\n};\n\nif (typeof window !== \"undefined\" && window !== null) {\n  window.addEventListener(\"resize\", onResize);\n}\n\nmodule.exports = {\n  on: function(subscribeFn) {\n    subscribeFn(currentWidth);\n    return subscribers.push(subscribeFn);\n  },\n  off: function(subscribeFn) {\n    return subscribers.splice(subscribers.indexOf(subscribeFn), 1);\n  }\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/react-page-width/dist/resizeListener.js\n// module id = ./node_modules/react-page-width/dist/resizeListener.js\n// module chunks = 7489246917808536000","// Generated by CoffeeScript 1.10.0\nvar ComponentWidthComponent, PageWidthComponent, PageWidthMixin, React, componentWidthMixin, objectAssign;\n\nReact = require('react');\n\ncomponentWidthMixin = require('react-component-width-mixin');\n\nPageWidthMixin = require('react-page-width');\n\nobjectAssign = require('object-assign');\n\nComponentWidthComponent = React.createClass({\n  displayName: \"Breakpoint\",\n  mixins: [componentWidthMixin],\n  propTypes: {\n    minWidth: React.PropTypes.number,\n    maxWidth: React.PropTypes.number\n  },\n  getDefaultProps: function() {\n    return {\n      minWidth: 0,\n      maxWidth: 1000000000000000000000\n    };\n  },\n  renderChildren: function() {\n    return React.Children.map(this.props.children, (function(_this) {\n      return function(child) {\n        var ref;\n        if ((child != null ? (ref = child.type) != null ? ref.displayName : void 0 : void 0) === \"Span\") {\n          return React.cloneElement(child, {\n            context: _this.props.context\n          });\n        } else {\n          return child;\n        }\n      };\n    })(this));\n  },\n  render: function() {\n    var props, ref;\n    props = objectAssign({}, this.props);\n    delete props.maxWidth;\n    delete props.minWidth;\n    delete props.widthMethod;\n    if (this.state.componentWidth) {\n      if ((this.props.minWidth <= (ref = this.state.componentWidth) && ref < this.props.maxWidth)) {\n        return React.createElement(\"div\", Object.assign({}, props), this.renderChildren());\n      } else {\n        return React.createElement(\"div\", null);\n      }\n    } else {\n      return React.createElement(\"div\", null);\n    }\n  }\n});\n\nPageWidthComponent = React.createClass({\n  displayName: \"Breakpoint\",\n  mixins: [PageWidthMixin],\n  propTypes: {\n    minWidth: React.PropTypes.number,\n    maxWidth: React.PropTypes.number\n  },\n  getDefaultProps: function() {\n    return {\n      minWidth: 0,\n      maxWidth: 1000000000000000000000\n    };\n  },\n  renderChildren: function() {\n    return React.Children.map(this.props.children, (function(_this) {\n      return function(child) {\n        var ref;\n        if (((ref = child.type) != null ? ref.displayName : void 0) === \"Span\") {\n          return React.cloneElement(child, {\n            context: _this.props.context\n          });\n        } else {\n          return child;\n        }\n      };\n    })(this));\n  },\n  render: function() {\n    var props, ref;\n    props = objectAssign({}, this.props);\n    delete props.maxWidth;\n    delete props.minWidth;\n    delete props.widthMethod;\n    if (this.state.pageWidth) {\n      if ((this.props.minWidth <= (ref = this.state.pageWidth) && ref < this.props.maxWidth)) {\n        return React.createElement(\"div\", Object.assign({}, props), this.renderChildren());\n      } else {\n        return React.createElement(\"div\", null);\n      }\n    } else {\n      return React.createElement(\"div\", null);\n    }\n  }\n});\n\nmodule.exports = React.createClass({\n  displayName: 'Breakpoint',\n  propTypes: {\n    widthMethod: React.PropTypes.string.isRequired,\n    minWidth: React.PropTypes.number,\n    maxWidth: React.PropTypes.number\n  },\n  getDefaultProps: function() {\n    return {\n      widthMethod: 'pageWidth'\n    };\n  },\n  render: function() {\n    if (this.props.widthMethod === \"pageWidth\") {\n      return React.createElement(PageWidthComponent, Object.assign({}, this.props));\n    } else if (this.props.widthMethod === \"componentWidth\") {\n      return React.createElement(ComponentWidthComponent, Object.assign({}, this.props));\n    }\n  }\n});\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/react-responsive-grid/dist/components/Breakpoint.js\n// module id = ./node_modules/react-responsive-grid/dist/components/Breakpoint.js\n// module chunks = 7489246917808536000","// Generated by CoffeeScript 1.10.0\nvar React, objectAssign;\n\nReact = require('react');\n\nobjectAssign = require('object-assign');\n\nmodule.exports = React.createClass({\n  displayName: \"Container\",\n  render: function() {\n    var children, defaultStyles, props, styles;\n    defaultStyles = {\n      maxWidth: '960px',\n      marginLeft: 'auto',\n      marginRight: 'auto'\n    };\n    styles = objectAssign(defaultStyles, this.props.style);\n    children = this.props.children;\n    props = objectAssign({}, this.props);\n    delete props.children;\n    delete props.style;\n    return React.createElement(\"div\", Object.assign({}, props, {\n      \"style\": styles\n    }), children, React.createElement(\"span\", {\n      \"style\": {\n        display: 'block',\n        clear: 'both'\n      }\n    }, ' '));\n  }\n});\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/react-responsive-grid/dist/components/Container.js\n// module id = ./node_modules/react-responsive-grid/dist/components/Container.js\n// module chunks = 7489246917808536000","// Generated by CoffeeScript 1.10.0\nvar React, objectAssign;\n\nReact = require('react');\n\nobjectAssign = require('object-assign');\n\nmodule.exports = React.createClass({\n  displayName: \"Grid\",\n  propTypes: {\n    columns: React.PropTypes.number,\n    gutterRatio: React.PropTypes.number\n  },\n  getDefaultProps: function() {\n    return {\n      columns: 12,\n      gutterRatio: 1 / 4\n    };\n  },\n  renderChildren: function() {\n    return React.Children.map(this.props.children, (function(_this) {\n      return function(child) {\n        var ref, ref1;\n        if ((ref = (ref1 = child.type) != null ? ref1.displayName : void 0) === \"Breakpoint\" || ref === \"Span\") {\n          return React.cloneElement(child, {\n            context: {\n              columns: _this.props.columns,\n              gutterRatio: _this.props.gutterRatio\n            }\n          });\n        } else {\n          return child;\n        }\n      };\n    })(this));\n  },\n  render: function() {\n    var props;\n    props = objectAssign({}, this.props);\n    delete props.gutterRatio;\n    delete props.columns;\n    return React.createElement(\"div\", Object.assign({}, props), this.renderChildren(), React.createElement(\"span\", {\n      \"style\": {\n        display: 'block',\n        clear: 'both'\n      }\n    }, ' '));\n  }\n});\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/react-responsive-grid/dist/components/Grid.js\n// module id = ./node_modules/react-responsive-grid/dist/components/Grid.js\n// module chunks = 7489246917808536000","// Generated by CoffeeScript 1.10.0\nvar React, objectAssign, spanCalculate;\n\nReact = require('react');\n\nobjectAssign = require('object-assign');\n\nspanCalculate = require('../utils/SpanCalculate');\n\nmodule.exports = React.createClass({\n  displayName: \"Span\",\n  propTypes: {\n    context: React.PropTypes.object,\n    columns: React.PropTypes.number,\n    at: React.PropTypes.number,\n    pre: React.PropTypes.number,\n    post: React.PropTypes.number,\n    squish: React.PropTypes.number,\n    last: React.PropTypes.bool,\n    \"break\": React.PropTypes.bool\n  },\n  getDefaultProps: function() {\n    return {\n      at: 0,\n      pre: 0,\n      post: 0,\n      squish: 0,\n      last: false,\n      first: false,\n      \"break\": false\n    };\n  },\n  renderChildren: function() {\n    return React.Children.map(this.props.children, (function(_this) {\n      return function(child) {\n        var ref;\n        if ((child != null ? (ref = child.type) != null ? ref.displayName : void 0 : void 0) === \"Span\") {\n          return React.cloneElement(child, {\n            context: {\n              columns: _this.props.columns,\n              gutterRatio: _this.props.context.gutterRatio\n            }\n          });\n        } else {\n          return child;\n        }\n      };\n    })(this));\n  },\n  render: function() {\n    var props, style;\n    style = spanCalculate({\n      contextColumns: this.props.context.columns,\n      gutterRatio: this.props.context.gutterRatio,\n      columns: this.props.columns,\n      at: this.props.at,\n      pre: this.props.pre,\n      post: this.props.post,\n      squish: this.props.squish,\n      last: this.props.last,\n      \"break\": this.props[\"break\"]\n    });\n    style = objectAssign(style, this.props.style);\n    props = objectAssign({}, this.props, {\n      \"style\": style\n    });\n    delete props.at;\n    delete props[\"break\"];\n    delete props.columns;\n    delete props.context;\n    delete props.first;\n    delete props.last;\n    delete props.post;\n    delete props.pre;\n    delete props.squish;\n    delete props.style;\n    return React.createElement(\"div\", Object.assign({}, props, {\n      \"style\": style\n    }), this.renderChildren(), React.createElement(\"span\", {\n      \"style\": {\n        display: 'block',\n        clear: 'both'\n      }\n    }, ' '));\n  }\n});\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/react-responsive-grid/dist/components/Span.js\n// module id = ./node_modules/react-responsive-grid/dist/components/Span.js\n// module chunks = 7489246917808536000","// Generated by CoffeeScript 1.10.0\nexports.Container = require('./components/Container');\n\nexports.Grid = require('./components/Grid');\n\nexports.Breakpoint = require('./components/Breakpoint');\n\nexports.Span = require('./components/Span');\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/react-responsive-grid/dist/index.js\n// module id = ./node_modules/react-responsive-grid/dist/index.js\n// module chunks = 7489246917808536000","// Generated by CoffeeScript 1.10.0\nvar objectAssign;\n\nobjectAssign = require('object-assign');\n\nmodule.exports = function(options) {\n  var calcSpacing, calcSpanWidth, defaults, float, gutterWidth, marginLeft, marginRight, n, ops, width;\n  defaults = {\n    columns: 3,\n    at: 0,\n    pre: 0,\n    post: 0,\n    squish: 0,\n    contextColumns: 12,\n    gutterRatio: 1 / 4,\n    first: false,\n    last: false\n  };\n  ops = objectAssign(defaults, options);\n  n = 100 / (ops.contextColumns + ((ops.contextColumns - 1) * ops.gutterRatio));\n  gutterWidth = ops.gutterRatio * n;\n  calcSpanWidth = function(numColumns) {\n    return n * numColumns + gutterWidth * (numColumns - 1);\n  };\n  calcSpacing = function(numColumns) {\n    if (numColumns === 0) {\n      return 0;\n    } else {\n      return calcSpanWidth(numColumns) + gutterWidth;\n    }\n  };\n  width = calcSpanWidth(ops.columns);\n  if (ops.at === 0 && ops.pre === 0 && ops.squish === 0) {\n    marginLeft = 0;\n  } else {\n    marginLeft = calcSpacing(ops.at) + calcSpacing(ops.pre) + calcSpacing(ops.squish);\n  }\n  if (ops.last && ops.post === 0 && ops.squish === 0) {\n    marginRight = 0;\n  } else if (ops.post !== 0 || ops.squish !== 0) {\n    marginRight = calcSpacing(ops.post) + calcSpacing(ops.squish);\n    if (!ops.last) {\n      marginRight = marginRight + gutterWidth;\n    }\n  } else {\n    marginRight = gutterWidth;\n  }\n  if (ops.last) {\n    float = \"right\";\n  } else {\n    float = \"left\";\n  }\n  width = width + \"%\";\n  marginLeft = marginLeft + \"%\";\n  marginRight = marginRight + \"%\";\n  return {\n    float: float,\n    marginLeft: marginLeft,\n    marginRight: marginRight,\n    width: width,\n    clear: ops[\"break\"] ? 'both' : 'none'\n  };\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/react-responsive-grid/dist/utils/SpanCalculate.js\n// module id = ./node_modules/react-responsive-grid/dist/utils/SpanCalculate.js\n// module chunks = 7489246917808536000","window.eve = require('eve')\n\n// Copyright (c) 2013 Adobe Systems Incorporated. All rights reserved.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n// http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\nvar mina = (function (eve) {\n    var animations = {},\n    requestAnimFrame = window.requestAnimationFrame       ||\n                       window.webkitRequestAnimationFrame ||\n                       window.mozRequestAnimationFrame    ||\n                       window.oRequestAnimationFrame      ||\n                       window.msRequestAnimationFrame     ||\n                       function (callback) {\n                           setTimeout(callback, 16);\n                       },\n    isArray = Array.isArray || function (a) {\n        return a instanceof Array ||\n            Object.prototype.toString.call(a) == \"[object Array]\";\n    },\n    idgen = 0,\n    idprefix = \"M\" + (+new Date).toString(36),\n    ID = function () {\n        return idprefix + (idgen++).toString(36);\n    },\n    diff = function (a, b, A, B) {\n        if (isArray(a)) {\n            res = [];\n            for (var i = 0, ii = a.length; i < ii; i++) {\n                res[i] = diff(a[i], b, A[i], B);\n            }\n            return res;\n        }\n        var dif = (A - a) / (B - b);\n        return function (bb) {\n            return a + dif * (bb - b);\n        };\n    },\n    timer = Date.now || function () {\n        return +new Date;\n    },\n    sta = function (val) {\n        var a = this;\n        if (val == null) {\n            return a.s;\n        }\n        var ds = a.s - val;\n        a.b += a.dur * ds;\n        a.B += a.dur * ds;\n        a.s = val;\n    },\n    speed = function (val) {\n        var a = this;\n        if (val == null) {\n            return a.spd;\n        }\n        a.spd = val;\n    },\n    duration = function (val) {\n        var a = this;\n        if (val == null) {\n            return a.dur;\n        }\n        a.s = a.s * val / a.dur;\n        a.dur = val;\n    },\n    stopit = function () {\n        var a = this;\n        delete animations[a.id];\n        a.update();\n        eve(\"mina.stop.\" + a.id, a);\n    },\n    pause = function () {\n        var a = this;\n        if (a.pdif) {\n            return;\n        }\n        delete animations[a.id];\n        a.update();\n        a.pdif = a.get() - a.b;\n    },\n    resume = function () {\n        var a = this;\n        if (!a.pdif) {\n            return;\n        }\n        a.b = a.get() - a.pdif;\n        delete a.pdif;\n        animations[a.id] = a;\n    },\n    update = function () {\n        var a = this,\n            res;\n        if (isArray(a.start)) {\n            res = [];\n            for (var j = 0, jj = a.start.length; j < jj; j++) {\n                res[j] = +a.start[j] +\n                    (a.end[j] - a.start[j]) * a.easing(a.s);\n            }\n        } else {\n            res = +a.start + (a.end - a.start) * a.easing(a.s);\n        }\n        a.set(res);\n    },\n    frame = function () {\n        var len = 0;\n        for (var i in animations) if (animations.hasOwnProperty(i)) {\n            var a = animations[i],\n                b = a.get(),\n                res;\n            len++;\n            a.s = (b - a.b) / (a.dur / a.spd);\n            if (a.s >= 1) {\n                delete animations[i];\n                a.s = 1;\n                len--;\n                (function (a) {\n                    setTimeout(function () {\n                        eve(\"mina.finish.\" + a.id, a);\n                    });\n                }(a));\n            }\n            a.update();\n        }\n        len && requestAnimFrame(frame);\n    },\n    /*\\\n     * mina\n     [ method ]\n     **\n     * Generic animation of numbers\n     **\n     - a (number) start _slave_ number\n     - A (number) end _slave_ number\n     - b (number) start _master_ number (start time in general case)\n     - B (number) end _master_ number (end time in gereal case)\n     - get (function) getter of _master_ number (see @mina.time)\n     - set (function) setter of _slave_ number\n     - easing (function) #optional easing function, default is @mina.linear\n     = (object) animation descriptor\n     o {\n     o         id (string) animation id,\n     o         start (number) start _slave_ number,\n     o         end (number) end _slave_ number,\n     o         b (number) start _master_ number,\n     o         s (number) animation status (0..1),\n     o         dur (number) animation duration,\n     o         spd (number) animation speed,\n     o         get (function) getter of _master_ number (see @mina.time),\n     o         set (function) setter of _slave_ number,\n     o         easing (function) easing function, default is @mina.linear,\n     o         status (function) status getter/setter,\n     o         speed (function) speed getter/setter,\n     o         duration (function) duration getter/setter,\n     o         stop (function) animation stopper\n     o         pause (function) pauses the animation\n     o         resume (function) resumes the animation\n     o         update (function) calles setter with the right value of the animation\n     o }\n    \\*/\n    mina = function (a, A, b, B, get, set, easing) {\n        var anim = {\n            id: ID(),\n            start: a,\n            end: A,\n            b: b,\n            s: 0,\n            dur: B - b,\n            spd: 1,\n            get: get,\n            set: set,\n            easing: easing || mina.linear,\n            status: sta,\n            speed: speed,\n            duration: duration,\n            stop: stopit,\n            pause: pause,\n            resume: resume,\n            update: update\n        };\n        animations[anim.id] = anim;\n        var len = 0, i;\n        for (i in animations) if (animations.hasOwnProperty(i)) {\n            len++;\n            if (len == 2) {\n                break;\n            }\n        }\n        len == 1 && requestAnimFrame(frame);\n        return anim;\n    };\n    /*\\\n     * mina.time\n     [ method ]\n     **\n     * Returns the current time. Equivalent to:\n     | function () {\n     |     return (new Date).getTime();\n     | }\n    \\*/\n    mina.time = timer;\n    /*\\\n     * mina.getById\n     [ method ]\n     **\n     * Returns an animation by its id\n     - id (string) animation's id\n     = (object) See @mina\n    \\*/\n    mina.getById = function (id) {\n        return animations[id] || null;\n    };\n\n    /*\\\n     * mina.linear\n     [ method ]\n     **\n     * Default linear easing\n     - n (number) input 0..1\n     = (number) output 0..1\n    \\*/\n    mina.linear = function (n) {\n        return n;\n    };\n    /*\\\n     * mina.easeout\n     [ method ]\n     **\n     * Easeout easing\n     - n (number) input 0..1\n     = (number) output 0..1\n    \\*/\n    mina.easeout = function (n) {\n        return Math.pow(n, 1.7);\n    };\n    /*\\\n     * mina.easein\n     [ method ]\n     **\n     * Easein easing\n     - n (number) input 0..1\n     = (number) output 0..1\n    \\*/\n    mina.easein = function (n) {\n        return Math.pow(n, .48);\n    };\n    /*\\\n     * mina.easeinout\n     [ method ]\n     **\n     * Easeinout easing\n     - n (number) input 0..1\n     = (number) output 0..1\n    \\*/\n    mina.easeinout = function (n) {\n        if (n == 1) {\n            return 1;\n        }\n        if (n == 0) {\n            return 0;\n        }\n        var q = .48 - n / 1.04,\n            Q = Math.sqrt(.1734 + q * q),\n            x = Q - q,\n            X = Math.pow(Math.abs(x), 1 / 3) * (x < 0 ? -1 : 1),\n            y = -Q - q,\n            Y = Math.pow(Math.abs(y), 1 / 3) * (y < 0 ? -1 : 1),\n            t = X + Y + .5;\n        return (1 - t) * 3 * t * t + t * t * t;\n    };\n    /*\\\n     * mina.backin\n     [ method ]\n     **\n     * Backin easing\n     - n (number) input 0..1\n     = (number) output 0..1\n    \\*/\n    mina.backin = function (n) {\n        if (n == 1) {\n            return 1;\n        }\n        var s = 1.70158;\n        return n * n * ((s + 1) * n - s);\n    };\n    /*\\\n     * mina.backout\n     [ method ]\n     **\n     * Backout easing\n     - n (number) input 0..1\n     = (number) output 0..1\n    \\*/\n    mina.backout = function (n) {\n        if (n == 0) {\n            return 0;\n        }\n        n = n - 1;\n        var s = 1.70158;\n        return n * n * ((s + 1) * n + s) + 1;\n    };\n    /*\\\n     * mina.elastic\n     [ method ]\n     **\n     * Elastic easing\n     - n (number) input 0..1\n     = (number) output 0..1\n    \\*/\n    mina.elastic = function (n) {\n        if (n == !!n) {\n            return n;\n        }\n        return Math.pow(2, -10 * n) * Math.sin((n - .075) *\n            (2 * Math.PI) / .3) + 1;\n    };\n    /*\\\n     * mina.bounce\n     [ method ]\n     **\n     * Bounce easing\n     - n (number) input 0..1\n     = (number) output 0..1\n    \\*/\n    mina.bounce = function (n) {\n        var s = 7.5625,\n            p = 2.75,\n            l;\n        if (n < (1 / p)) {\n            l = s * n * n;\n        } else {\n            if (n < (2 / p)) {\n                n -= (1.5 / p);\n                l = s * n * n + .75;\n            } else {\n                if (n < (2.5 / p)) {\n                    n -= (2.25 / p);\n                    l = s * n * n + .9375;\n                } else {\n                    n -= (2.625 / p);\n                    l = s * n * n + .984375;\n                }\n            }\n        }\n        return l;\n    };\n    window.mina = mina;\n    return mina;\n})(typeof eve == \"undefined\" ? function () {} : eve);\n// Copyright (c) 2013 - 2015 Adobe Systems Incorporated. All rights reserved.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n// http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\nvar Snap = (function(root) {\nSnap.version = \"0.4.0\";\n/*\\\n * Snap\n [ method ]\n **\n * Creates a drawing surface or wraps existing SVG element.\n **\n - width (number|string) width of surface\n - height (number|string) height of surface\n * or\n - DOM (SVGElement) element to be wrapped into Snap structure\n * or\n - array (array) array of elements (will return set of elements)\n * or\n - query (string) CSS query selector\n = (object) @Element\n\\*/\nfunction Snap(w, h) {\n    if (w) {\n        if (w.nodeType) {\n            return wrap(w);\n        }\n        if (is(w, \"array\") && Snap.set) {\n            return Snap.set.apply(Snap, w);\n        }\n        if (w instanceof Element) {\n            return w;\n        }\n        if (h == null) {\n            w = glob.doc.querySelector(String(w));\n            return wrap(w);\n        }\n    }\n    w = w == null ? \"100%\" : w;\n    h = h == null ? \"100%\" : h;\n    return new Paper(w, h);\n}\nSnap.toString = function () {\n    return \"Snap v\" + this.version;\n};\nSnap._ = {};\nvar glob = {\n    win: root.window,\n    doc: root.window.document\n};\nSnap._.glob = glob;\nvar has = \"hasOwnProperty\",\n    Str = String,\n    toFloat = parseFloat,\n    toInt = parseInt,\n    math = Math,\n    mmax = math.max,\n    mmin = math.min,\n    abs = math.abs,\n    pow = math.pow,\n    PI = math.PI,\n    round = math.round,\n    E = \"\",\n    S = \" \",\n    objectToString = Object.prototype.toString,\n    ISURL = /^url\\(['\"]?([^\\)]+?)['\"]?\\)$/i,\n    colourRegExp = /^\\s*((#[a-f\\d]{6})|(#[a-f\\d]{3})|rgba?\\(\\s*([\\d\\.]+%?\\s*,\\s*[\\d\\.]+%?\\s*,\\s*[\\d\\.]+%?(?:\\s*,\\s*[\\d\\.]+%?)?)\\s*\\)|hsba?\\(\\s*([\\d\\.]+(?:deg|\\xb0|%)?\\s*,\\s*[\\d\\.]+%?\\s*,\\s*[\\d\\.]+(?:%?\\s*,\\s*[\\d\\.]+)?%?)\\s*\\)|hsla?\\(\\s*([\\d\\.]+(?:deg|\\xb0|%)?\\s*,\\s*[\\d\\.]+%?\\s*,\\s*[\\d\\.]+(?:%?\\s*,\\s*[\\d\\.]+)?%?)\\s*\\))\\s*$/i,\n    bezierrg = /^(?:cubic-)?bezier\\(([^,]+),([^,]+),([^,]+),([^\\)]+)\\)/,\n    reURLValue = /^url\\(#?([^)]+)\\)$/,\n    separator = Snap._.separator = /[,\\s]+/,\n    whitespace = /[\\s]/g,\n    commaSpaces = /[\\s]*,[\\s]*/,\n    hsrg = {hs: 1, rg: 1},\n    pathCommand = /([a-z])[\\s,]*((-?\\d*\\.?\\d*(?:e[\\-+]?\\d+)?[\\s]*,?[\\s]*)+)/ig,\n    tCommand = /([rstm])[\\s,]*((-?\\d*\\.?\\d*(?:e[\\-+]?\\d+)?[\\s]*,?[\\s]*)+)/ig,\n    pathValues = /(-?\\d*\\.?\\d*(?:e[\\-+]?\\\\d+)?)[\\s]*,?[\\s]*/ig,\n    idgen = 0,\n    idprefix = \"S\" + (+new Date).toString(36),\n    ID = function (el) {\n        return (el && el.type ? el.type : E) + idprefix + (idgen++).toString(36);\n    },\n    xlink = \"http://www.w3.org/1999/xlink\",\n    xmlns = \"http://www.w3.org/2000/svg\",\n    hub = {},\n    URL = Snap.url = function (url) {\n        return \"url('#\" + url + \"')\";\n    };\n\nfunction $(el, attr) {\n    if (attr) {\n        if (el == \"#text\") {\n            el = glob.doc.createTextNode(attr.text || attr[\"#text\"] || \"\");\n        }\n        if (el == \"#comment\") {\n            el = glob.doc.createComment(attr.text || attr[\"#text\"] || \"\");\n        }\n        if (typeof el == \"string\") {\n            el = $(el);\n        }\n        if (typeof attr == \"string\") {\n            if (el.nodeType == 1) {\n                if (attr.substring(0, 6) == \"xlink:\") {\n                    return el.getAttributeNS(xlink, attr.substring(6));\n                }\n                if (attr.substring(0, 4) == \"xml:\") {\n                    return el.getAttributeNS(xmlns, attr.substring(4));\n                }\n                return el.getAttribute(attr);\n            } else if (attr == \"text\") {\n                return el.nodeValue;\n            } else {\n                return null;\n            }\n        }\n        if (el.nodeType == 1) {\n            for (var key in attr) if (attr[has](key)) {\n                var val = Str(attr[key]);\n                if (val) {\n                    if (key.substring(0, 6) == \"xlink:\") {\n                        el.setAttributeNS(xlink, key.substring(6), val);\n                    } else if (key.substring(0, 4) == \"xml:\") {\n                        el.setAttributeNS(xmlns, key.substring(4), val);\n                    } else {\n                        el.setAttribute(key, val);\n                    }\n                } else {\n                    el.removeAttribute(key);\n                }\n            }\n        } else if (\"text\" in attr) {\n            el.nodeValue = attr.text;\n        }\n    } else {\n        el = glob.doc.createElementNS(xmlns, el);\n    }\n    return el;\n}\nSnap._.$ = $;\nSnap._.id = ID;\nfunction getAttrs(el) {\n    var attrs = el.attributes,\n        name,\n        out = {};\n    for (var i = 0; i < attrs.length; i++) {\n        if (attrs[i].namespaceURI == xlink) {\n            name = \"xlink:\";\n        } else {\n            name = \"\";\n        }\n        name += attrs[i].name;\n        out[name] = attrs[i].textContent;\n    }\n    return out;\n}\nfunction is(o, type) {\n    type = Str.prototype.toLowerCase.call(type);\n    if (type == \"finite\") {\n        return isFinite(o);\n    }\n    if (type == \"array\" &&\n        (o instanceof Array || Array.isArray && Array.isArray(o))) {\n        return true;\n    }\n    return  (type == \"null\" && o === null) ||\n            (type == typeof o && o !== null) ||\n            (type == \"object\" && o === Object(o)) ||\n            objectToString.call(o).slice(8, -1).toLowerCase() == type;\n}\n/*\\\n * Snap.format\n [ method ]\n **\n * Replaces construction of type `{<name>}` to the corresponding argument\n **\n - token (string) string to format\n - json (object) object which properties are used as a replacement\n = (string) formatted string\n > Usage\n | // this draws a rectangular shape equivalent to \"M10,20h40v50h-40z\"\n | paper.path(Snap.format(\"M{x},{y}h{dim.width}v{dim.height}h{dim['negative width']}z\", {\n |     x: 10,\n |     y: 20,\n |     dim: {\n |         width: 40,\n |         height: 50,\n |         \"negative width\": -40\n |     }\n | }));\n\\*/\nSnap.format = (function () {\n    var tokenRegex = /\\{([^\\}]+)\\}/g,\n        objNotationRegex = /(?:(?:^|\\.)(.+?)(?=\\[|\\.|$|\\()|\\[('|\")(.+?)\\2\\])(\\(\\))?/g, // matches .xxxxx or [\"xxxxx\"] to run over object properties\n        replacer = function (all, key, obj) {\n            var res = obj;\n            key.replace(objNotationRegex, function (all, name, quote, quotedName, isFunc) {\n                name = name || quotedName;\n                if (res) {\n                    if (name in res) {\n                        res = res[name];\n                    }\n                    typeof res == \"function\" && isFunc && (res = res());\n                }\n            });\n            res = (res == null || res == obj ? all : res) + \"\";\n            return res;\n        };\n    return function (str, obj) {\n        return Str(str).replace(tokenRegex, function (all, key) {\n            return replacer(all, key, obj);\n        });\n    };\n})();\nfunction clone(obj) {\n    if (typeof obj == \"function\" || Object(obj) !== obj) {\n        return obj;\n    }\n    var res = new obj.constructor;\n    for (var key in obj) if (obj[has](key)) {\n        res[key] = clone(obj[key]);\n    }\n    return res;\n}\nSnap._.clone = clone;\nfunction repush(array, item) {\n    for (var i = 0, ii = array.length; i < ii; i++) if (array[i] === item) {\n        return array.push(array.splice(i, 1)[0]);\n    }\n}\nfunction cacher(f, scope, postprocessor) {\n    function newf() {\n        var arg = Array.prototype.slice.call(arguments, 0),\n            args = arg.join(\"\\u2400\"),\n            cache = newf.cache = newf.cache || {},\n            count = newf.count = newf.count || [];\n        if (cache[has](args)) {\n            repush(count, args);\n            return postprocessor ? postprocessor(cache[args]) : cache[args];\n        }\n        count.length >= 1e3 && delete cache[count.shift()];\n        count.push(args);\n        cache[args] = f.apply(scope, arg);\n        return postprocessor ? postprocessor(cache[args]) : cache[args];\n    }\n    return newf;\n}\nSnap._.cacher = cacher;\nfunction angle(x1, y1, x2, y2, x3, y3) {\n    if (x3 == null) {\n        var x = x1 - x2,\n            y = y1 - y2;\n        if (!x && !y) {\n            return 0;\n        }\n        return (180 + math.atan2(-y, -x) * 180 / PI + 360) % 360;\n    } else {\n        return angle(x1, y1, x3, y3) - angle(x2, y2, x3, y3);\n    }\n}\nfunction rad(deg) {\n    return deg % 360 * PI / 180;\n}\nfunction deg(rad) {\n    return rad * 180 / PI % 360;\n}\nfunction x_y() {\n    return this.x + S + this.y;\n}\nfunction x_y_w_h() {\n    return this.x + S + this.y + S + this.width + \" \\xd7 \" + this.height;\n}\n\n/*\\\n * Snap.rad\n [ method ]\n **\n * Transform angle to radians\n - deg (number) angle in degrees\n = (number) angle in radians\n\\*/\nSnap.rad = rad;\n/*\\\n * Snap.deg\n [ method ]\n **\n * Transform angle to degrees\n - rad (number) angle in radians\n = (number) angle in degrees\n\\*/\nSnap.deg = deg;\n/*\\\n * Snap.sin\n [ method ]\n **\n * Equivalent to `Math.sin()` only works with degrees, not radians.\n - angle (number) angle in degrees\n = (number) sin\n\\*/\nSnap.sin = function (angle) {\n    return math.sin(Snap.rad(angle));\n};\n/*\\\n * Snap.tan\n [ method ]\n **\n * Equivalent to `Math.tan()` only works with degrees, not radians.\n - angle (number) angle in degrees\n = (number) tan\n\\*/\nSnap.tan = function (angle) {\n    return math.tan(Snap.rad(angle));\n};\n/*\\\n * Snap.cos\n [ method ]\n **\n * Equivalent to `Math.cos()` only works with degrees, not radians.\n - angle (number) angle in degrees\n = (number) cos\n\\*/\nSnap.cos = function (angle) {\n    return math.cos(Snap.rad(angle));\n};\n/*\\\n * Snap.asin\n [ method ]\n **\n * Equivalent to `Math.asin()` only works with degrees, not radians.\n - num (number) value\n = (number) asin in degrees\n\\*/\nSnap.asin = function (num) {\n    return Snap.deg(math.asin(num));\n};\n/*\\\n * Snap.acos\n [ method ]\n **\n * Equivalent to `Math.acos()` only works with degrees, not radians.\n - num (number) value\n = (number) acos in degrees\n\\*/\nSnap.acos = function (num) {\n    return Snap.deg(math.acos(num));\n};\n/*\\\n * Snap.atan\n [ method ]\n **\n * Equivalent to `Math.atan()` only works with degrees, not radians.\n - num (number) value\n = (number) atan in degrees\n\\*/\nSnap.atan = function (num) {\n    return Snap.deg(math.atan(num));\n};\n/*\\\n * Snap.atan2\n [ method ]\n **\n * Equivalent to `Math.atan2()` only works with degrees, not radians.\n - num (number) value\n = (number) atan2 in degrees\n\\*/\nSnap.atan2 = function (num) {\n    return Snap.deg(math.atan2(num));\n};\n/*\\\n * Snap.angle\n [ method ]\n **\n * Returns an angle between two or three points\n > Parameters\n - x1 (number) x coord of first point\n - y1 (number) y coord of first point\n - x2 (number) x coord of second point\n - y2 (number) y coord of second point\n - x3 (number) #optional x coord of third point\n - y3 (number) #optional y coord of third point\n = (number) angle in degrees\n\\*/\nSnap.angle = angle;\n/*\\\n * Snap.len\n [ method ]\n **\n * Returns distance between two points\n > Parameters\n - x1 (number) x coord of first point\n - y1 (number) y coord of first point\n - x2 (number) x coord of second point\n - y2 (number) y coord of second point\n = (number) distance\n\\*/\nSnap.len = function (x1, y1, x2, y2) {\n    return Math.sqrt(Snap.len2(x1, y1, x2, y2));\n};\n/*\\\n * Snap.len2\n [ method ]\n **\n * Returns squared distance between two points\n > Parameters\n - x1 (number) x coord of first point\n - y1 (number) y coord of first point\n - x2 (number) x coord of second point\n - y2 (number) y coord of second point\n = (number) distance\n\\*/\nSnap.len2 = function (x1, y1, x2, y2) {\n    return (x1 - x2) * (x1 - x2) + (y1 - y2) * (y1 - y2);\n};\n/*\\\n * Snap.closestPoint\n [ method ]\n **\n * Returns closest point to a given one on a given path.\n > Parameters\n - path (Element) path element\n - x (number) x coord of a point\n - y (number) y coord of a point\n = (object) in format\n {\n    x (number) x coord of the point on the path\n    y (number) y coord of the point on the path\n    length (number) length of the path to the point\n    distance (number) distance from the given point to the path\n }\n\\*/\n// Copied from http://bl.ocks.org/mbostock/8027637\nSnap.closestPoint = function (path, x, y) {\n    function distance2(p) {\n        var dx = p.x - x,\n            dy = p.y - y;\n        return dx * dx + dy * dy;\n    }\n    var pathNode = path.node,\n        pathLength = pathNode.getTotalLength(),\n        precision = pathLength / pathNode.pathSegList.numberOfItems * .125,\n        best,\n        bestLength,\n        bestDistance = Infinity;\n\n    // linear scan for coarse approximation\n    for (var scan, scanLength = 0, scanDistance; scanLength <= pathLength; scanLength += precision) {\n        if ((scanDistance = distance2(scan = pathNode.getPointAtLength(scanLength))) < bestDistance) {\n            best = scan, bestLength = scanLength, bestDistance = scanDistance;\n        }\n    }\n\n    // binary search for precise estimate\n    precision *= .5;\n    while (precision > .5) {\n        var before,\n            after,\n            beforeLength,\n            afterLength,\n            beforeDistance,\n            afterDistance;\n        if ((beforeLength = bestLength - precision) >= 0 && (beforeDistance = distance2(before = pathNode.getPointAtLength(beforeLength))) < bestDistance) {\n            best = before, bestLength = beforeLength, bestDistance = beforeDistance;\n        } else if ((afterLength = bestLength + precision) <= pathLength && (afterDistance = distance2(after = pathNode.getPointAtLength(afterLength))) < bestDistance) {\n            best = after, bestLength = afterLength, bestDistance = afterDistance;\n        } else {\n            precision *= .5;\n        }\n    }\n\n    best = {\n        x: best.x,\n        y: best.y,\n        length: bestLength,\n        distance: Math.sqrt(bestDistance)\n    };\n    return best;\n}\n/*\\\n * Snap.is\n [ method ]\n **\n * Handy replacement for the `typeof` operator\n - o (…) any object or primitive\n - type (string) name of the type, e.g., `string`, `function`, `number`, etc.\n = (boolean) `true` if given value is of given type\n\\*/\nSnap.is = is;\n/*\\\n * Snap.snapTo\n [ method ]\n **\n * Snaps given value to given grid\n - values (array|number) given array of values or step of the grid\n - value (number) value to adjust\n - tolerance (number) #optional maximum distance to the target value that would trigger the snap. Default is `10`.\n = (number) adjusted value\n\\*/\nSnap.snapTo = function (values, value, tolerance) {\n    tolerance = is(tolerance, \"finite\") ? tolerance : 10;\n    if (is(values, \"array\")) {\n        var i = values.length;\n        while (i--) if (abs(values[i] - value) <= tolerance) {\n            return values[i];\n        }\n    } else {\n        values = +values;\n        var rem = value % values;\n        if (rem < tolerance) {\n            return value - rem;\n        }\n        if (rem > values - tolerance) {\n            return value - rem + values;\n        }\n    }\n    return value;\n};\n// Colour\n/*\\\n * Snap.getRGB\n [ method ]\n **\n * Parses color string as RGB object\n - color (string) color string in one of the following formats:\n # <ul>\n #     <li>Color name (<code>red</code>, <code>green</code>, <code>cornflowerblue</code>, etc)</li>\n #     <li>#••• — shortened HTML color: (<code>#000</code>, <code>#fc0</code>, etc.)</li>\n #     <li>#•••••• — full length HTML color: (<code>#000000</code>, <code>#bd2300</code>)</li>\n #     <li>rgb(•••, •••, •••) — red, green and blue channels values: (<code>rgb(200,&nbsp;100,&nbsp;0)</code>)</li>\n #     <li>rgba(•••, •••, •••, •••) — also with opacity</li>\n #     <li>rgb(•••%, •••%, •••%) — same as above, but in %: (<code>rgb(100%,&nbsp;175%,&nbsp;0%)</code>)</li>\n #     <li>rgba(•••%, •••%, •••%, •••%) — also with opacity</li>\n #     <li>hsb(•••, •••, •••) — hue, saturation and brightness values: (<code>hsb(0.5,&nbsp;0.25,&nbsp;1)</code>)</li>\n #     <li>hsba(•••, •••, •••, •••) — also with opacity</li>\n #     <li>hsb(•••%, •••%, •••%) — same as above, but in %</li>\n #     <li>hsba(•••%, •••%, •••%, •••%) — also with opacity</li>\n #     <li>hsl(•••, •••, •••) — hue, saturation and luminosity values: (<code>hsb(0.5,&nbsp;0.25,&nbsp;0.5)</code>)</li>\n #     <li>hsla(•••, •••, •••, •••) — also with opacity</li>\n #     <li>hsl(•••%, •••%, •••%) — same as above, but in %</li>\n #     <li>hsla(•••%, •••%, •••%, •••%) — also with opacity</li>\n # </ul>\n * Note that `%` can be used any time: `rgb(20%, 255, 50%)`.\n = (object) RGB object in the following format:\n o {\n o     r (number) red,\n o     g (number) green,\n o     b (number) blue,\n o     hex (string) color in HTML/CSS format: #••••••,\n o     error (boolean) true if string can't be parsed\n o }\n\\*/\nSnap.getRGB = cacher(function (colour) {\n    if (!colour || !!((colour = Str(colour)).indexOf(\"-\") + 1)) {\n        return {r: -1, g: -1, b: -1, hex: \"none\", error: 1, toString: rgbtoString};\n    }\n    if (colour == \"none\") {\n        return {r: -1, g: -1, b: -1, hex: \"none\", toString: rgbtoString};\n    }\n    !(hsrg[has](colour.toLowerCase().substring(0, 2)) || colour.charAt() == \"#\") && (colour = toHex(colour));\n    if (!colour) {\n        return {r: -1, g: -1, b: -1, hex: \"none\", error: 1, toString: rgbtoString};\n    }\n    var res,\n        red,\n        green,\n        blue,\n        opacity,\n        t,\n        values,\n        rgb = colour.match(colourRegExp);\n    if (rgb) {\n        if (rgb[2]) {\n            blue = toInt(rgb[2].substring(5), 16);\n            green = toInt(rgb[2].substring(3, 5), 16);\n            red = toInt(rgb[2].substring(1, 3), 16);\n        }\n        if (rgb[3]) {\n            blue = toInt((t = rgb[3].charAt(3)) + t, 16);\n            green = toInt((t = rgb[3].charAt(2)) + t, 16);\n            red = toInt((t = rgb[3].charAt(1)) + t, 16);\n        }\n        if (rgb[4]) {\n            values = rgb[4].split(commaSpaces);\n            red = toFloat(values[0]);\n            values[0].slice(-1) == \"%\" && (red *= 2.55);\n            green = toFloat(values[1]);\n            values[1].slice(-1) == \"%\" && (green *= 2.55);\n            blue = toFloat(values[2]);\n            values[2].slice(-1) == \"%\" && (blue *= 2.55);\n            rgb[1].toLowerCase().slice(0, 4) == \"rgba\" && (opacity = toFloat(values[3]));\n            values[3] && values[3].slice(-1) == \"%\" && (opacity /= 100);\n        }\n        if (rgb[5]) {\n            values = rgb[5].split(commaSpaces);\n            red = toFloat(values[0]);\n            values[0].slice(-1) == \"%\" && (red /= 100);\n            green = toFloat(values[1]);\n            values[1].slice(-1) == \"%\" && (green /= 100);\n            blue = toFloat(values[2]);\n            values[2].slice(-1) == \"%\" && (blue /= 100);\n            (values[0].slice(-3) == \"deg\" || values[0].slice(-1) == \"\\xb0\") && (red /= 360);\n            rgb[1].toLowerCase().slice(0, 4) == \"hsba\" && (opacity = toFloat(values[3]));\n            values[3] && values[3].slice(-1) == \"%\" && (opacity /= 100);\n            return Snap.hsb2rgb(red, green, blue, opacity);\n        }\n        if (rgb[6]) {\n            values = rgb[6].split(commaSpaces);\n            red = toFloat(values[0]);\n            values[0].slice(-1) == \"%\" && (red /= 100);\n            green = toFloat(values[1]);\n            values[1].slice(-1) == \"%\" && (green /= 100);\n            blue = toFloat(values[2]);\n            values[2].slice(-1) == \"%\" && (blue /= 100);\n            (values[0].slice(-3) == \"deg\" || values[0].slice(-1) == \"\\xb0\") && (red /= 360);\n            rgb[1].toLowerCase().slice(0, 4) == \"hsla\" && (opacity = toFloat(values[3]));\n            values[3] && values[3].slice(-1) == \"%\" && (opacity /= 100);\n            return Snap.hsl2rgb(red, green, blue, opacity);\n        }\n        red = mmin(math.round(red), 255);\n        green = mmin(math.round(green), 255);\n        blue = mmin(math.round(blue), 255);\n        opacity = mmin(mmax(opacity, 0), 1);\n        rgb = {r: red, g: green, b: blue, toString: rgbtoString};\n        rgb.hex = \"#\" + (16777216 | blue | (green << 8) | (red << 16)).toString(16).slice(1);\n        rgb.opacity = is(opacity, \"finite\") ? opacity : 1;\n        return rgb;\n    }\n    return {r: -1, g: -1, b: -1, hex: \"none\", error: 1, toString: rgbtoString};\n}, Snap);\n/*\\\n * Snap.hsb\n [ method ]\n **\n * Converts HSB values to a hex representation of the color\n - h (number) hue\n - s (number) saturation\n - b (number) value or brightness\n = (string) hex representation of the color\n\\*/\nSnap.hsb = cacher(function (h, s, b) {\n    return Snap.hsb2rgb(h, s, b).hex;\n});\n/*\\\n * Snap.hsl\n [ method ]\n **\n * Converts HSL values to a hex representation of the color\n - h (number) hue\n - s (number) saturation\n - l (number) luminosity\n = (string) hex representation of the color\n\\*/\nSnap.hsl = cacher(function (h, s, l) {\n    return Snap.hsl2rgb(h, s, l).hex;\n});\n/*\\\n * Snap.rgb\n [ method ]\n **\n * Converts RGB values to a hex representation of the color\n - r (number) red\n - g (number) green\n - b (number) blue\n = (string) hex representation of the color\n\\*/\nSnap.rgb = cacher(function (r, g, b, o) {\n    if (is(o, \"finite\")) {\n        var round = math.round;\n        return \"rgba(\" + [round(r), round(g), round(b), +o.toFixed(2)] + \")\";\n    }\n    return \"#\" + (16777216 | b | (g << 8) | (r << 16)).toString(16).slice(1);\n});\nvar toHex = function (color) {\n    var i = glob.doc.getElementsByTagName(\"head\")[0] || glob.doc.getElementsByTagName(\"svg\")[0],\n        red = \"rgb(255, 0, 0)\";\n    toHex = cacher(function (color) {\n        if (color.toLowerCase() == \"red\") {\n            return red;\n        }\n        i.style.color = red;\n        i.style.color = color;\n        var out = glob.doc.defaultView.getComputedStyle(i, E).getPropertyValue(\"color\");\n        return out == red ? null : out;\n    });\n    return toHex(color);\n},\nhsbtoString = function () {\n    return \"hsb(\" + [this.h, this.s, this.b] + \")\";\n},\nhsltoString = function () {\n    return \"hsl(\" + [this.h, this.s, this.l] + \")\";\n},\nrgbtoString = function () {\n    return this.opacity == 1 || this.opacity == null ?\n            this.hex :\n            \"rgba(\" + [this.r, this.g, this.b, this.opacity] + \")\";\n},\nprepareRGB = function (r, g, b) {\n    if (g == null && is(r, \"object\") && \"r\" in r && \"g\" in r && \"b\" in r) {\n        b = r.b;\n        g = r.g;\n        r = r.r;\n    }\n    if (g == null && is(r, string)) {\n        var clr = Snap.getRGB(r);\n        r = clr.r;\n        g = clr.g;\n        b = clr.b;\n    }\n    if (r > 1 || g > 1 || b > 1) {\n        r /= 255;\n        g /= 255;\n        b /= 255;\n    }\n\n    return [r, g, b];\n},\npackageRGB = function (r, g, b, o) {\n    r = math.round(r * 255);\n    g = math.round(g * 255);\n    b = math.round(b * 255);\n    var rgb = {\n        r: r,\n        g: g,\n        b: b,\n        opacity: is(o, \"finite\") ? o : 1,\n        hex: Snap.rgb(r, g, b),\n        toString: rgbtoString\n    };\n    is(o, \"finite\") && (rgb.opacity = o);\n    return rgb;\n};\n/*\\\n * Snap.color\n [ method ]\n **\n * Parses the color string and returns an object featuring the color's component values\n - clr (string) color string in one of the supported formats (see @Snap.getRGB)\n = (object) Combined RGB/HSB object in the following format:\n o {\n o     r (number) red,\n o     g (number) green,\n o     b (number) blue,\n o     hex (string) color in HTML/CSS format: #••••••,\n o     error (boolean) `true` if string can't be parsed,\n o     h (number) hue,\n o     s (number) saturation,\n o     v (number) value (brightness),\n o     l (number) lightness\n o }\n\\*/\nSnap.color = function (clr) {\n    var rgb;\n    if (is(clr, \"object\") && \"h\" in clr && \"s\" in clr && \"b\" in clr) {\n        rgb = Snap.hsb2rgb(clr);\n        clr.r = rgb.r;\n        clr.g = rgb.g;\n        clr.b = rgb.b;\n        clr.opacity = 1;\n        clr.hex = rgb.hex;\n    } else if (is(clr, \"object\") && \"h\" in clr && \"s\" in clr && \"l\" in clr) {\n        rgb = Snap.hsl2rgb(clr);\n        clr.r = rgb.r;\n        clr.g = rgb.g;\n        clr.b = rgb.b;\n        clr.opacity = 1;\n        clr.hex = rgb.hex;\n    } else {\n        if (is(clr, \"string\")) {\n            clr = Snap.getRGB(clr);\n        }\n        if (is(clr, \"object\") && \"r\" in clr && \"g\" in clr && \"b\" in clr && !(\"error\" in clr)) {\n            rgb = Snap.rgb2hsl(clr);\n            clr.h = rgb.h;\n            clr.s = rgb.s;\n            clr.l = rgb.l;\n            rgb = Snap.rgb2hsb(clr);\n            clr.v = rgb.b;\n        } else {\n            clr = {hex: \"none\"};\n            clr.r = clr.g = clr.b = clr.h = clr.s = clr.v = clr.l = -1;\n            clr.error = 1;\n        }\n    }\n    clr.toString = rgbtoString;\n    return clr;\n};\n/*\\\n * Snap.hsb2rgb\n [ method ]\n **\n * Converts HSB values to an RGB object\n - h (number) hue\n - s (number) saturation\n - v (number) value or brightness\n = (object) RGB object in the following format:\n o {\n o     r (number) red,\n o     g (number) green,\n o     b (number) blue,\n o     hex (string) color in HTML/CSS format: #••••••\n o }\n\\*/\nSnap.hsb2rgb = function (h, s, v, o) {\n    if (is(h, \"object\") && \"h\" in h && \"s\" in h && \"b\" in h) {\n        v = h.b;\n        s = h.s;\n        o = h.o;\n        h = h.h;\n    }\n    h *= 360;\n    var R, G, B, X, C;\n    h = (h % 360) / 60;\n    C = v * s;\n    X = C * (1 - abs(h % 2 - 1));\n    R = G = B = v - C;\n\n    h = ~~h;\n    R += [C, X, 0, 0, X, C][h];\n    G += [X, C, C, X, 0, 0][h];\n    B += [0, 0, X, C, C, X][h];\n    return packageRGB(R, G, B, o);\n};\n/*\\\n * Snap.hsl2rgb\n [ method ]\n **\n * Converts HSL values to an RGB object\n - h (number) hue\n - s (number) saturation\n - l (number) luminosity\n = (object) RGB object in the following format:\n o {\n o     r (number) red,\n o     g (number) green,\n o     b (number) blue,\n o     hex (string) color in HTML/CSS format: #••••••\n o }\n\\*/\nSnap.hsl2rgb = function (h, s, l, o) {\n    if (is(h, \"object\") && \"h\" in h && \"s\" in h && \"l\" in h) {\n        l = h.l;\n        s = h.s;\n        h = h.h;\n    }\n    if (h > 1 || s > 1 || l > 1) {\n        h /= 360;\n        s /= 100;\n        l /= 100;\n    }\n    h *= 360;\n    var R, G, B, X, C;\n    h = (h % 360) / 60;\n    C = 2 * s * (l < .5 ? l : 1 - l);\n    X = C * (1 - abs(h % 2 - 1));\n    R = G = B = l - C / 2;\n\n    h = ~~h;\n    R += [C, X, 0, 0, X, C][h];\n    G += [X, C, C, X, 0, 0][h];\n    B += [0, 0, X, C, C, X][h];\n    return packageRGB(R, G, B, o);\n};\n/*\\\n * Snap.rgb2hsb\n [ method ]\n **\n * Converts RGB values to an HSB object\n - r (number) red\n - g (number) green\n - b (number) blue\n = (object) HSB object in the following format:\n o {\n o     h (number) hue,\n o     s (number) saturation,\n o     b (number) brightness\n o }\n\\*/\nSnap.rgb2hsb = function (r, g, b) {\n    b = prepareRGB(r, g, b);\n    r = b[0];\n    g = b[1];\n    b = b[2];\n\n    var H, S, V, C;\n    V = mmax(r, g, b);\n    C = V - mmin(r, g, b);\n    H = (C == 0 ? null :\n         V == r ? (g - b) / C :\n         V == g ? (b - r) / C + 2 :\n                  (r - g) / C + 4\n        );\n    H = ((H + 360) % 6) * 60 / 360;\n    S = C == 0 ? 0 : C / V;\n    return {h: H, s: S, b: V, toString: hsbtoString};\n};\n/*\\\n * Snap.rgb2hsl\n [ method ]\n **\n * Converts RGB values to an HSL object\n - r (number) red\n - g (number) green\n - b (number) blue\n = (object) HSL object in the following format:\n o {\n o     h (number) hue,\n o     s (number) saturation,\n o     l (number) luminosity\n o }\n\\*/\nSnap.rgb2hsl = function (r, g, b) {\n    b = prepareRGB(r, g, b);\n    r = b[0];\n    g = b[1];\n    b = b[2];\n\n    var H, S, L, M, m, C;\n    M = mmax(r, g, b);\n    m = mmin(r, g, b);\n    C = M - m;\n    H = (C == 0 ? null :\n         M == r ? (g - b) / C :\n         M == g ? (b - r) / C + 2 :\n                  (r - g) / C + 4);\n    H = ((H + 360) % 6) * 60 / 360;\n    L = (M + m) / 2;\n    S = (C == 0 ? 0 :\n         L < .5 ? C / (2 * L) :\n                  C / (2 - 2 * L));\n    return {h: H, s: S, l: L, toString: hsltoString};\n};\n\n// Transformations\n/*\\\n * Snap.parsePathString\n [ method ]\n **\n * Utility method\n **\n * Parses given path string into an array of arrays of path segments\n - pathString (string|array) path string or array of segments (in the last case it is returned straight away)\n = (array) array of segments\n\\*/\nSnap.parsePathString = function (pathString) {\n    if (!pathString) {\n        return null;\n    }\n    var pth = Snap.path(pathString);\n    if (pth.arr) {\n        return Snap.path.clone(pth.arr);\n    }\n\n    var paramCounts = {a: 7, c: 6, o: 2, h: 1, l: 2, m: 2, r: 4, q: 4, s: 4, t: 2, v: 1, u: 3, z: 0},\n        data = [];\n    if (is(pathString, \"array\") && is(pathString[0], \"array\")) { // rough assumption\n        data = Snap.path.clone(pathString);\n    }\n    if (!data.length) {\n        Str(pathString).replace(pathCommand, function (a, b, c) {\n            var params = [],\n                name = b.toLowerCase();\n            c.replace(pathValues, function (a, b) {\n                b && params.push(+b);\n            });\n            if (name == \"m\" && params.length > 2) {\n                data.push([b].concat(params.splice(0, 2)));\n                name = \"l\";\n                b = b == \"m\" ? \"l\" : \"L\";\n            }\n            if (name == \"o\" && params.length == 1) {\n                data.push([b, params[0]]);\n            }\n            if (name == \"r\") {\n                data.push([b].concat(params));\n            } else while (params.length >= paramCounts[name]) {\n                data.push([b].concat(params.splice(0, paramCounts[name])));\n                if (!paramCounts[name]) {\n                    break;\n                }\n            }\n        });\n    }\n    data.toString = Snap.path.toString;\n    pth.arr = Snap.path.clone(data);\n    return data;\n};\n/*\\\n * Snap.parseTransformString\n [ method ]\n **\n * Utility method\n **\n * Parses given transform string into an array of transformations\n - TString (string|array) transform string or array of transformations (in the last case it is returned straight away)\n = (array) array of transformations\n\\*/\nvar parseTransformString = Snap.parseTransformString = function (TString) {\n    if (!TString) {\n        return null;\n    }\n    var paramCounts = {r: 3, s: 4, t: 2, m: 6},\n        data = [];\n    if (is(TString, \"array\") && is(TString[0], \"array\")) { // rough assumption\n        data = Snap.path.clone(TString);\n    }\n    if (!data.length) {\n        Str(TString).replace(tCommand, function (a, b, c) {\n            var params = [],\n                name = b.toLowerCase();\n            c.replace(pathValues, function (a, b) {\n                b && params.push(+b);\n            });\n            data.push([b].concat(params));\n        });\n    }\n    data.toString = Snap.path.toString;\n    return data;\n};\nfunction svgTransform2string(tstr) {\n    var res = [];\n    tstr = tstr.replace(/(?:^|\\s)(\\w+)\\(([^)]+)\\)/g, function (all, name, params) {\n        params = params.split(/\\s*,\\s*|\\s+/);\n        if (name == \"rotate\" && params.length == 1) {\n            params.push(0, 0);\n        }\n        if (name == \"scale\") {\n            if (params.length > 2) {\n                params = params.slice(0, 2);\n            } else if (params.length == 2) {\n                params.push(0, 0);\n            }\n            if (params.length == 1) {\n                params.push(params[0], 0, 0);\n            }\n        }\n        if (name == \"skewX\") {\n            res.push([\"m\", 1, 0, math.tan(rad(params[0])), 1, 0, 0]);\n        } else if (name == \"skewY\") {\n            res.push([\"m\", 1, math.tan(rad(params[0])), 0, 1, 0, 0]);\n        } else {\n            res.push([name.charAt(0)].concat(params));\n        }\n        return all;\n    });\n    return res;\n}\nSnap._.svgTransform2string = svgTransform2string;\nSnap._.rgTransform = /^[a-z][\\s]*-?\\.?\\d/i;\nfunction transform2matrix(tstr, bbox) {\n    var tdata = parseTransformString(tstr),\n        m = new Snap.Matrix;\n    if (tdata) {\n        for (var i = 0, ii = tdata.length; i < ii; i++) {\n            var t = tdata[i],\n                tlen = t.length,\n                command = Str(t[0]).toLowerCase(),\n                absolute = t[0] != command,\n                inver = absolute ? m.invert() : 0,\n                x1,\n                y1,\n                x2,\n                y2,\n                bb;\n            if (command == \"t\" && tlen == 2){\n                m.translate(t[1], 0);\n            } else if (command == \"t\" && tlen == 3) {\n                if (absolute) {\n                    x1 = inver.x(0, 0);\n                    y1 = inver.y(0, 0);\n                    x2 = inver.x(t[1], t[2]);\n                    y2 = inver.y(t[1], t[2]);\n                    m.translate(x2 - x1, y2 - y1);\n                } else {\n                    m.translate(t[1], t[2]);\n                }\n            } else if (command == \"r\") {\n                if (tlen == 2) {\n                    bb = bb || bbox;\n                    m.rotate(t[1], bb.x + bb.width / 2, bb.y + bb.height / 2);\n                } else if (tlen == 4) {\n                    if (absolute) {\n                        x2 = inver.x(t[2], t[3]);\n                        y2 = inver.y(t[2], t[3]);\n                        m.rotate(t[1], x2, y2);\n                    } else {\n                        m.rotate(t[1], t[2], t[3]);\n                    }\n                }\n            } else if (command == \"s\") {\n                if (tlen == 2 || tlen == 3) {\n                    bb = bb || bbox;\n                    m.scale(t[1], t[tlen - 1], bb.x + bb.width / 2, bb.y + bb.height / 2);\n                } else if (tlen == 4) {\n                    if (absolute) {\n                        x2 = inver.x(t[2], t[3]);\n                        y2 = inver.y(t[2], t[3]);\n                        m.scale(t[1], t[1], x2, y2);\n                    } else {\n                        m.scale(t[1], t[1], t[2], t[3]);\n                    }\n                } else if (tlen == 5) {\n                    if (absolute) {\n                        x2 = inver.x(t[3], t[4]);\n                        y2 = inver.y(t[3], t[4]);\n                        m.scale(t[1], t[2], x2, y2);\n                    } else {\n                        m.scale(t[1], t[2], t[3], t[4]);\n                    }\n                }\n            } else if (command == \"m\" && tlen == 7) {\n                m.add(t[1], t[2], t[3], t[4], t[5], t[6]);\n            }\n        }\n    }\n    return m;\n}\nSnap._.transform2matrix = transform2matrix;\nSnap._unit2px = unit2px;\nvar contains = glob.doc.contains || glob.doc.compareDocumentPosition ?\n    function (a, b) {\n        var adown = a.nodeType == 9 ? a.documentElement : a,\n            bup = b && b.parentNode;\n            return a == bup || !!(bup && bup.nodeType == 1 && (\n                adown.contains ?\n                    adown.contains(bup) :\n                    a.compareDocumentPosition && a.compareDocumentPosition(bup) & 16\n            ));\n    } :\n    function (a, b) {\n        if (b) {\n            while (b) {\n                b = b.parentNode;\n                if (b == a) {\n                    return true;\n                }\n            }\n        }\n        return false;\n    };\nfunction getSomeDefs(el) {\n    var p = (el.node.ownerSVGElement && wrap(el.node.ownerSVGElement)) ||\n            (el.node.parentNode && wrap(el.node.parentNode)) ||\n            Snap.select(\"svg\") ||\n            Snap(0, 0),\n        pdefs = p.select(\"defs\"),\n        defs  = pdefs == null ? false : pdefs.node;\n    if (!defs) {\n        defs = make(\"defs\", p.node).node;\n    }\n    return defs;\n}\nfunction getSomeSVG(el) {\n    return el.node.ownerSVGElement && wrap(el.node.ownerSVGElement) || Snap.select(\"svg\");\n}\nSnap._.getSomeDefs = getSomeDefs;\nSnap._.getSomeSVG = getSomeSVG;\nfunction unit2px(el, name, value) {\n    var svg = getSomeSVG(el).node,\n        out = {},\n        mgr = svg.querySelector(\".svg---mgr\");\n    if (!mgr) {\n        mgr = $(\"rect\");\n        $(mgr, {x: -9e9, y: -9e9, width: 10, height: 10, \"class\": \"svg---mgr\", fill: \"none\"});\n        svg.appendChild(mgr);\n    }\n    function getW(val) {\n        if (val == null) {\n            return E;\n        }\n        if (val == +val) {\n            return val;\n        }\n        $(mgr, {width: val});\n        try {\n            return mgr.getBBox().width;\n        } catch (e) {\n            return 0;\n        }\n    }\n    function getH(val) {\n        if (val == null) {\n            return E;\n        }\n        if (val == +val) {\n            return val;\n        }\n        $(mgr, {height: val});\n        try {\n            return mgr.getBBox().height;\n        } catch (e) {\n            return 0;\n        }\n    }\n    function set(nam, f) {\n        if (name == null) {\n            out[nam] = f(el.attr(nam) || 0);\n        } else if (nam == name) {\n            out = f(value == null ? el.attr(nam) || 0 : value);\n        }\n    }\n    switch (el.type) {\n        case \"rect\":\n            set(\"rx\", getW);\n            set(\"ry\", getH);\n        case \"image\":\n            set(\"width\", getW);\n            set(\"height\", getH);\n        case \"text\":\n            set(\"x\", getW);\n            set(\"y\", getH);\n        break;\n        case \"circle\":\n            set(\"cx\", getW);\n            set(\"cy\", getH);\n            set(\"r\", getW);\n        break;\n        case \"ellipse\":\n            set(\"cx\", getW);\n            set(\"cy\", getH);\n            set(\"rx\", getW);\n            set(\"ry\", getH);\n        break;\n        case \"line\":\n            set(\"x1\", getW);\n            set(\"x2\", getW);\n            set(\"y1\", getH);\n            set(\"y2\", getH);\n        break;\n        case \"marker\":\n            set(\"refX\", getW);\n            set(\"markerWidth\", getW);\n            set(\"refY\", getH);\n            set(\"markerHeight\", getH);\n        break;\n        case \"radialGradient\":\n            set(\"fx\", getW);\n            set(\"fy\", getH);\n        break;\n        case \"tspan\":\n            set(\"dx\", getW);\n            set(\"dy\", getH);\n        break;\n        default:\n            set(name, getW);\n    }\n    svg.removeChild(mgr);\n    return out;\n}\n/*\\\n * Snap.select\n [ method ]\n **\n * Wraps a DOM element specified by CSS selector as @Element\n - query (string) CSS selector of the element\n = (Element) the current element\n\\*/\nSnap.select = function (query) {\n    query = Str(query).replace(/([^\\\\]):/g, \"$1\\\\:\");\n    return wrap(glob.doc.querySelector(query));\n};\n/*\\\n * Snap.selectAll\n [ method ]\n **\n * Wraps DOM elements specified by CSS selector as set or array of @Element\n - query (string) CSS selector of the element\n = (Element) the current element\n\\*/\nSnap.selectAll = function (query) {\n    var nodelist = glob.doc.querySelectorAll(query),\n        set = (Snap.set || Array)();\n    for (var i = 0; i < nodelist.length; i++) {\n        set.push(wrap(nodelist[i]));\n    }\n    return set;\n};\n\nfunction add2group(list) {\n    if (!is(list, \"array\")) {\n        list = Array.prototype.slice.call(arguments, 0);\n    }\n    var i = 0,\n        j = 0,\n        node = this.node;\n    while (this[i]) delete this[i++];\n    for (i = 0; i < list.length; i++) {\n        if (list[i].type == \"set\") {\n            list[i].forEach(function (el) {\n                node.appendChild(el.node);\n            });\n        } else {\n            node.appendChild(list[i].node);\n        }\n    }\n    var children = node.childNodes;\n    for (i = 0; i < children.length; i++) {\n        this[j++] = wrap(children[i]);\n    }\n    return this;\n}\n// Hub garbage collector every 10s\nsetInterval(function () {\n    for (var key in hub) if (hub[has](key)) {\n        var el = hub[key],\n            node = el.node;\n        if (el.type != \"svg\" && !node.ownerSVGElement || el.type == \"svg\" && (!node.parentNode || \"ownerSVGElement\" in node.parentNode && !node.ownerSVGElement)) {\n            delete hub[key];\n        }\n    }\n}, 1e4);\nfunction Element(el) {\n    if (el.snap in hub) {\n        return hub[el.snap];\n    }\n    var svg;\n    try {\n        svg = el.ownerSVGElement;\n    } catch(e) {}\n    /*\\\n     * Element.node\n     [ property (object) ]\n     **\n     * Gives you a reference to the DOM object, so you can assign event handlers or just mess around.\n     > Usage\n     | // draw a circle at coordinate 10,10 with radius of 10\n     | var c = paper.circle(10, 10, 10);\n     | c.node.onclick = function () {\n     |     c.attr(\"fill\", \"red\");\n     | };\n    \\*/\n    this.node = el;\n    if (svg) {\n        this.paper = new Paper(svg);\n    }\n    /*\\\n     * Element.type\n     [ property (string) ]\n     **\n     * SVG tag name of the given element.\n    \\*/\n    this.type = el.tagName || el.nodeName;\n    var id = this.id = ID(this);\n    this.anims = {};\n    this._ = {\n        transform: []\n    };\n    el.snap = id;\n    hub[id] = this;\n    if (this.type == \"g\") {\n        this.add = add2group;\n    }\n    if (this.type in {g: 1, mask: 1, pattern: 1, symbol: 1}) {\n        for (var method in Paper.prototype) if (Paper.prototype[has](method)) {\n            this[method] = Paper.prototype[method];\n        }\n    }\n}\n   /*\\\n     * Element.attr\n     [ method ]\n     **\n     * Gets or sets given attributes of the element.\n     **\n     - params (object) contains key-value pairs of attributes you want to set\n     * or\n     - param (string) name of the attribute\n     = (Element) the current element\n     * or\n     = (string) value of attribute\n     > Usage\n     | el.attr({\n     |     fill: \"#fc0\",\n     |     stroke: \"#000\",\n     |     strokeWidth: 2, // CamelCase...\n     |     \"fill-opacity\": 0.5, // or dash-separated names\n     |     width: \"*=2\" // prefixed values\n     | });\n     | console.log(el.attr(\"fill\")); // #fc0\n     * Prefixed values in format `\"+=10\"` supported. All four operations\n     * (`+`, `-`, `*` and `/`) could be used. Optionally you can use units for `+`\n     * and `-`: `\"+=2em\"`.\n    \\*/\n    Element.prototype.attr = function (params, value) {\n        var el = this,\n            node = el.node;\n        if (!params) {\n            if (node.nodeType != 1) {\n                return {\n                    text: node.nodeValue\n                };\n            }\n            var attr = node.attributes,\n                out = {};\n            for (var i = 0, ii = attr.length; i < ii; i++) {\n                out[attr[i].nodeName] = attr[i].nodeValue;\n            }\n            return out;\n        }\n        if (is(params, \"string\")) {\n            if (arguments.length > 1) {\n                var json = {};\n                json[params] = value;\n                params = json;\n            } else {\n                return eve(\"snap.util.getattr.\" + params, el).firstDefined();\n            }\n        }\n        for (var att in params) {\n            if (params[has](att)) {\n                eve(\"snap.util.attr.\" + att, el, params[att]);\n            }\n        }\n        return el;\n    };\n/*\\\n * Snap.parse\n [ method ]\n **\n * Parses SVG fragment and converts it into a @Fragment\n **\n - svg (string) SVG string\n = (Fragment) the @Fragment\n\\*/\nSnap.parse = function (svg) {\n    var f = glob.doc.createDocumentFragment(),\n        full = true,\n        div = glob.doc.createElement(\"div\");\n    svg = Str(svg);\n    if (!svg.match(/^\\s*<\\s*svg(?:\\s|>)/)) {\n        svg = \"<svg>\" + svg + \"</svg>\";\n        full = false;\n    }\n    div.innerHTML = svg;\n    svg = div.getElementsByTagName(\"svg\")[0];\n    if (svg) {\n        if (full) {\n            f = svg;\n        } else {\n            while (svg.firstChild) {\n                f.appendChild(svg.firstChild);\n            }\n        }\n    }\n    return new Fragment(f);\n};\nfunction Fragment(frag) {\n    this.node = frag;\n}\n/*\\\n * Snap.fragment\n [ method ]\n **\n * Creates a DOM fragment from a given list of elements or strings\n **\n - varargs (…) SVG string\n = (Fragment) the @Fragment\n\\*/\nSnap.fragment = function () {\n    var args = Array.prototype.slice.call(arguments, 0),\n        f = glob.doc.createDocumentFragment();\n    for (var i = 0, ii = args.length; i < ii; i++) {\n        var item = args[i];\n        if (item.node && item.node.nodeType) {\n            f.appendChild(item.node);\n        }\n        if (item.nodeType) {\n            f.appendChild(item);\n        }\n        if (typeof item == \"string\") {\n            f.appendChild(Snap.parse(item).node);\n        }\n    }\n    return new Fragment(f);\n};\n\nfunction make(name, parent) {\n    var res = $(name);\n    parent.appendChild(res);\n    var el = wrap(res);\n    return el;\n}\nfunction Paper(w, h) {\n    var res,\n        desc,\n        defs,\n        proto = Paper.prototype;\n    if (w && w.tagName == \"svg\") {\n        if (w.snap in hub) {\n            return hub[w.snap];\n        }\n        var doc = w.ownerDocument;\n        res = new Element(w);\n        desc = w.getElementsByTagName(\"desc\")[0];\n        defs = w.getElementsByTagName(\"defs\")[0];\n        if (!desc) {\n            desc = $(\"desc\");\n            desc.appendChild(doc.createTextNode(\"Created with Snap\"));\n            res.node.appendChild(desc);\n        }\n        if (!defs) {\n            defs = $(\"defs\");\n            res.node.appendChild(defs);\n        }\n        res.defs = defs;\n        for (var key in proto) if (proto[has](key)) {\n            res[key] = proto[key];\n        }\n        res.paper = res.root = res;\n    } else {\n        res = make(\"svg\", glob.doc.body);\n        $(res.node, {\n            height: h,\n            version: 1.1,\n            width: w,\n            xmlns: xmlns\n        });\n    }\n    return res;\n}\nfunction wrap(dom) {\n    if (!dom) {\n        return dom;\n    }\n    if (dom instanceof Element || dom instanceof Fragment) {\n        return dom;\n    }\n    if (dom.tagName && dom.tagName.toLowerCase() == \"svg\") {\n        return new Paper(dom);\n    }\n    if (dom.tagName && dom.tagName.toLowerCase() == \"object\" && dom.type == \"image/svg+xml\") {\n        return new Paper(dom.contentDocument.getElementsByTagName(\"svg\")[0]);\n    }\n    return new Element(dom);\n}\n\nSnap._.make = make;\nSnap._.wrap = wrap;\n/*\\\n * Paper.el\n [ method ]\n **\n * Creates an element on paper with a given name and no attributes\n **\n - name (string) tag name\n - attr (object) attributes\n = (Element) the current element\n > Usage\n | var c = paper.circle(10, 10, 10); // is the same as...\n | var c = paper.el(\"circle\").attr({\n |     cx: 10,\n |     cy: 10,\n |     r: 10\n | });\n | // and the same as\n | var c = paper.el(\"circle\", {\n |     cx: 10,\n |     cy: 10,\n |     r: 10\n | });\n\\*/\nPaper.prototype.el = function (name, attr) {\n    var el = make(name, this.node);\n    attr && el.attr(attr);\n    return el;\n};\n/*\\\n * Element.children\n [ method ]\n **\n * Returns array of all the children of the element.\n = (array) array of Elements\n\\*/\nElement.prototype.children = function () {\n    var out = [],\n        ch = this.node.childNodes;\n    for (var i = 0, ii = ch.length; i < ii; i++) {\n        out[i] = Snap(ch[i]);\n    }\n    return out;\n};\nfunction jsonFiller(root, o) {\n    for (var i = 0, ii = root.length; i < ii; i++) {\n        var item = {\n                type: root[i].type,\n                attr: root[i].attr()\n            },\n            children = root[i].children();\n        o.push(item);\n        if (children.length) {\n            jsonFiller(children, item.childNodes = []);\n        }\n    }\n}\n/*\\\n * Element.toJSON\n [ method ]\n **\n * Returns object representation of the given element and all its children.\n = (object) in format\n o {\n o     type (string) this.type,\n o     attr (object) attributes map,\n o     childNodes (array) optional array of children in the same format\n o }\n\\*/\nElement.prototype.toJSON = function () {\n    var out = [];\n    jsonFiller([this], out);\n    return out[0];\n};\n// default\neve.on(\"snap.util.getattr\", function () {\n    var att = eve.nt();\n    att = att.substring(att.lastIndexOf(\".\") + 1);\n    var css = att.replace(/[A-Z]/g, function (letter) {\n        return \"-\" + letter.toLowerCase();\n    });\n    if (cssAttr[has](css)) {\n        return this.node.ownerDocument.defaultView.getComputedStyle(this.node, null).getPropertyValue(css);\n    } else {\n        return $(this.node, att);\n    }\n});\nvar cssAttr = {\n    \"alignment-baseline\": 0,\n    \"baseline-shift\": 0,\n    \"clip\": 0,\n    \"clip-path\": 0,\n    \"clip-rule\": 0,\n    \"color\": 0,\n    \"color-interpolation\": 0,\n    \"color-interpolation-filters\": 0,\n    \"color-profile\": 0,\n    \"color-rendering\": 0,\n    \"cursor\": 0,\n    \"direction\": 0,\n    \"display\": 0,\n    \"dominant-baseline\": 0,\n    \"enable-background\": 0,\n    \"fill\": 0,\n    \"fill-opacity\": 0,\n    \"fill-rule\": 0,\n    \"filter\": 0,\n    \"flood-color\": 0,\n    \"flood-opacity\": 0,\n    \"font\": 0,\n    \"font-family\": 0,\n    \"font-size\": 0,\n    \"font-size-adjust\": 0,\n    \"font-stretch\": 0,\n    \"font-style\": 0,\n    \"font-variant\": 0,\n    \"font-weight\": 0,\n    \"glyph-orientation-horizontal\": 0,\n    \"glyph-orientation-vertical\": 0,\n    \"image-rendering\": 0,\n    \"kerning\": 0,\n    \"letter-spacing\": 0,\n    \"lighting-color\": 0,\n    \"marker\": 0,\n    \"marker-end\": 0,\n    \"marker-mid\": 0,\n    \"marker-start\": 0,\n    \"mask\": 0,\n    \"opacity\": 0,\n    \"overflow\": 0,\n    \"pointer-events\": 0,\n    \"shape-rendering\": 0,\n    \"stop-color\": 0,\n    \"stop-opacity\": 0,\n    \"stroke\": 0,\n    \"stroke-dasharray\": 0,\n    \"stroke-dashoffset\": 0,\n    \"stroke-linecap\": 0,\n    \"stroke-linejoin\": 0,\n    \"stroke-miterlimit\": 0,\n    \"stroke-opacity\": 0,\n    \"stroke-width\": 0,\n    \"text-anchor\": 0,\n    \"text-decoration\": 0,\n    \"text-rendering\": 0,\n    \"unicode-bidi\": 0,\n    \"visibility\": 0,\n    \"word-spacing\": 0,\n    \"writing-mode\": 0\n};\n\neve.on(\"snap.util.attr\", function (value) {\n    var att = eve.nt(),\n        attr = {};\n    att = att.substring(att.lastIndexOf(\".\") + 1);\n    attr[att] = value;\n    var style = att.replace(/-(\\w)/gi, function (all, letter) {\n            return letter.toUpperCase();\n        }),\n        css = att.replace(/[A-Z]/g, function (letter) {\n            return \"-\" + letter.toLowerCase();\n        });\n    if (cssAttr[has](css)) {\n        this.node.style[style] = value == null ? E : value;\n    } else {\n        $(this.node, attr);\n    }\n});\n(function (proto) {}(Paper.prototype));\n\n// simple ajax\n/*\\\n * Snap.ajax\n [ method ]\n **\n * Simple implementation of Ajax\n **\n - url (string) URL\n - postData (object|string) data for post request\n - callback (function) callback\n - scope (object) #optional scope of callback\n * or\n - url (string) URL\n - callback (function) callback\n - scope (object) #optional scope of callback\n = (XMLHttpRequest) the XMLHttpRequest object, just in case\n\\*/\nSnap.ajax = function (url, postData, callback, scope){\n    var req = new XMLHttpRequest,\n        id = ID();\n    if (req) {\n        if (is(postData, \"function\")) {\n            scope = callback;\n            callback = postData;\n            postData = null;\n        } else if (is(postData, \"object\")) {\n            var pd = [];\n            for (var key in postData) if (postData.hasOwnProperty(key)) {\n                pd.push(encodeURIComponent(key) + \"=\" + encodeURIComponent(postData[key]));\n            }\n            postData = pd.join(\"&\");\n        }\n        req.open((postData ? \"POST\" : \"GET\"), url, true);\n        if (postData) {\n            req.setRequestHeader(\"X-Requested-With\", \"XMLHttpRequest\");\n            req.setRequestHeader(\"Content-type\", \"application/x-www-form-urlencoded\");\n        }\n        if (callback) {\n            eve.once(\"snap.ajax.\" + id + \".0\", callback);\n            eve.once(\"snap.ajax.\" + id + \".200\", callback);\n            eve.once(\"snap.ajax.\" + id + \".304\", callback);\n        }\n        req.onreadystatechange = function() {\n            if (req.readyState != 4) return;\n            eve(\"snap.ajax.\" + id + \".\" + req.status, scope, req);\n        };\n        if (req.readyState == 4) {\n            return req;\n        }\n        req.send(postData);\n        return req;\n    }\n};\n/*\\\n * Snap.load\n [ method ]\n **\n * Loads external SVG file as a @Fragment (see @Snap.ajax for more advanced AJAX)\n **\n - url (string) URL\n - callback (function) callback\n - scope (object) #optional scope of callback\n\\*/\nSnap.load = function (url, callback, scope) {\n    Snap.ajax(url, function (req) {\n        var f = Snap.parse(req.responseText);\n        scope ? callback.call(scope, f) : callback(f);\n    });\n};\nvar getOffset = function (elem) {\n    var box = elem.getBoundingClientRect(),\n        doc = elem.ownerDocument,\n        body = doc.body,\n        docElem = doc.documentElement,\n        clientTop = docElem.clientTop || body.clientTop || 0, clientLeft = docElem.clientLeft || body.clientLeft || 0,\n        top  = box.top  + (g.win.pageYOffset || docElem.scrollTop || body.scrollTop ) - clientTop,\n        left = box.left + (g.win.pageXOffset || docElem.scrollLeft || body.scrollLeft) - clientLeft;\n    return {\n        y: top,\n        x: left\n    };\n};\n/*\\\n * Snap.getElementByPoint\n [ method ]\n **\n * Returns you topmost element under given point.\n **\n = (object) Snap element object\n - x (number) x coordinate from the top left corner of the window\n - y (number) y coordinate from the top left corner of the window\n > Usage\n | Snap.getElementByPoint(mouseX, mouseY).attr({stroke: \"#f00\"});\n\\*/\nSnap.getElementByPoint = function (x, y) {\n    var paper = this,\n        svg = paper.canvas,\n        target = glob.doc.elementFromPoint(x, y);\n    if (glob.win.opera && target.tagName == \"svg\") {\n        var so = getOffset(target),\n            sr = target.createSVGRect();\n        sr.x = x - so.x;\n        sr.y = y - so.y;\n        sr.width = sr.height = 1;\n        var hits = target.getIntersectionList(sr, null);\n        if (hits.length) {\n            target = hits[hits.length - 1];\n        }\n    }\n    if (!target) {\n        return null;\n    }\n    return wrap(target);\n};\n/*\\\n * Snap.plugin\n [ method ]\n **\n * Let you write plugins. You pass in a function with five arguments, like this:\n | Snap.plugin(function (Snap, Element, Paper, global, Fragment) {\n |     Snap.newmethod = function () {};\n |     Element.prototype.newmethod = function () {};\n |     Paper.prototype.newmethod = function () {};\n | });\n * Inside the function you have access to all main objects (and their\n * prototypes). This allow you to extend anything you want.\n **\n - f (function) your plugin body\n\\*/\nSnap.plugin = function (f) {\n    f(Snap, Element, Paper, glob, Fragment);\n};\nglob.win.Snap = Snap;\nreturn Snap;\n}(window || this));\n\n// Copyright (c) 2013 Adobe Systems Incorporated. All rights reserved.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n// http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\nSnap.plugin(function (Snap, Element, Paper, glob, Fragment) {\n    var elproto = Element.prototype,\n        is = Snap.is,\n        Str = String,\n        unit2px = Snap._unit2px,\n        $ = Snap._.$,\n        make = Snap._.make,\n        getSomeDefs = Snap._.getSomeDefs,\n        has = \"hasOwnProperty\",\n        wrap = Snap._.wrap;\n    /*\\\n     * Element.getBBox\n     [ method ]\n     **\n     * Returns the bounding box descriptor for the given element\n     **\n     = (object) bounding box descriptor:\n     o {\n     o     cx: (number) x of the center,\n     o     cy: (number) x of the center,\n     o     h: (number) height,\n     o     height: (number) height,\n     o     path: (string) path command for the box,\n     o     r0: (number) radius of a circle that fully encloses the box,\n     o     r1: (number) radius of the smallest circle that can be enclosed,\n     o     r2: (number) radius of the largest circle that can be enclosed,\n     o     vb: (string) box as a viewbox command,\n     o     w: (number) width,\n     o     width: (number) width,\n     o     x2: (number) x of the right side,\n     o     x: (number) x of the left side,\n     o     y2: (number) y of the bottom edge,\n     o     y: (number) y of the top edge\n     o }\n    \\*/\n    elproto.getBBox = function (isWithoutTransform) {\n        if (!Snap.Matrix || !Snap.path) {\n            return this.node.getBBox();\n        }\n        var el = this,\n            m = new Snap.Matrix;\n        if (el.removed) {\n            return Snap._.box();\n        }\n        while (el.type == \"use\") {\n            if (!isWithoutTransform) {\n                m = m.add(el.transform().localMatrix.translate(el.attr(\"x\") || 0, el.attr(\"y\") || 0));\n            }\n            if (el.original) {\n                el = el.original;\n            } else {\n                var href = el.attr(\"xlink:href\");\n                el = el.original = el.node.ownerDocument.getElementById(href.substring(href.indexOf(\"#\") + 1));\n            }\n        }\n        var _ = el._,\n            pathfinder = Snap.path.get[el.type] || Snap.path.get.deflt;\n        try {\n            if (isWithoutTransform) {\n                _.bboxwt = pathfinder ? Snap.path.getBBox(el.realPath = pathfinder(el)) : Snap._.box(el.node.getBBox());\n                return Snap._.box(_.bboxwt);\n            } else {\n                el.realPath = pathfinder(el);\n                el.matrix = el.transform().localMatrix;\n                _.bbox = Snap.path.getBBox(Snap.path.map(el.realPath, m.add(el.matrix)));\n                return Snap._.box(_.bbox);\n            }\n        } catch (e) {\n            // Firefox doesn’t give you bbox of hidden element\n            return Snap._.box();\n        }\n    };\n    var propString = function () {\n        return this.string;\n    };\n    function extractTransform(el, tstr) {\n        if (tstr == null) {\n            var doReturn = true;\n            if (el.type == \"linearGradient\" || el.type == \"radialGradient\") {\n                tstr = el.node.getAttribute(\"gradientTransform\");\n            } else if (el.type == \"pattern\") {\n                tstr = el.node.getAttribute(\"patternTransform\");\n            } else {\n                tstr = el.node.getAttribute(\"transform\");\n            }\n            if (!tstr) {\n                return new Snap.Matrix;\n            }\n            tstr = Snap._.svgTransform2string(tstr);\n        } else {\n            if (!Snap._.rgTransform.test(tstr)) {\n                tstr = Snap._.svgTransform2string(tstr);\n            } else {\n                tstr = Str(tstr).replace(/\\.{3}|\\u2026/g, el._.transform || E);\n            }\n            if (is(tstr, \"array\")) {\n                tstr = Snap.path ? Snap.path.toString.call(tstr) : Str(tstr);\n            }\n            el._.transform = tstr;\n        }\n        var m = Snap._.transform2matrix(tstr, el.getBBox(1));\n        if (doReturn) {\n            return m;\n        } else {\n            el.matrix = m;\n        }\n    }\n    /*\\\n     * Element.transform\n     [ method ]\n     **\n     * Gets or sets transformation of the element\n     **\n     - tstr (string) transform string in Snap or SVG format\n     = (Element) the current element\n     * or\n     = (object) transformation descriptor:\n     o {\n     o     string (string) transform string,\n     o     globalMatrix (Matrix) matrix of all transformations applied to element or its parents,\n     o     localMatrix (Matrix) matrix of transformations applied only to the element,\n     o     diffMatrix (Matrix) matrix of difference between global and local transformations,\n     o     global (string) global transformation as string,\n     o     local (string) local transformation as string,\n     o     toString (function) returns `string` property\n     o }\n    \\*/\n    elproto.transform = function (tstr) {\n        var _ = this._;\n        if (tstr == null) {\n            var papa = this,\n                global = new Snap.Matrix(this.node.getCTM()),\n                local = extractTransform(this),\n                ms = [local],\n                m = new Snap.Matrix,\n                i,\n                localString = local.toTransformString(),\n                string = Str(local) == Str(this.matrix) ?\n                            Str(_.transform) : localString;\n            while (papa.type != \"svg\" && (papa = papa.parent())) {\n                ms.push(extractTransform(papa));\n            }\n            i = ms.length;\n            while (i--) {\n                m.add(ms[i]);\n            }\n            return {\n                string: string,\n                globalMatrix: global,\n                totalMatrix: m,\n                localMatrix: local,\n                diffMatrix: global.clone().add(local.invert()),\n                global: global.toTransformString(),\n                total: m.toTransformString(),\n                local: localString,\n                toString: propString\n            };\n        }\n        if (tstr instanceof Snap.Matrix) {\n            this.matrix = tstr;\n            this._.transform = tstr.toTransformString();\n        } else {\n            extractTransform(this, tstr);\n        }\n\n        if (this.node) {\n            if (this.type == \"linearGradient\" || this.type == \"radialGradient\") {\n                $(this.node, {gradientTransform: this.matrix});\n            } else if (this.type == \"pattern\") {\n                $(this.node, {patternTransform: this.matrix});\n            } else {\n                $(this.node, {transform: this.matrix});\n            }\n        }\n\n        return this;\n    };\n    /*\\\n     * Element.parent\n     [ method ]\n     **\n     * Returns the element's parent\n     **\n     = (Element) the parent element\n    \\*/\n    elproto.parent = function () {\n        return wrap(this.node.parentNode);\n    };\n    /*\\\n     * Element.append\n     [ method ]\n     **\n     * Appends the given element to current one\n     **\n     - el (Element|Set) element to append\n     = (Element) the parent element\n    \\*/\n    /*\\\n     * Element.add\n     [ method ]\n     **\n     * See @Element.append\n    \\*/\n    elproto.append = elproto.add = function (el) {\n        if (el) {\n            if (el.type == \"set\") {\n                var it = this;\n                el.forEach(function (el) {\n                    it.add(el);\n                });\n                return this;\n            }\n            el = wrap(el);\n            this.node.appendChild(el.node);\n            el.paper = this.paper;\n        }\n        return this;\n    };\n    /*\\\n     * Element.appendTo\n     [ method ]\n     **\n     * Appends the current element to the given one\n     **\n     - el (Element) parent element to append to\n     = (Element) the child element\n    \\*/\n    elproto.appendTo = function (el) {\n        if (el) {\n            el = wrap(el);\n            el.append(this);\n        }\n        return this;\n    };\n    /*\\\n     * Element.prepend\n     [ method ]\n     **\n     * Prepends the given element to the current one\n     **\n     - el (Element) element to prepend\n     = (Element) the parent element\n    \\*/\n    elproto.prepend = function (el) {\n        if (el) {\n            if (el.type == \"set\") {\n                var it = this,\n                    first;\n                el.forEach(function (el) {\n                    if (first) {\n                        first.after(el);\n                    } else {\n                        it.prepend(el);\n                    }\n                    first = el;\n                });\n                return this;\n            }\n            el = wrap(el);\n            var parent = el.parent();\n            this.node.insertBefore(el.node, this.node.firstChild);\n            this.add && this.add();\n            el.paper = this.paper;\n            this.parent() && this.parent().add();\n            parent && parent.add();\n        }\n        return this;\n    };\n    /*\\\n     * Element.prependTo\n     [ method ]\n     **\n     * Prepends the current element to the given one\n     **\n     - el (Element) parent element to prepend to\n     = (Element) the child element\n    \\*/\n    elproto.prependTo = function (el) {\n        el = wrap(el);\n        el.prepend(this);\n        return this;\n    };\n    /*\\\n     * Element.before\n     [ method ]\n     **\n     * Inserts given element before the current one\n     **\n     - el (Element) element to insert\n     = (Element) the parent element\n    \\*/\n    elproto.before = function (el) {\n        if (el.type == \"set\") {\n            var it = this;\n            el.forEach(function (el) {\n                var parent = el.parent();\n                it.node.parentNode.insertBefore(el.node, it.node);\n                parent && parent.add();\n            });\n            this.parent().add();\n            return this;\n        }\n        el = wrap(el);\n        var parent = el.parent();\n        this.node.parentNode.insertBefore(el.node, this.node);\n        this.parent() && this.parent().add();\n        parent && parent.add();\n        el.paper = this.paper;\n        return this;\n    };\n    /*\\\n     * Element.after\n     [ method ]\n     **\n     * Inserts given element after the current one\n     **\n     - el (Element) element to insert\n     = (Element) the parent element\n    \\*/\n    elproto.after = function (el) {\n        el = wrap(el);\n        var parent = el.parent();\n        if (this.node.nextSibling) {\n            this.node.parentNode.insertBefore(el.node, this.node.nextSibling);\n        } else {\n            this.node.parentNode.appendChild(el.node);\n        }\n        this.parent() && this.parent().add();\n        parent && parent.add();\n        el.paper = this.paper;\n        return this;\n    };\n    /*\\\n     * Element.insertBefore\n     [ method ]\n     **\n     * Inserts the element after the given one\n     **\n     - el (Element) element next to whom insert to\n     = (Element) the parent element\n    \\*/\n    elproto.insertBefore = function (el) {\n        el = wrap(el);\n        var parent = this.parent();\n        el.node.parentNode.insertBefore(this.node, el.node);\n        this.paper = el.paper;\n        parent && parent.add();\n        el.parent() && el.parent().add();\n        return this;\n    };\n    /*\\\n     * Element.insertAfter\n     [ method ]\n     **\n     * Inserts the element after the given one\n     **\n     - el (Element) element next to whom insert to\n     = (Element) the parent element\n    \\*/\n    elproto.insertAfter = function (el) {\n        el = wrap(el);\n        var parent = this.parent();\n        el.node.parentNode.insertBefore(this.node, el.node.nextSibling);\n        this.paper = el.paper;\n        parent && parent.add();\n        el.parent() && el.parent().add();\n        return this;\n    };\n    /*\\\n     * Element.remove\n     [ method ]\n     **\n     * Removes element from the DOM\n     = (Element) the detached element\n    \\*/\n    elproto.remove = function () {\n        var parent = this.parent();\n        this.node.parentNode && this.node.parentNode.removeChild(this.node);\n        delete this.paper;\n        this.removed = true;\n        parent && parent.add();\n        return this;\n    };\n    /*\\\n     * Element.select\n     [ method ]\n     **\n     * Gathers the nested @Element matching the given set of CSS selectors\n     **\n     - query (string) CSS selector\n     = (Element) result of query selection\n    \\*/\n    elproto.select = function (query) {\n        query = Str(query).replace(/([^\\\\]):/g, \"$1\\\\:\");\n        return wrap(this.node.querySelector(query));\n    };\n    /*\\\n     * Element.selectAll\n     [ method ]\n     **\n     * Gathers nested @Element objects matching the given set of CSS selectors\n     **\n     - query (string) CSS selector\n     = (Set|array) result of query selection\n    \\*/\n    elproto.selectAll = function (query) {\n        var nodelist = this.node.querySelectorAll(query),\n            set = (Snap.set || Array)();\n        for (var i = 0; i < nodelist.length; i++) {\n            set.push(wrap(nodelist[i]));\n        }\n        return set;\n    };\n    /*\\\n     * Element.asPX\n     [ method ]\n     **\n     * Returns given attribute of the element as a `px` value (not %, em, etc.)\n     **\n     - attr (string) attribute name\n     - value (string) #optional attribute value\n     = (Element) result of query selection\n    \\*/\n    elproto.asPX = function (attr, value) {\n        if (value == null) {\n            value = this.attr(attr);\n        }\n        return +unit2px(this, attr, value);\n    };\n    // SIERRA Element.use(): I suggest adding a note about how to access the original element the returned <use> instantiates. It's a part of SVG with which ordinary web developers may be least familiar.\n    /*\\\n     * Element.use\n     [ method ]\n     **\n     * Creates a `<use>` element linked to the current element\n     **\n     = (Element) the `<use>` element\n    \\*/\n    elproto.use = function () {\n        var use,\n            id = this.node.id;\n        if (!id) {\n            id = this.id;\n            $(this.node, {\n                id: id\n            });\n        }\n        if (this.type == \"linearGradient\" || this.type == \"radialGradient\" ||\n            this.type == \"pattern\") {\n            use = make(this.type, this.node.parentNode);\n        } else {\n            use = make(\"use\", this.node.parentNode);\n        }\n        $(use.node, {\n            \"xlink:href\": \"#\" + id\n        });\n        use.original = this;\n        return use;\n    };\n    function fixids(el) {\n        var els = el.selectAll(\"*\"),\n            it,\n            url = /^\\s*url\\((\"|'|)(.*)\\1\\)\\s*$/,\n            ids = [],\n            uses = {};\n        function urltest(it, name) {\n            var val = $(it.node, name);\n            val = val && val.match(url);\n            val = val && val[2];\n            if (val && val.charAt() == \"#\") {\n                val = val.substring(1);\n            } else {\n                return;\n            }\n            if (val) {\n                uses[val] = (uses[val] || []).concat(function (id) {\n                    var attr = {};\n                    attr[name] = URL(id);\n                    $(it.node, attr);\n                });\n            }\n        }\n        function linktest(it) {\n            var val = $(it.node, \"xlink:href\");\n            if (val && val.charAt() == \"#\") {\n                val = val.substring(1);\n            } else {\n                return;\n            }\n            if (val) {\n                uses[val] = (uses[val] || []).concat(function (id) {\n                    it.attr(\"xlink:href\", \"#\" + id);\n                });\n            }\n        }\n        for (var i = 0, ii = els.length; i < ii; i++) {\n            it = els[i];\n            urltest(it, \"fill\");\n            urltest(it, \"stroke\");\n            urltest(it, \"filter\");\n            urltest(it, \"mask\");\n            urltest(it, \"clip-path\");\n            linktest(it);\n            var oldid = $(it.node, \"id\");\n            if (oldid) {\n                $(it.node, {id: it.id});\n                ids.push({\n                    old: oldid,\n                    id: it.id\n                });\n            }\n        }\n        for (i = 0, ii = ids.length; i < ii; i++) {\n            var fs = uses[ids[i].old];\n            if (fs) {\n                for (var j = 0, jj = fs.length; j < jj; j++) {\n                    fs[j](ids[i].id);\n                }\n            }\n        }\n    }\n    /*\\\n     * Element.clone\n     [ method ]\n     **\n     * Creates a clone of the element and inserts it after the element\n     **\n     = (Element) the clone\n    \\*/\n    elproto.clone = function () {\n        var clone = wrap(this.node.cloneNode(true));\n        if ($(clone.node, \"id\")) {\n            $(clone.node, {id: clone.id});\n        }\n        fixids(clone);\n        clone.insertAfter(this);\n        return clone;\n    };\n    /*\\\n     * Element.toDefs\n     [ method ]\n     **\n     * Moves element to the shared `<defs>` area\n     **\n     = (Element) the element\n    \\*/\n    elproto.toDefs = function () {\n        var defs = getSomeDefs(this);\n        defs.appendChild(this.node);\n        return this;\n    };\n    /*\\\n     * Element.toPattern\n     [ method ]\n     **\n     * Creates a `<pattern>` element from the current element\n     **\n     * To create a pattern you have to specify the pattern rect:\n     - x (string|number)\n     - y (string|number)\n     - width (string|number)\n     - height (string|number)\n     = (Element) the `<pattern>` element\n     * You can use pattern later on as an argument for `fill` attribute:\n     | var p = paper.path(\"M10-5-10,15M15,0,0,15M0-5-20,15\").attr({\n     |         fill: \"none\",\n     |         stroke: \"#bada55\",\n     |         strokeWidth: 5\n     |     }).pattern(0, 0, 10, 10),\n     |     c = paper.circle(200, 200, 100);\n     | c.attr({\n     |     fill: p\n     | });\n    \\*/\n    elproto.pattern = elproto.toPattern = function (x, y, width, height) {\n        var p = make(\"pattern\", getSomeDefs(this));\n        if (x == null) {\n            x = this.getBBox();\n        }\n        if (is(x, \"object\") && \"x\" in x) {\n            y = x.y;\n            width = x.width;\n            height = x.height;\n            x = x.x;\n        }\n        $(p.node, {\n            x: x,\n            y: y,\n            width: width,\n            height: height,\n            patternUnits: \"userSpaceOnUse\",\n            id: p.id,\n            viewBox: [x, y, width, height].join(\" \")\n        });\n        p.node.appendChild(this.node);\n        return p;\n    };\n// SIERRA Element.marker(): clarify what a reference point is. E.g., helps you offset the object from its edge such as when centering it over a path.\n// SIERRA Element.marker(): I suggest the method should accept default reference point values.  Perhaps centered with (refX = width/2) and (refY = height/2)? Also, couldn't it assume the element's current _width_ and _height_? And please specify what _x_ and _y_ mean: offsets? If so, from where?  Couldn't they also be assigned default values?\n    /*\\\n     * Element.marker\n     [ method ]\n     **\n     * Creates a `<marker>` element from the current element\n     **\n     * To create a marker you have to specify the bounding rect and reference point:\n     - x (number)\n     - y (number)\n     - width (number)\n     - height (number)\n     - refX (number)\n     - refY (number)\n     = (Element) the `<marker>` element\n     * You can specify the marker later as an argument for `marker-start`, `marker-end`, `marker-mid`, and `marker` attributes. The `marker` attribute places the marker at every point along the path, and `marker-mid` places them at every point except the start and end.\n    \\*/\n    // TODO add usage for markers\n    elproto.marker = function (x, y, width, height, refX, refY) {\n        var p = make(\"marker\", getSomeDefs(this));\n        if (x == null) {\n            x = this.getBBox();\n        }\n        if (is(x, \"object\") && \"x\" in x) {\n            y = x.y;\n            width = x.width;\n            height = x.height;\n            refX = x.refX || x.cx;\n            refY = x.refY || x.cy;\n            x = x.x;\n        }\n        $(p.node, {\n            viewBox: [x, y, width, height].join(\" \"),\n            markerWidth: width,\n            markerHeight: height,\n            orient: \"auto\",\n            refX: refX || 0,\n            refY: refY || 0,\n            id: p.id\n        });\n        p.node.appendChild(this.node);\n        return p;\n    };\n    // animation\n    function slice(from, to, f) {\n        return function (arr) {\n            var res = arr.slice(from, to);\n            if (res.length == 1) {\n                res = res[0];\n            }\n            return f ? f(res) : res;\n        };\n    }\n    var Animation = function (attr, ms, easing, callback) {\n        if (typeof easing == \"function\" && !easing.length) {\n            callback = easing;\n            easing = mina.linear;\n        }\n        this.attr = attr;\n        this.dur = ms;\n        easing && (this.easing = easing);\n        callback && (this.callback = callback);\n    };\n    Snap._.Animation = Animation;\n    /*\\\n     * Snap.animation\n     [ method ]\n     **\n     * Creates an animation object\n     **\n     - attr (object) attributes of final destination\n     - duration (number) duration of the animation, in milliseconds\n     - easing (function) #optional one of easing functions of @mina or custom one\n     - callback (function) #optional callback function that fires when animation ends\n     = (object) animation object\n    \\*/\n    Snap.animation = function (attr, ms, easing, callback) {\n        return new Animation(attr, ms, easing, callback);\n    };\n    /*\\\n     * Element.inAnim\n     [ method ]\n     **\n     * Returns a set of animations that may be able to manipulate the current element\n     **\n     = (object) in format:\n     o {\n     o     anim (object) animation object,\n     o     mina (object) @mina object,\n     o     curStatus (number) 0..1 — status of the animation: 0 — just started, 1 — just finished,\n     o     status (function) gets or sets the status of the animation,\n     o     stop (function) stops the animation\n     o }\n    \\*/\n    elproto.inAnim = function () {\n        var el = this,\n            res = [];\n        for (var id in el.anims) if (el.anims[has](id)) {\n            (function (a) {\n                res.push({\n                    anim: new Animation(a._attrs, a.dur, a.easing, a._callback),\n                    mina: a,\n                    curStatus: a.status(),\n                    status: function (val) {\n                        return a.status(val);\n                    },\n                    stop: function () {\n                        a.stop();\n                    }\n                });\n            }(el.anims[id]));\n        }\n        return res;\n    };\n    /*\\\n     * Snap.animate\n     [ method ]\n     **\n     * Runs generic animation of one number into another with a caring function\n     **\n     - from (number|array) number or array of numbers\n     - to (number|array) number or array of numbers\n     - setter (function) caring function that accepts one number argument\n     - duration (number) duration, in milliseconds\n     - easing (function) #optional easing function from @mina or custom\n     - callback (function) #optional callback function to execute when animation ends\n     = (object) animation object in @mina format\n     o {\n     o     id (string) animation id, consider it read-only,\n     o     duration (function) gets or sets the duration of the animation,\n     o     easing (function) easing,\n     o     speed (function) gets or sets the speed of the animation,\n     o     status (function) gets or sets the status of the animation,\n     o     stop (function) stops the animation\n     o }\n     | var rect = Snap().rect(0, 0, 10, 10);\n     | Snap.animate(0, 10, function (val) {\n     |     rect.attr({\n     |         x: val\n     |     });\n     | }, 1000);\n     | // in given context is equivalent to\n     | rect.animate({x: 10}, 1000);\n    \\*/\n    Snap.animate = function (from, to, setter, ms, easing, callback) {\n        if (typeof easing == \"function\" && !easing.length) {\n            callback = easing;\n            easing = mina.linear;\n        }\n        var now = mina.time(),\n            anim = mina(from, to, now, now + ms, mina.time, setter, easing);\n        callback && eve.once(\"mina.finish.\" + anim.id, callback);\n        return anim;\n    };\n    /*\\\n     * Element.stop\n     [ method ]\n     **\n     * Stops all the animations for the current element\n     **\n     = (Element) the current element\n    \\*/\n    elproto.stop = function () {\n        var anims = this.inAnim();\n        for (var i = 0, ii = anims.length; i < ii; i++) {\n            anims[i].stop();\n        }\n        return this;\n    };\n    /*\\\n     * Element.animate\n     [ method ]\n     **\n     * Animates the given attributes of the element\n     **\n     - attrs (object) key-value pairs of destination attributes\n     - duration (number) duration of the animation in milliseconds\n     - easing (function) #optional easing function from @mina or custom\n     - callback (function) #optional callback function that executes when the animation ends\n     = (Element) the current element\n    \\*/\n    elproto.animate = function (attrs, ms, easing, callback) {\n        if (typeof easing == \"function\" && !easing.length) {\n            callback = easing;\n            easing = mina.linear;\n        }\n        if (attrs instanceof Animation) {\n            callback = attrs.callback;\n            easing = attrs.easing;\n            ms = easing.dur;\n            attrs = attrs.attr;\n        }\n        var fkeys = [], tkeys = [], keys = {}, from, to, f, eq,\n            el = this;\n        for (var key in attrs) if (attrs[has](key)) {\n            if (el.equal) {\n                eq = el.equal(key, Str(attrs[key]));\n                from = eq.from;\n                to = eq.to;\n                f = eq.f;\n            } else {\n                from = +el.attr(key);\n                to = +attrs[key];\n            }\n            var len = is(from, \"array\") ? from.length : 1;\n            keys[key] = slice(fkeys.length, fkeys.length + len, f);\n            fkeys = fkeys.concat(from);\n            tkeys = tkeys.concat(to);\n        }\n        var now = mina.time(),\n            anim = mina(fkeys, tkeys, now, now + ms, mina.time, function (val) {\n                var attr = {};\n                for (var key in keys) if (keys[has](key)) {\n                    attr[key] = keys[key](val);\n                }\n                el.attr(attr);\n            }, easing);\n        el.anims[anim.id] = anim;\n        anim._attrs = attrs;\n        anim._callback = callback;\n        eve(\"snap.animcreated.\" + el.id, anim);\n        eve.once(\"mina.finish.\" + anim.id, function () {\n            delete el.anims[anim.id];\n            callback && callback.call(el);\n        });\n        eve.once(\"mina.stop.\" + anim.id, function () {\n            delete el.anims[anim.id];\n        });\n        return el;\n    };\n    var eldata = {};\n    /*\\\n     * Element.data\n     [ method ]\n     **\n     * Adds or retrieves given value associated with given key. (Don’t confuse\n     * with `data-` attributes)\n     *\n     * See also @Element.removeData\n     - key (string) key to store data\n     - value (any) #optional value to store\n     = (object) @Element\n     * or, if value is not specified:\n     = (any) value\n     > Usage\n     | for (var i = 0, i < 5, i++) {\n     |     paper.circle(10 + 15 * i, 10, 10)\n     |          .attr({fill: \"#000\"})\n     |          .data(\"i\", i)\n     |          .click(function () {\n     |             alert(this.data(\"i\"));\n     |          });\n     | }\n    \\*/\n    elproto.data = function (key, value) {\n        var data = eldata[this.id] = eldata[this.id] || {};\n        if (arguments.length == 0){\n            eve(\"snap.data.get.\" + this.id, this, data, null);\n            return data;\n        }\n        if (arguments.length == 1) {\n            if (Snap.is(key, \"object\")) {\n                for (var i in key) if (key[has](i)) {\n                    this.data(i, key[i]);\n                }\n                return this;\n            }\n            eve(\"snap.data.get.\" + this.id, this, data[key], key);\n            return data[key];\n        }\n        data[key] = value;\n        eve(\"snap.data.set.\" + this.id, this, value, key);\n        return this;\n    };\n    /*\\\n     * Element.removeData\n     [ method ]\n     **\n     * Removes value associated with an element by given key.\n     * If key is not provided, removes all the data of the element.\n     - key (string) #optional key\n     = (object) @Element\n    \\*/\n    elproto.removeData = function (key) {\n        if (key == null) {\n            eldata[this.id] = {};\n        } else {\n            eldata[this.id] && delete eldata[this.id][key];\n        }\n        return this;\n    };\n    /*\\\n     * Element.outerSVG\n     [ method ]\n     **\n     * Returns SVG code for the element, equivalent to HTML's `outerHTML`.\n     *\n     * See also @Element.innerSVG\n     = (string) SVG code for the element\n    \\*/\n    /*\\\n     * Element.toString\n     [ method ]\n     **\n     * See @Element.outerSVG\n    \\*/\n    elproto.outerSVG = elproto.toString = toString(1);\n    /*\\\n     * Element.innerSVG\n     [ method ]\n     **\n     * Returns SVG code for the element's contents, equivalent to HTML's `innerHTML`\n     = (string) SVG code for the element\n    \\*/\n    elproto.innerSVG = toString();\n    function toString(type) {\n        return function () {\n            var res = type ? \"<\" + this.type : \"\",\n                attr = this.node.attributes,\n                chld = this.node.childNodes;\n            if (type) {\n                for (var i = 0, ii = attr.length; i < ii; i++) {\n                    res += \" \" + attr[i].name + '=\"' +\n                            attr[i].value.replace(/\"/g, '\\\\\"') + '\"';\n                }\n            }\n            if (chld.length) {\n                type && (res += \">\");\n                for (i = 0, ii = chld.length; i < ii; i++) {\n                    if (chld[i].nodeType == 3) {\n                        res += chld[i].nodeValue;\n                    } else if (chld[i].nodeType == 1) {\n                        res += wrap(chld[i]).toString();\n                    }\n                }\n                type && (res += \"</\" + this.type + \">\");\n            } else {\n                type && (res += \"/>\");\n            }\n            return res;\n        };\n    }\n    elproto.toDataURL = function () {\n        if (window && window.btoa) {\n            var bb = this.getBBox(),\n                svg = Snap.format('<svg version=\"1.1\" xmlns=\"http://www.w3.org/2000/svg\" xmlns:xlink=\"http://www.w3.org/1999/xlink\" width=\"{width}\" height=\"{height}\" viewBox=\"{x} {y} {width} {height}\">{contents}</svg>', {\n                x: +bb.x.toFixed(3),\n                y: +bb.y.toFixed(3),\n                width: +bb.width.toFixed(3),\n                height: +bb.height.toFixed(3),\n                contents: this.outerSVG()\n            });\n            return \"data:image/svg+xml;base64,\" + btoa(unescape(encodeURIComponent(svg)));\n        }\n    };\n    /*\\\n     * Fragment.select\n     [ method ]\n     **\n     * See @Element.select\n    \\*/\n    Fragment.prototype.select = elproto.select;\n    /*\\\n     * Fragment.selectAll\n     [ method ]\n     **\n     * See @Element.selectAll\n    \\*/\n    Fragment.prototype.selectAll = elproto.selectAll;\n});\n\n// Copyright (c) 2013 Adobe Systems Incorporated. All rights reserved.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n// http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\nSnap.plugin(function (Snap, Element, Paper, glob, Fragment) {\n    var objectToString = Object.prototype.toString,\n        Str = String,\n        math = Math,\n        E = \"\";\n    function Matrix(a, b, c, d, e, f) {\n        if (b == null && objectToString.call(a) == \"[object SVGMatrix]\") {\n            this.a = a.a;\n            this.b = a.b;\n            this.c = a.c;\n            this.d = a.d;\n            this.e = a.e;\n            this.f = a.f;\n            return;\n        }\n        if (a != null) {\n            this.a = +a;\n            this.b = +b;\n            this.c = +c;\n            this.d = +d;\n            this.e = +e;\n            this.f = +f;\n        } else {\n            this.a = 1;\n            this.b = 0;\n            this.c = 0;\n            this.d = 1;\n            this.e = 0;\n            this.f = 0;\n        }\n    }\n    (function (matrixproto) {\n        /*\\\n         * Matrix.add\n         [ method ]\n         **\n         * Adds the given matrix to existing one\n         - a (number)\n         - b (number)\n         - c (number)\n         - d (number)\n         - e (number)\n         - f (number)\n         * or\n         - matrix (object) @Matrix\n        \\*/\n        matrixproto.add = function (a, b, c, d, e, f) {\n            var out = [[], [], []],\n                m = [[this.a, this.c, this.e], [this.b, this.d, this.f], [0, 0, 1]],\n                matrix = [[a, c, e], [b, d, f], [0, 0, 1]],\n                x, y, z, res;\n\n            if (a && a instanceof Matrix) {\n                matrix = [[a.a, a.c, a.e], [a.b, a.d, a.f], [0, 0, 1]];\n            }\n\n            for (x = 0; x < 3; x++) {\n                for (y = 0; y < 3; y++) {\n                    res = 0;\n                    for (z = 0; z < 3; z++) {\n                        res += m[x][z] * matrix[z][y];\n                    }\n                    out[x][y] = res;\n                }\n            }\n            this.a = out[0][0];\n            this.b = out[1][0];\n            this.c = out[0][1];\n            this.d = out[1][1];\n            this.e = out[0][2];\n            this.f = out[1][2];\n            return this;\n        };\n        /*\\\n         * Matrix.invert\n         [ method ]\n         **\n         * Returns an inverted version of the matrix\n         = (object) @Matrix\n        \\*/\n        matrixproto.invert = function () {\n            var me = this,\n                x = me.a * me.d - me.b * me.c;\n            return new Matrix(me.d / x, -me.b / x, -me.c / x, me.a / x, (me.c * me.f - me.d * me.e) / x, (me.b * me.e - me.a * me.f) / x);\n        };\n        /*\\\n         * Matrix.clone\n         [ method ]\n         **\n         * Returns a copy of the matrix\n         = (object) @Matrix\n        \\*/\n        matrixproto.clone = function () {\n            return new Matrix(this.a, this.b, this.c, this.d, this.e, this.f);\n        };\n        /*\\\n         * Matrix.translate\n         [ method ]\n         **\n         * Translate the matrix\n         - x (number) horizontal offset distance\n         - y (number) vertical offset distance\n        \\*/\n        matrixproto.translate = function (x, y) {\n            return this.add(1, 0, 0, 1, x, y);\n        };\n        /*\\\n         * Matrix.scale\n         [ method ]\n         **\n         * Scales the matrix\n         - x (number) amount to be scaled, with `1` resulting in no change\n         - y (number) #optional amount to scale along the vertical axis. (Otherwise `x` applies to both axes.)\n         - cx (number) #optional horizontal origin point from which to scale\n         - cy (number) #optional vertical origin point from which to scale\n         * Default cx, cy is the middle point of the element.\n        \\*/\n        matrixproto.scale = function (x, y, cx, cy) {\n            y == null && (y = x);\n            (cx || cy) && this.add(1, 0, 0, 1, cx, cy);\n            this.add(x, 0, 0, y, 0, 0);\n            (cx || cy) && this.add(1, 0, 0, 1, -cx, -cy);\n            return this;\n        };\n        /*\\\n         * Matrix.rotate\n         [ method ]\n         **\n         * Rotates the matrix\n         - a (number) angle of rotation, in degrees\n         - x (number) horizontal origin point from which to rotate\n         - y (number) vertical origin point from which to rotate\n        \\*/\n        matrixproto.rotate = function (a, x, y) {\n            a = Snap.rad(a);\n            x = x || 0;\n            y = y || 0;\n            var cos = +math.cos(a).toFixed(9),\n                sin = +math.sin(a).toFixed(9);\n            this.add(cos, sin, -sin, cos, x, y);\n            return this.add(1, 0, 0, 1, -x, -y);\n        };\n        /*\\\n         * Matrix.x\n         [ method ]\n         **\n         * Returns x coordinate for given point after transformation described by the matrix. See also @Matrix.y\n         - x (number)\n         - y (number)\n         = (number) x\n        \\*/\n        matrixproto.x = function (x, y) {\n            return x * this.a + y * this.c + this.e;\n        };\n        /*\\\n         * Matrix.y\n         [ method ]\n         **\n         * Returns y coordinate for given point after transformation described by the matrix. See also @Matrix.x\n         - x (number)\n         - y (number)\n         = (number) y\n        \\*/\n        matrixproto.y = function (x, y) {\n            return x * this.b + y * this.d + this.f;\n        };\n        matrixproto.get = function (i) {\n            return +this[Str.fromCharCode(97 + i)].toFixed(4);\n        };\n        matrixproto.toString = function () {\n            return \"matrix(\" + [this.get(0), this.get(1), this.get(2), this.get(3), this.get(4), this.get(5)].join() + \")\";\n        };\n        matrixproto.offset = function () {\n            return [this.e.toFixed(4), this.f.toFixed(4)];\n        };\n        function norm(a) {\n            return a[0] * a[0] + a[1] * a[1];\n        }\n        function normalize(a) {\n            var mag = math.sqrt(norm(a));\n            a[0] && (a[0] /= mag);\n            a[1] && (a[1] /= mag);\n        }\n        /*\\\n         * Matrix.determinant\n         [ method ]\n         **\n         * Finds determinant of the given matrix.\n         = (number) determinant\n        \\*/\n        matrixproto.determinant = function () {\n            return this.a * this.d - this.b * this.c;\n        };\n        /*\\\n         * Matrix.split\n         [ method ]\n         **\n         * Splits matrix into primitive transformations\n         = (object) in format:\n         o dx (number) translation by x\n         o dy (number) translation by y\n         o scalex (number) scale by x\n         o scaley (number) scale by y\n         o shear (number) shear\n         o rotate (number) rotation in deg\n         o isSimple (boolean) could it be represented via simple transformations\n        \\*/\n        matrixproto.split = function () {\n            var out = {};\n            // translation\n            out.dx = this.e;\n            out.dy = this.f;\n\n            // scale and shear\n            var row = [[this.a, this.c], [this.b, this.d]];\n            out.scalex = math.sqrt(norm(row[0]));\n            normalize(row[0]);\n\n            out.shear = row[0][0] * row[1][0] + row[0][1] * row[1][1];\n            row[1] = [row[1][0] - row[0][0] * out.shear, row[1][1] - row[0][1] * out.shear];\n\n            out.scaley = math.sqrt(norm(row[1]));\n            normalize(row[1]);\n            out.shear /= out.scaley;\n\n            if (this.determinant() < 0) {\n                out.scalex = -out.scalex;\n            }\n\n            // rotation\n            var sin = -row[0][1],\n                cos = row[1][1];\n            if (cos < 0) {\n                out.rotate = Snap.deg(math.acos(cos));\n                if (sin < 0) {\n                    out.rotate = 360 - out.rotate;\n                }\n            } else {\n                out.rotate = Snap.deg(math.asin(sin));\n            }\n\n            out.isSimple = !+out.shear.toFixed(9) && (out.scalex.toFixed(9) == out.scaley.toFixed(9) || !out.rotate);\n            out.isSuperSimple = !+out.shear.toFixed(9) && out.scalex.toFixed(9) == out.scaley.toFixed(9) && !out.rotate;\n            out.noRotation = !+out.shear.toFixed(9) && !out.rotate;\n            return out;\n        };\n        /*\\\n         * Matrix.toTransformString\n         [ method ]\n         **\n         * Returns transform string that represents given matrix\n         = (string) transform string\n        \\*/\n        matrixproto.toTransformString = function (shorter) {\n            var s = shorter || this.split();\n            if (!+s.shear.toFixed(9)) {\n                s.scalex = +s.scalex.toFixed(4);\n                s.scaley = +s.scaley.toFixed(4);\n                s.rotate = +s.rotate.toFixed(4);\n                return  (s.dx || s.dy ? \"t\" + [+s.dx.toFixed(4), +s.dy.toFixed(4)] : E) +\n                        (s.scalex != 1 || s.scaley != 1 ? \"s\" + [s.scalex, s.scaley, 0, 0] : E) +\n                        (s.rotate ? \"r\" + [+s.rotate.toFixed(4), 0, 0] : E);\n            } else {\n                return \"m\" + [this.get(0), this.get(1), this.get(2), this.get(3), this.get(4), this.get(5)];\n            }\n        };\n    })(Matrix.prototype);\n    /*\\\n     * Snap.Matrix\n     [ method ]\n     **\n     * Matrix constructor, extend on your own risk.\n     * To create matrices use @Snap.matrix.\n    \\*/\n    Snap.Matrix = Matrix;\n    /*\\\n     * Snap.matrix\n     [ method ]\n     **\n     * Utility method\n     **\n     * Returns a matrix based on the given parameters\n     - a (number)\n     - b (number)\n     - c (number)\n     - d (number)\n     - e (number)\n     - f (number)\n     * or\n     - svgMatrix (SVGMatrix)\n     = (object) @Matrix\n    \\*/\n    Snap.matrix = function (a, b, c, d, e, f) {\n        return new Matrix(a, b, c, d, e, f);\n    };\n});\n// Copyright (c) 2013 Adobe Systems Incorporated. All rights reserved.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n// http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\nSnap.plugin(function (Snap, Element, Paper, glob, Fragment) {\n    var has = \"hasOwnProperty\",\n        make = Snap._.make,\n        wrap = Snap._.wrap,\n        is = Snap.is,\n        getSomeDefs = Snap._.getSomeDefs,\n        reURLValue = /^url\\(#?([^)]+)\\)$/,\n        $ = Snap._.$,\n        URL = Snap.url,\n        Str = String,\n        separator = Snap._.separator,\n        E = \"\";\n    // Attributes event handlers\n    eve.on(\"snap.util.attr.mask\", function (value) {\n        if (value instanceof Element || value instanceof Fragment) {\n            eve.stop();\n            if (value instanceof Fragment && value.node.childNodes.length == 1) {\n                value = value.node.firstChild;\n                getSomeDefs(this).appendChild(value);\n                value = wrap(value);\n            }\n            if (value.type == \"mask\") {\n                var mask = value;\n            } else {\n                mask = make(\"mask\", getSomeDefs(this));\n                mask.node.appendChild(value.node);\n            }\n            !mask.node.id && $(mask.node, {\n                id: mask.id\n            });\n            $(this.node, {\n                mask: URL(mask.id)\n            });\n        }\n    });\n    (function (clipIt) {\n        eve.on(\"snap.util.attr.clip\", clipIt);\n        eve.on(\"snap.util.attr.clip-path\", clipIt);\n        eve.on(\"snap.util.attr.clipPath\", clipIt);\n    }(function (value) {\n        if (value instanceof Element || value instanceof Fragment) {\n            eve.stop();\n            if (value.type == \"clipPath\") {\n                var clip = value;\n            } else {\n                clip = make(\"clipPath\", getSomeDefs(this));\n                clip.node.appendChild(value.node);\n                !clip.node.id && $(clip.node, {\n                    id: clip.id\n                });\n            }\n            $(this.node, {\n                \"clip-path\": URL(clip.node.id || clip.id)\n            });\n        }\n    }));\n    function fillStroke(name) {\n        return function (value) {\n            eve.stop();\n            if (value instanceof Fragment && value.node.childNodes.length == 1 &&\n                (value.node.firstChild.tagName == \"radialGradient\" ||\n                value.node.firstChild.tagName == \"linearGradient\" ||\n                value.node.firstChild.tagName == \"pattern\")) {\n                value = value.node.firstChild;\n                getSomeDefs(this).appendChild(value);\n                value = wrap(value);\n            }\n            if (value instanceof Element) {\n                if (value.type == \"radialGradient\" || value.type == \"linearGradient\"\n                   || value.type == \"pattern\") {\n                    if (!value.node.id) {\n                        $(value.node, {\n                            id: value.id\n                        });\n                    }\n                    var fill = URL(value.node.id);\n                } else {\n                    fill = value.attr(name);\n                }\n            } else {\n                fill = Snap.color(value);\n                if (fill.error) {\n                    var grad = Snap(getSomeDefs(this).ownerSVGElement).gradient(value);\n                    if (grad) {\n                        if (!grad.node.id) {\n                            $(grad.node, {\n                                id: grad.id\n                            });\n                        }\n                        fill = URL(grad.node.id);\n                    } else {\n                        fill = value;\n                    }\n                } else {\n                    fill = Str(fill);\n                }\n            }\n            var attrs = {};\n            attrs[name] = fill;\n            $(this.node, attrs);\n            this.node.style[name] = E;\n        };\n    }\n    eve.on(\"snap.util.attr.fill\", fillStroke(\"fill\"));\n    eve.on(\"snap.util.attr.stroke\", fillStroke(\"stroke\"));\n    var gradrg = /^([lr])(?:\\(([^)]*)\\))?(.*)$/i;\n    eve.on(\"snap.util.grad.parse\", function parseGrad(string) {\n        string = Str(string);\n        var tokens = string.match(gradrg);\n        if (!tokens) {\n            return null;\n        }\n        var type = tokens[1],\n            params = tokens[2],\n            stops = tokens[3];\n        params = params.split(/\\s*,\\s*/).map(function (el) {\n            return +el == el ? +el : el;\n        });\n        if (params.length == 1 && params[0] == 0) {\n            params = [];\n        }\n        stops = stops.split(\"-\");\n        stops = stops.map(function (el) {\n            el = el.split(\":\");\n            var out = {\n                color: el[0]\n            };\n            if (el[1]) {\n                out.offset = parseFloat(el[1]);\n            }\n            return out;\n        });\n        return {\n            type: type,\n            params: params,\n            stops: stops\n        };\n    });\n\n    eve.on(\"snap.util.attr.d\", function (value) {\n        eve.stop();\n        if (is(value, \"array\") && is(value[0], \"array\")) {\n            value = Snap.path.toString.call(value);\n        }\n        value = Str(value);\n        if (value.match(/[ruo]/i)) {\n            value = Snap.path.toAbsolute(value);\n        }\n        $(this.node, {d: value});\n    })(-1);\n    eve.on(\"snap.util.attr.#text\", function (value) {\n        eve.stop();\n        value = Str(value);\n        var txt = glob.doc.createTextNode(value);\n        while (this.node.firstChild) {\n            this.node.removeChild(this.node.firstChild);\n        }\n        this.node.appendChild(txt);\n    })(-1);\n    eve.on(\"snap.util.attr.path\", function (value) {\n        eve.stop();\n        this.attr({d: value});\n    })(-1);\n    eve.on(\"snap.util.attr.class\", function (value) {\n        eve.stop();\n        this.node.className.baseVal = value;\n    })(-1);\n    eve.on(\"snap.util.attr.viewBox\", function (value) {\n        var vb;\n        if (is(value, \"object\") && \"x\" in value) {\n            vb = [value.x, value.y, value.width, value.height].join(\" \");\n        } else if (is(value, \"array\")) {\n            vb = value.join(\" \");\n        } else {\n            vb = value;\n        }\n        $(this.node, {\n            viewBox: vb\n        });\n        eve.stop();\n    })(-1);\n    eve.on(\"snap.util.attr.transform\", function (value) {\n        this.transform(value);\n        eve.stop();\n    })(-1);\n    eve.on(\"snap.util.attr.r\", function (value) {\n        if (this.type == \"rect\") {\n            eve.stop();\n            $(this.node, {\n                rx: value,\n                ry: value\n            });\n        }\n    })(-1);\n    eve.on(\"snap.util.attr.textpath\", function (value) {\n        eve.stop();\n        if (this.type == \"text\") {\n            var id, tp, node;\n            if (!value && this.textPath) {\n                tp = this.textPath;\n                while (tp.node.firstChild) {\n                    this.node.appendChild(tp.node.firstChild);\n                }\n                tp.remove();\n                delete this.textPath;\n                return;\n            }\n            if (is(value, \"string\")) {\n                var defs = getSomeDefs(this),\n                    path = wrap(defs.parentNode).path(value);\n                defs.appendChild(path.node);\n                id = path.id;\n                path.attr({id: id});\n            } else {\n                value = wrap(value);\n                if (value instanceof Element) {\n                    id = value.attr(\"id\");\n                    if (!id) {\n                        id = value.id;\n                        value.attr({id: id});\n                    }\n                }\n            }\n            if (id) {\n                tp = this.textPath;\n                node = this.node;\n                if (tp) {\n                    tp.attr({\"xlink:href\": \"#\" + id});\n                } else {\n                    tp = $(\"textPath\", {\n                        \"xlink:href\": \"#\" + id\n                    });\n                    while (node.firstChild) {\n                        tp.appendChild(node.firstChild);\n                    }\n                    node.appendChild(tp);\n                    this.textPath = wrap(tp);\n                }\n            }\n        }\n    })(-1);\n    eve.on(\"snap.util.attr.text\", function (value) {\n        if (this.type == \"text\") {\n            var i = 0,\n                node = this.node,\n                tuner = function (chunk) {\n                    var out = $(\"tspan\");\n                    if (is(chunk, \"array\")) {\n                        for (var i = 0; i < chunk.length; i++) {\n                            out.appendChild(tuner(chunk[i]));\n                        }\n                    } else {\n                        out.appendChild(glob.doc.createTextNode(chunk));\n                    }\n                    out.normalize && out.normalize();\n                    return out;\n                };\n            while (node.firstChild) {\n                node.removeChild(node.firstChild);\n            }\n            var tuned = tuner(value);\n            while (tuned.firstChild) {\n                node.appendChild(tuned.firstChild);\n            }\n        }\n        eve.stop();\n    })(-1);\n    function setFontSize(value) {\n        eve.stop();\n        if (value == +value) {\n            value += \"px\";\n        }\n        this.node.style.fontSize = value;\n    }\n    eve.on(\"snap.util.attr.fontSize\", setFontSize)(-1);\n    eve.on(\"snap.util.attr.font-size\", setFontSize)(-1);\n\n\n    eve.on(\"snap.util.getattr.transform\", function () {\n        eve.stop();\n        return this.transform();\n    })(-1);\n    eve.on(\"snap.util.getattr.textpath\", function () {\n        eve.stop();\n        return this.textPath;\n    })(-1);\n    // Markers\n    (function () {\n        function getter(end) {\n            return function () {\n                eve.stop();\n                var style = glob.doc.defaultView.getComputedStyle(this.node, null).getPropertyValue(\"marker-\" + end);\n                if (style == \"none\") {\n                    return style;\n                } else {\n                    return Snap(glob.doc.getElementById(style.match(reURLValue)[1]));\n                }\n            };\n        }\n        function setter(end) {\n            return function (value) {\n                eve.stop();\n                var name = \"marker\" + end.charAt(0).toUpperCase() + end.substring(1);\n                if (value == \"\" || !value) {\n                    this.node.style[name] = \"none\";\n                    return;\n                }\n                if (value.type == \"marker\") {\n                    var id = value.node.id;\n                    if (!id) {\n                        $(value.node, {id: value.id});\n                    }\n                    this.node.style[name] = URL(id);\n                    return;\n                }\n            };\n        }\n        eve.on(\"snap.util.getattr.marker-end\", getter(\"end\"))(-1);\n        eve.on(\"snap.util.getattr.markerEnd\", getter(\"end\"))(-1);\n        eve.on(\"snap.util.getattr.marker-start\", getter(\"start\"))(-1);\n        eve.on(\"snap.util.getattr.markerStart\", getter(\"start\"))(-1);\n        eve.on(\"snap.util.getattr.marker-mid\", getter(\"mid\"))(-1);\n        eve.on(\"snap.util.getattr.markerMid\", getter(\"mid\"))(-1);\n        eve.on(\"snap.util.attr.marker-end\", setter(\"end\"))(-1);\n        eve.on(\"snap.util.attr.markerEnd\", setter(\"end\"))(-1);\n        eve.on(\"snap.util.attr.marker-start\", setter(\"start\"))(-1);\n        eve.on(\"snap.util.attr.markerStart\", setter(\"start\"))(-1);\n        eve.on(\"snap.util.attr.marker-mid\", setter(\"mid\"))(-1);\n        eve.on(\"snap.util.attr.markerMid\", setter(\"mid\"))(-1);\n    }());\n    eve.on(\"snap.util.getattr.r\", function () {\n        if (this.type == \"rect\" && $(this.node, \"rx\") == $(this.node, \"ry\")) {\n            eve.stop();\n            return $(this.node, \"rx\");\n        }\n    })(-1);\n    function textExtract(node) {\n        var out = [];\n        var children = node.childNodes;\n        for (var i = 0, ii = children.length; i < ii; i++) {\n            var chi = children[i];\n            if (chi.nodeType == 3) {\n                out.push(chi.nodeValue);\n            }\n            if (chi.tagName == \"tspan\") {\n                if (chi.childNodes.length == 1 && chi.firstChild.nodeType == 3) {\n                    out.push(chi.firstChild.nodeValue);\n                } else {\n                    out.push(textExtract(chi));\n                }\n            }\n        }\n        return out;\n    }\n    eve.on(\"snap.util.getattr.text\", function () {\n        if (this.type == \"text\" || this.type == \"tspan\") {\n            eve.stop();\n            var out = textExtract(this.node);\n            return out.length == 1 ? out[0] : out;\n        }\n    })(-1);\n    eve.on(\"snap.util.getattr.#text\", function () {\n        return this.node.textContent;\n    })(-1);\n    eve.on(\"snap.util.getattr.viewBox\", function () {\n        eve.stop();\n        var vb = $(this.node, \"viewBox\");\n        if (vb) {\n            vb = vb.split(separator);\n            return Snap._.box(+vb[0], +vb[1], +vb[2], +vb[3]);\n        } else {\n            return;\n        }\n    })(-1);\n    eve.on(\"snap.util.getattr.points\", function () {\n        var p = $(this.node, \"points\");\n        eve.stop();\n        if (p) {\n            return p.split(separator);\n        } else {\n            return;\n        }\n    })(-1);\n    eve.on(\"snap.util.getattr.path\", function () {\n        var p = $(this.node, \"d\");\n        eve.stop();\n        return p;\n    })(-1);\n    eve.on(\"snap.util.getattr.class\", function () {\n        return this.node.className.baseVal;\n    })(-1);\n    function getFontSize() {\n        eve.stop();\n        return this.node.style.fontSize;\n    }\n    eve.on(\"snap.util.getattr.fontSize\", getFontSize)(-1);\n    eve.on(\"snap.util.getattr.font-size\", getFontSize)(-1);\n});\n\n// Copyright (c) 2014 Adobe Systems Incorporated. All rights reserved.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n// http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\nSnap.plugin(function (Snap, Element, Paper, glob, Fragment) {\n    var rgNotSpace = /\\S+/g,\n        rgBadSpace = /[\\t\\r\\n\\f]/g,\n        rgTrim = /(^\\s+|\\s+$)/g,\n        Str = String,\n        elproto = Element.prototype;\n    /*\\\n     * Element.addClass\n     [ method ]\n     **\n     * Adds given class name or list of class names to the element.\n     - value (string) class name or space separated list of class names\n     **\n     = (Element) original element.\n    \\*/\n    elproto.addClass = function (value) {\n        var classes = Str(value || \"\").match(rgNotSpace) || [],\n            elem = this.node,\n            className = elem.className.baseVal,\n            curClasses = className.match(rgNotSpace) || [],\n            j,\n            pos,\n            clazz,\n            finalValue;\n\n        if (classes.length) {\n            j = 0;\n            while ((clazz = classes[j++])) {\n                pos = curClasses.indexOf(clazz);\n                if (!~pos) {\n                    curClasses.push(clazz);\n                }\n            }\n\n            finalValue = curClasses.join(\" \");\n            if (className != finalValue) {\n                elem.className.baseVal = finalValue;\n            }\n        }\n        return this;\n    };\n    /*\\\n     * Element.removeClass\n     [ method ]\n     **\n     * Removes given class name or list of class names from the element.\n     - value (string) class name or space separated list of class names\n     **\n     = (Element) original element.\n    \\*/\n    elproto.removeClass = function (value) {\n        var classes = Str(value || \"\").match(rgNotSpace) || [],\n            elem = this.node,\n            className = elem.className.baseVal,\n            curClasses = className.match(rgNotSpace) || [],\n            j,\n            pos,\n            clazz,\n            finalValue;\n        if (curClasses.length) {\n            j = 0;\n            while ((clazz = classes[j++])) {\n                pos = curClasses.indexOf(clazz);\n                if (~pos) {\n                    curClasses.splice(pos, 1);\n                }\n            }\n\n            finalValue = curClasses.join(\" \");\n            if (className != finalValue) {\n                elem.className.baseVal = finalValue;\n            }\n        }\n        return this;\n    };\n    /*\\\n     * Element.hasClass\n     [ method ]\n     **\n     * Checks if the element has a given class name in the list of class names applied to it.\n     - value (string) class name\n     **\n     = (boolean) `true` if the element has given class\n    \\*/\n    elproto.hasClass = function (value) {\n        var elem = this.node,\n            className = elem.className.baseVal,\n            curClasses = className.match(rgNotSpace) || [];\n        return !!~curClasses.indexOf(value);\n    };\n    /*\\\n     * Element.toggleClass\n     [ method ]\n     **\n     * Add or remove one or more classes from the element, depending on either\n     * the class’s presence or the value of the `flag` argument.\n     - value (string) class name or space separated list of class names\n     - flag (boolean) value to determine whether the class should be added or removed\n     **\n     = (Element) original element.\n    \\*/\n    elproto.toggleClass = function (value, flag) {\n        if (flag != null) {\n            if (flag) {\n                return this.addClass(value);\n            } else {\n                return this.removeClass(value);\n            }\n        }\n        var classes = (value || \"\").match(rgNotSpace) || [],\n            elem = this.node,\n            className = elem.className.baseVal,\n            curClasses = className.match(rgNotSpace) || [],\n            j,\n            pos,\n            clazz,\n            finalValue;\n        j = 0;\n        while ((clazz = classes[j++])) {\n            pos = curClasses.indexOf(clazz);\n            if (~pos) {\n                curClasses.splice(pos, 1);\n            } else {\n                curClasses.push(clazz);\n            }\n        }\n\n        finalValue = curClasses.join(\" \");\n        if (className != finalValue) {\n            elem.className.baseVal = finalValue;\n        }\n        return this;\n    };\n});\n\n// Copyright (c) 2013 Adobe Systems Incorporated. All rights reserved.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n// http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\nSnap.plugin(function (Snap, Element, Paper, glob, Fragment) {\n    var operators = {\n            \"+\": function (x, y) {\n                    return x + y;\n                },\n            \"-\": function (x, y) {\n                    return x - y;\n                },\n            \"/\": function (x, y) {\n                    return x / y;\n                },\n            \"*\": function (x, y) {\n                    return x * y;\n                }\n        },\n        Str = String,\n        reUnit = /[a-z]+$/i,\n        reAddon = /^\\s*([+\\-\\/*])\\s*=\\s*([\\d.eE+\\-]+)\\s*([^\\d\\s]+)?\\s*$/;\n    function getNumber(val) {\n        return val;\n    }\n    function getUnit(unit) {\n        return function (val) {\n            return +val.toFixed(3) + unit;\n        };\n    }\n    eve.on(\"snap.util.attr\", function (val) {\n        var plus = Str(val).match(reAddon);\n        if (plus) {\n            var evnt = eve.nt(),\n                name = evnt.substring(evnt.lastIndexOf(\".\") + 1),\n                a = this.attr(name),\n                atr = {};\n            eve.stop();\n            var unit = plus[3] || \"\",\n                aUnit = a.match(reUnit),\n                op = operators[plus[1]];\n            if (aUnit && aUnit == unit) {\n                val = op(parseFloat(a), +plus[2]);\n            } else {\n                a = this.asPX(name);\n                val = op(this.asPX(name), this.asPX(name, plus[2] + unit));\n            }\n            if (isNaN(a) || isNaN(val)) {\n                return;\n            }\n            atr[name] = val;\n            this.attr(atr);\n        }\n    })(-10);\n    eve.on(\"snap.util.equal\", function (name, b) {\n        var A, B, a = Str(this.attr(name) || \"\"),\n            el = this,\n            bplus = Str(b).match(reAddon);\n        if (bplus) {\n            eve.stop();\n            var unit = bplus[3] || \"\",\n                aUnit = a.match(reUnit),\n                op = operators[bplus[1]];\n            if (aUnit && aUnit == unit) {\n                return {\n                    from: parseFloat(a),\n                    to: op(parseFloat(a), +bplus[2]),\n                    f: getUnit(aUnit)\n                };\n            } else {\n                a = this.asPX(name);\n                return {\n                    from: a,\n                    to: op(a, this.asPX(name, bplus[2] + unit)),\n                    f: getNumber\n                };\n            }\n        }\n    })(-10);\n});\n// Copyright (c) 2013 Adobe Systems Incorporated. All rights reserved.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n// http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\nSnap.plugin(function (Snap, Element, Paper, glob, Fragment) {\n    var proto = Paper.prototype,\n        is = Snap.is;\n    /*\\\n     * Paper.rect\n     [ method ]\n     *\n     * Draws a rectangle\n     **\n     - x (number) x coordinate of the top left corner\n     - y (number) y coordinate of the top left corner\n     - width (number) width\n     - height (number) height\n     - rx (number) #optional horizontal radius for rounded corners, default is 0\n     - ry (number) #optional vertical radius for rounded corners, default is rx or 0\n     = (object) the `rect` element\n     **\n     > Usage\n     | // regular rectangle\n     | var c = paper.rect(10, 10, 50, 50);\n     | // rectangle with rounded corners\n     | var c = paper.rect(40, 40, 50, 50, 10);\n    \\*/\n    proto.rect = function (x, y, w, h, rx, ry) {\n        var attr;\n        if (ry == null) {\n            ry = rx;\n        }\n        if (is(x, \"object\") && x == \"[object Object]\") {\n            attr = x;\n        } else if (x != null) {\n            attr = {\n                x: x,\n                y: y,\n                width: w,\n                height: h\n            };\n            if (rx != null) {\n                attr.rx = rx;\n                attr.ry = ry;\n            }\n        }\n        return this.el(\"rect\", attr);\n    };\n    /*\\\n     * Paper.circle\n     [ method ]\n     **\n     * Draws a circle\n     **\n     - x (number) x coordinate of the centre\n     - y (number) y coordinate of the centre\n     - r (number) radius\n     = (object) the `circle` element\n     **\n     > Usage\n     | var c = paper.circle(50, 50, 40);\n    \\*/\n    proto.circle = function (cx, cy, r) {\n        var attr;\n        if (is(cx, \"object\") && cx == \"[object Object]\") {\n            attr = cx;\n        } else if (cx != null) {\n            attr = {\n                cx: cx,\n                cy: cy,\n                r: r\n            };\n        }\n        return this.el(\"circle\", attr);\n    };\n\n    var preload = (function () {\n        function onerror() {\n            this.parentNode.removeChild(this);\n        }\n        return function (src, f) {\n            var img = glob.doc.createElement(\"img\"),\n                body = glob.doc.body;\n            img.style.cssText = \"position:absolute;left:-9999em;top:-9999em\";\n            img.onload = function () {\n                f.call(img);\n                img.onload = img.onerror = null;\n                body.removeChild(img);\n            };\n            img.onerror = onerror;\n            body.appendChild(img);\n            img.src = src;\n        };\n    }());\n\n    /*\\\n     * Paper.image\n     [ method ]\n     **\n     * Places an image on the surface\n     **\n     - src (string) URI of the source image\n     - x (number) x offset position\n     - y (number) y offset position\n     - width (number) width of the image\n     - height (number) height of the image\n     = (object) the `image` element\n     * or\n     = (object) Snap element object with type `image`\n     **\n     > Usage\n     | var c = paper.image(\"apple.png\", 10, 10, 80, 80);\n    \\*/\n    proto.image = function (src, x, y, width, height) {\n        var el = this.el(\"image\");\n        if (is(src, \"object\") && \"src\" in src) {\n            el.attr(src);\n        } else if (src != null) {\n            var set = {\n                \"xlink:href\": src,\n                preserveAspectRatio: \"none\"\n            };\n            if (x != null && y != null) {\n                set.x = x;\n                set.y = y;\n            }\n            if (width != null && height != null) {\n                set.width = width;\n                set.height = height;\n            } else {\n                preload(src, function () {\n                    Snap._.$(el.node, {\n                        width: this.offsetWidth,\n                        height: this.offsetHeight\n                    });\n                });\n            }\n            Snap._.$(el.node, set);\n        }\n        return el;\n    };\n    /*\\\n     * Paper.ellipse\n     [ method ]\n     **\n     * Draws an ellipse\n     **\n     - x (number) x coordinate of the centre\n     - y (number) y coordinate of the centre\n     - rx (number) horizontal radius\n     - ry (number) vertical radius\n     = (object) the `ellipse` element\n     **\n     > Usage\n     | var c = paper.ellipse(50, 50, 40, 20);\n    \\*/\n    proto.ellipse = function (cx, cy, rx, ry) {\n        var attr;\n        if (is(cx, \"object\") && cx == \"[object Object]\") {\n            attr = cx;\n        } else if (cx != null) {\n            attr ={\n                cx: cx,\n                cy: cy,\n                rx: rx,\n                ry: ry\n            };\n        }\n        return this.el(\"ellipse\", attr);\n    };\n    // SIERRA Paper.path(): Unclear from the link what a Catmull-Rom curveto is, and why it would make life any easier.\n    /*\\\n     * Paper.path\n     [ method ]\n     **\n     * Creates a `<path>` element using the given string as the path's definition\n     - pathString (string) #optional path string in SVG format\n     * Path string consists of one-letter commands, followed by comma seprarated arguments in numerical form. Example:\n     | \"M10,20L30,40\"\n     * This example features two commands: `M`, with arguments `(10, 20)` and `L` with arguments `(30, 40)`. Uppercase letter commands express coordinates in absolute terms, while lowercase commands express them in relative terms from the most recently declared coordinates.\n     *\n     # <p>Here is short list of commands available, for more details see <a href=\"http://www.w3.org/TR/SVG/paths.html#PathData\" title=\"Details of a path's data attribute's format are described in the SVG specification.\">SVG path string format</a> or <a href=\"https://developer.mozilla.org/en/SVG/Tutorial/Paths\">article about path strings at MDN</a>.</p>\n     # <table><thead><tr><th>Command</th><th>Name</th><th>Parameters</th></tr></thead><tbody>\n     # <tr><td>M</td><td>moveto</td><td>(x y)+</td></tr>\n     # <tr><td>Z</td><td>closepath</td><td>(none)</td></tr>\n     # <tr><td>L</td><td>lineto</td><td>(x y)+</td></tr>\n     # <tr><td>H</td><td>horizontal lineto</td><td>x+</td></tr>\n     # <tr><td>V</td><td>vertical lineto</td><td>y+</td></tr>\n     # <tr><td>C</td><td>curveto</td><td>(x1 y1 x2 y2 x y)+</td></tr>\n     # <tr><td>S</td><td>smooth curveto</td><td>(x2 y2 x y)+</td></tr>\n     # <tr><td>Q</td><td>quadratic Bézier curveto</td><td>(x1 y1 x y)+</td></tr>\n     # <tr><td>T</td><td>smooth quadratic Bézier curveto</td><td>(x y)+</td></tr>\n     # <tr><td>A</td><td>elliptical arc</td><td>(rx ry x-axis-rotation large-arc-flag sweep-flag x y)+</td></tr>\n     # <tr><td>R</td><td><a href=\"http://en.wikipedia.org/wiki/Catmull–Rom_spline#Catmull.E2.80.93Rom_spline\">Catmull-Rom curveto</a>*</td><td>x1 y1 (x y)+</td></tr></tbody></table>\n     * * _Catmull-Rom curveto_ is a not standard SVG command and added to make life easier.\n     * Note: there is a special case when a path consists of only three commands: `M10,10R…z`. In this case the path connects back to its starting point.\n     > Usage\n     | var c = paper.path(\"M10 10L90 90\");\n     | // draw a diagonal line:\n     | // move to 10,10, line to 90,90\n    \\*/\n    proto.path = function (d) {\n        var attr;\n        if (is(d, \"object\") && !is(d, \"array\")) {\n            attr = d;\n        } else if (d) {\n            attr = {d: d};\n        }\n        return this.el(\"path\", attr);\n    };\n    /*\\\n     * Paper.g\n     [ method ]\n     **\n     * Creates a group element\n     **\n     - varargs (…) #optional elements to nest within the group\n     = (object) the `g` element\n     **\n     > Usage\n     | var c1 = paper.circle(),\n     |     c2 = paper.rect(),\n     |     g = paper.g(c2, c1); // note that the order of elements is different\n     * or\n     | var c1 = paper.circle(),\n     |     c2 = paper.rect(),\n     |     g = paper.g();\n     | g.add(c2, c1);\n    \\*/\n    /*\\\n     * Paper.group\n     [ method ]\n     **\n     * See @Paper.g\n    \\*/\n    proto.group = proto.g = function (first) {\n        var attr,\n            el = this.el(\"g\");\n        if (arguments.length == 1 && first && !first.type) {\n            el.attr(first);\n        } else if (arguments.length) {\n            el.add(Array.prototype.slice.call(arguments, 0));\n        }\n        return el;\n    };\n    /*\\\n     * Paper.svg\n     [ method ]\n     **\n     * Creates a nested SVG element.\n     - x (number) @optional X of the element\n     - y (number) @optional Y of the element\n     - width (number) @optional width of the element\n     - height (number) @optional height of the element\n     - vbx (number) @optional viewbox X\n     - vby (number) @optional viewbox Y\n     - vbw (number) @optional viewbox width\n     - vbh (number) @optional viewbox height\n     **\n     = (object) the `svg` element\n     **\n    \\*/\n    proto.svg = function (x, y, width, height, vbx, vby, vbw, vbh) {\n        var attrs = {};\n        if (is(x, \"object\") && y == null) {\n            attrs = x;\n        } else {\n            if (x != null) {\n                attrs.x = x;\n            }\n            if (y != null) {\n                attrs.y = y;\n            }\n            if (width != null) {\n                attrs.width = width;\n            }\n            if (height != null) {\n                attrs.height = height;\n            }\n            if (vbx != null && vby != null && vbw != null && vbh != null) {\n                attrs.viewBox = [vbx, vby, vbw, vbh];\n            }\n        }\n        return this.el(\"svg\", attrs);\n    };\n    /*\\\n     * Paper.mask\n     [ method ]\n     **\n     * Equivalent in behaviour to @Paper.g, except it’s a mask.\n     **\n     = (object) the `mask` element\n     **\n    \\*/\n    proto.mask = function (first) {\n        var attr,\n            el = this.el(\"mask\");\n        if (arguments.length == 1 && first && !first.type) {\n            el.attr(first);\n        } else if (arguments.length) {\n            el.add(Array.prototype.slice.call(arguments, 0));\n        }\n        return el;\n    };\n    /*\\\n     * Paper.ptrn\n     [ method ]\n     **\n     * Equivalent in behaviour to @Paper.g, except it’s a pattern.\n     - x (number) @optional X of the element\n     - y (number) @optional Y of the element\n     - width (number) @optional width of the element\n     - height (number) @optional height of the element\n     - vbx (number) @optional viewbox X\n     - vby (number) @optional viewbox Y\n     - vbw (number) @optional viewbox width\n     - vbh (number) @optional viewbox height\n     **\n     = (object) the `pattern` element\n     **\n    \\*/\n    proto.ptrn = function (x, y, width, height, vx, vy, vw, vh) {\n        if (is(x, \"object\")) {\n            var attr = x;\n        } else {\n            attr = {patternUnits: \"userSpaceOnUse\"};\n            if (x) {\n                attr.x = x;\n            }\n            if (y) {\n                attr.y = y;\n            }\n            if (width != null) {\n                attr.width = width;\n            }\n            if (height != null) {\n                attr.height = height;\n            }\n            if (vx != null && vy != null && vw != null && vh != null) {\n                attr.viewBox = [vx, vy, vw, vh];\n            } else {\n                attr.viewBox = [x || 0, y || 0, width || 0, height || 0];\n            }\n        }\n        return this.el(\"pattern\", attr);\n    };\n    /*\\\n     * Paper.use\n     [ method ]\n     **\n     * Creates a <use> element.\n     - id (string) @optional id of element to link\n     * or\n     - id (Element) @optional element to link\n     **\n     = (object) the `use` element\n     **\n    \\*/\n    proto.use = function (id) {\n        if (id != null) {\n            if (id instanceof Element) {\n                if (!id.attr(\"id\")) {\n                    id.attr({id: Snap._.id(id)});\n                }\n                id = id.attr(\"id\");\n            }\n            if (String(id).charAt() == \"#\") {\n                id = id.substring(1);\n            }\n            return this.el(\"use\", {\"xlink:href\": \"#\" + id});\n        } else {\n            return Element.prototype.use.call(this);\n        }\n    };\n    /*\\\n     * Paper.symbol\n     [ method ]\n     **\n     * Creates a <symbol> element.\n     - vbx (number) @optional viewbox X\n     - vby (number) @optional viewbox Y\n     - vbw (number) @optional viewbox width\n     - vbh (number) @optional viewbox height\n     = (object) the `symbol` element\n     **\n    \\*/\n    proto.symbol = function (vx, vy, vw, vh) {\n        var attr = {};\n        if (vx != null && vy != null && vw != null && vh != null) {\n            attr.viewBox = [vx, vy, vw, vh];\n        }\n\n        return this.el(\"symbol\", attr);\n    };\n    /*\\\n     * Paper.text\n     [ method ]\n     **\n     * Draws a text string\n     **\n     - x (number) x coordinate position\n     - y (number) y coordinate position\n     - text (string|array) The text string to draw or array of strings to nest within separate `<tspan>` elements\n     = (object) the `text` element\n     **\n     > Usage\n     | var t1 = paper.text(50, 50, \"Snap\");\n     | var t2 = paper.text(50, 50, [\"S\",\"n\",\"a\",\"p\"]);\n     | // Text path usage\n     | t1.attr({textpath: \"M10,10L100,100\"});\n     | // or\n     | var pth = paper.path(\"M10,10L100,100\");\n     | t1.attr({textpath: pth});\n    \\*/\n    proto.text = function (x, y, text) {\n        var attr = {};\n        if (is(x, \"object\")) {\n            attr = x;\n        } else if (x != null) {\n            attr = {\n                x: x,\n                y: y,\n                text: text || \"\"\n            };\n        }\n        return this.el(\"text\", attr);\n    };\n    /*\\\n     * Paper.line\n     [ method ]\n     **\n     * Draws a line\n     **\n     - x1 (number) x coordinate position of the start\n     - y1 (number) y coordinate position of the start\n     - x2 (number) x coordinate position of the end\n     - y2 (number) y coordinate position of the end\n     = (object) the `line` element\n     **\n     > Usage\n     | var t1 = paper.line(50, 50, 100, 100);\n    \\*/\n    proto.line = function (x1, y1, x2, y2) {\n        var attr = {};\n        if (is(x1, \"object\")) {\n            attr = x1;\n        } else if (x1 != null) {\n            attr = {\n                x1: x1,\n                x2: x2,\n                y1: y1,\n                y2: y2\n            };\n        }\n        return this.el(\"line\", attr);\n    };\n    /*\\\n     * Paper.polyline\n     [ method ]\n     **\n     * Draws a polyline\n     **\n     - points (array) array of points\n     * or\n     - varargs (…) points\n     = (object) the `polyline` element\n     **\n     > Usage\n     | var p1 = paper.polyline([10, 10, 100, 100]);\n     | var p2 = paper.polyline(10, 10, 100, 100);\n    \\*/\n    proto.polyline = function (points) {\n        if (arguments.length > 1) {\n            points = Array.prototype.slice.call(arguments, 0);\n        }\n        var attr = {};\n        if (is(points, \"object\") && !is(points, \"array\")) {\n            attr = points;\n        } else if (points != null) {\n            attr = {points: points};\n        }\n        return this.el(\"polyline\", attr);\n    };\n    /*\\\n     * Paper.polygon\n     [ method ]\n     **\n     * Draws a polygon. See @Paper.polyline\n    \\*/\n    proto.polygon = function (points) {\n        if (arguments.length > 1) {\n            points = Array.prototype.slice.call(arguments, 0);\n        }\n        var attr = {};\n        if (is(points, \"object\") && !is(points, \"array\")) {\n            attr = points;\n        } else if (points != null) {\n            attr = {points: points};\n        }\n        return this.el(\"polygon\", attr);\n    };\n    // gradients\n    (function () {\n        var $ = Snap._.$;\n        // gradients' helpers\n        function Gstops() {\n            return this.selectAll(\"stop\");\n        }\n        function GaddStop(color, offset) {\n            var stop = $(\"stop\"),\n                attr = {\n                    offset: +offset + \"%\"\n                };\n            color = Snap.color(color);\n            attr[\"stop-color\"] = color.hex;\n            if (color.opacity < 1) {\n                attr[\"stop-opacity\"] = color.opacity;\n            }\n            $(stop, attr);\n            this.node.appendChild(stop);\n            return this;\n        }\n        function GgetBBox() {\n            if (this.type == \"linearGradient\") {\n                var x1 = $(this.node, \"x1\") || 0,\n                    x2 = $(this.node, \"x2\") || 1,\n                    y1 = $(this.node, \"y1\") || 0,\n                    y2 = $(this.node, \"y2\") || 0;\n                return Snap._.box(x1, y1, math.abs(x2 - x1), math.abs(y2 - y1));\n            } else {\n                var cx = this.node.cx || .5,\n                    cy = this.node.cy || .5,\n                    r = this.node.r || 0;\n                return Snap._.box(cx - r, cy - r, r * 2, r * 2);\n            }\n        }\n        function gradient(defs, str) {\n            var grad = eve(\"snap.util.grad.parse\", null, str).firstDefined(),\n                el;\n            if (!grad) {\n                return null;\n            }\n            grad.params.unshift(defs);\n            if (grad.type.toLowerCase() == \"l\") {\n                el = gradientLinear.apply(0, grad.params);\n            } else {\n                el = gradientRadial.apply(0, grad.params);\n            }\n            if (grad.type != grad.type.toLowerCase()) {\n                $(el.node, {\n                    gradientUnits: \"userSpaceOnUse\"\n                });\n            }\n            var stops = grad.stops,\n                len = stops.length,\n                start = 0,\n                j = 0;\n            function seed(i, end) {\n                var step = (end - start) / (i - j);\n                for (var k = j; k < i; k++) {\n                    stops[k].offset = +(+start + step * (k - j)).toFixed(2);\n                }\n                j = i;\n                start = end;\n            }\n            len--;\n            for (var i = 0; i < len; i++) if (\"offset\" in stops[i]) {\n                seed(i, stops[i].offset);\n            }\n            stops[len].offset = stops[len].offset || 100;\n            seed(len, stops[len].offset);\n            for (i = 0; i <= len; i++) {\n                var stop = stops[i];\n                el.addStop(stop.color, stop.offset);\n            }\n            return el;\n        }\n        function gradientLinear(defs, x1, y1, x2, y2) {\n            var el = Snap._.make(\"linearGradient\", defs);\n            el.stops = Gstops;\n            el.addStop = GaddStop;\n            el.getBBox = GgetBBox;\n            if (x1 != null) {\n                $(el.node, {\n                    x1: x1,\n                    y1: y1,\n                    x2: x2,\n                    y2: y2\n                });\n            }\n            return el;\n        }\n        function gradientRadial(defs, cx, cy, r, fx, fy) {\n            var el = Snap._.make(\"radialGradient\", defs);\n            el.stops = Gstops;\n            el.addStop = GaddStop;\n            el.getBBox = GgetBBox;\n            if (cx != null) {\n                $(el.node, {\n                    cx: cx,\n                    cy: cy,\n                    r: r\n                });\n            }\n            if (fx != null && fy != null) {\n                $(el.node, {\n                    fx: fx,\n                    fy: fy\n                });\n            }\n            return el;\n        }\n        /*\\\n         * Paper.gradient\n         [ method ]\n         **\n         * Creates a gradient element\n         **\n         - gradient (string) gradient descriptor\n         > Gradient Descriptor\n         * The gradient descriptor is an expression formatted as\n         * follows: `<type>(<coords>)<colors>`.  The `<type>` can be\n         * either linear or radial.  The uppercase `L` or `R` letters\n         * indicate absolute coordinates offset from the SVG surface.\n         * Lowercase `l` or `r` letters indicate coordinates\n         * calculated relative to the element to which the gradient is\n         * applied.  Coordinates specify a linear gradient vector as\n         * `x1`, `y1`, `x2`, `y2`, or a radial gradient as `cx`, `cy`,\n         * `r` and optional `fx`, `fy` specifying a focal point away\n         * from the center of the circle. Specify `<colors>` as a list\n         * of dash-separated CSS color values.  Each color may be\n         * followed by a custom offset value, separated with a colon\n         * character.\n         > Examples\n         * Linear gradient, relative from top-left corner to bottom-right\n         * corner, from black through red to white:\n         | var g = paper.gradient(\"l(0, 0, 1, 1)#000-#f00-#fff\");\n         * Linear gradient, absolute from (0, 0) to (100, 100), from black\n         * through red at 25% to white:\n         | var g = paper.gradient(\"L(0, 0, 100, 100)#000-#f00:25-#fff\");\n         * Radial gradient, relative from the center of the element with radius\n         * half the width, from black to white:\n         | var g = paper.gradient(\"r(0.5, 0.5, 0.5)#000-#fff\");\n         * To apply the gradient:\n         | paper.circle(50, 50, 40).attr({\n         |     fill: g\n         | });\n         = (object) the `gradient` element\n        \\*/\n        proto.gradient = function (str) {\n            return gradient(this.defs, str);\n        };\n        proto.gradientLinear = function (x1, y1, x2, y2) {\n            return gradientLinear(this.defs, x1, y1, x2, y2);\n        };\n        proto.gradientRadial = function (cx, cy, r, fx, fy) {\n            return gradientRadial(this.defs, cx, cy, r, fx, fy);\n        };\n        /*\\\n         * Paper.toString\n         [ method ]\n         **\n         * Returns SVG code for the @Paper\n         = (string) SVG code for the @Paper\n        \\*/\n        proto.toString = function () {\n            var doc = this.node.ownerDocument,\n                f = doc.createDocumentFragment(),\n                d = doc.createElement(\"div\"),\n                svg = this.node.cloneNode(true),\n                res;\n            f.appendChild(d);\n            d.appendChild(svg);\n            Snap._.$(svg, {xmlns: \"http://www.w3.org/2000/svg\"});\n            res = d.innerHTML;\n            f.removeChild(f.firstChild);\n            return res;\n        };\n        /*\\\n         * Paper.toDataURL\n         [ method ]\n         **\n         * Returns SVG code for the @Paper as Data URI string.\n         = (string) Data URI string\n        \\*/\n        proto.toDataURL = function () {\n            if (window && window.btoa) {\n                return \"data:image/svg+xml;base64,\" + btoa(unescape(encodeURIComponent(this)));\n            }\n        };\n        /*\\\n         * Paper.clear\n         [ method ]\n         **\n         * Removes all child nodes of the paper, except <defs>.\n        \\*/\n        proto.clear = function () {\n            var node = this.node.firstChild,\n                next;\n            while (node) {\n                next = node.nextSibling;\n                if (node.tagName != \"defs\") {\n                    node.parentNode.removeChild(node);\n                } else {\n                    proto.clear.call({node: node});\n                }\n                node = next;\n            }\n        };\n    }());\n});\n\n// Copyright (c) 2013 Adobe Systems Incorporated. All rights reserved.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n// http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\nSnap.plugin(function (Snap, Element, Paper, glob) {\n    var elproto = Element.prototype,\n        is = Snap.is,\n        clone = Snap._.clone,\n        has = \"hasOwnProperty\",\n        p2s = /,?([a-z]),?/gi,\n        toFloat = parseFloat,\n        math = Math,\n        PI = math.PI,\n        mmin = math.min,\n        mmax = math.max,\n        pow = math.pow,\n        abs = math.abs;\n    function paths(ps) {\n        var p = paths.ps = paths.ps || {};\n        if (p[ps]) {\n            p[ps].sleep = 100;\n        } else {\n            p[ps] = {\n                sleep: 100\n            };\n        }\n        setTimeout(function () {\n            for (var key in p) if (p[has](key) && key != ps) {\n                p[key].sleep--;\n                !p[key].sleep && delete p[key];\n            }\n        });\n        return p[ps];\n    }\n    function box(x, y, width, height) {\n        if (x == null) {\n            x = y = width = height = 0;\n        }\n        if (y == null) {\n            y = x.y;\n            width = x.width;\n            height = x.height;\n            x = x.x;\n        }\n        return {\n            x: x,\n            y: y,\n            width: width,\n            w: width,\n            height: height,\n            h: height,\n            x2: x + width,\n            y2: y + height,\n            cx: x + width / 2,\n            cy: y + height / 2,\n            r1: math.min(width, height) / 2,\n            r2: math.max(width, height) / 2,\n            r0: math.sqrt(width * width + height * height) / 2,\n            path: rectPath(x, y, width, height),\n            vb: [x, y, width, height].join(\" \")\n        };\n    }\n    function toString() {\n        return this.join(\",\").replace(p2s, \"$1\");\n    }\n    function pathClone(pathArray) {\n        var res = clone(pathArray);\n        res.toString = toString;\n        return res;\n    }\n    function getPointAtSegmentLength(p1x, p1y, c1x, c1y, c2x, c2y, p2x, p2y, length) {\n        if (length == null) {\n            return bezlen(p1x, p1y, c1x, c1y, c2x, c2y, p2x, p2y);\n        } else {\n            return findDotsAtSegment(p1x, p1y, c1x, c1y, c2x, c2y, p2x, p2y,\n                getTotLen(p1x, p1y, c1x, c1y, c2x, c2y, p2x, p2y, length));\n        }\n    }\n    function getLengthFactory(istotal, subpath) {\n        function O(val) {\n            return +(+val).toFixed(3);\n        }\n        return Snap._.cacher(function (path, length, onlystart) {\n            if (path instanceof Element) {\n                path = path.attr(\"d\");\n            }\n            path = path2curve(path);\n            var x, y, p, l, sp = \"\", subpaths = {}, point,\n                len = 0;\n            for (var i = 0, ii = path.length; i < ii; i++) {\n                p = path[i];\n                if (p[0] == \"M\") {\n                    x = +p[1];\n                    y = +p[2];\n                } else {\n                    l = getPointAtSegmentLength(x, y, p[1], p[2], p[3], p[4], p[5], p[6]);\n                    if (len + l > length) {\n                        if (subpath && !subpaths.start) {\n                            point = getPointAtSegmentLength(x, y, p[1], p[2], p[3], p[4], p[5], p[6], length - len);\n                            sp += [\n                                \"C\" + O(point.start.x),\n                                O(point.start.y),\n                                O(point.m.x),\n                                O(point.m.y),\n                                O(point.x),\n                                O(point.y)\n                            ];\n                            if (onlystart) {return sp;}\n                            subpaths.start = sp;\n                            sp = [\n                                \"M\" + O(point.x),\n                                O(point.y) + \"C\" + O(point.n.x),\n                                O(point.n.y),\n                                O(point.end.x),\n                                O(point.end.y),\n                                O(p[5]),\n                                O(p[6])\n                            ].join();\n                            len += l;\n                            x = +p[5];\n                            y = +p[6];\n                            continue;\n                        }\n                        if (!istotal && !subpath) {\n                            point = getPointAtSegmentLength(x, y, p[1], p[2], p[3], p[4], p[5], p[6], length - len);\n                            return point;\n                        }\n                    }\n                    len += l;\n                    x = +p[5];\n                    y = +p[6];\n                }\n                sp += p.shift() + p;\n            }\n            subpaths.end = sp;\n            point = istotal ? len : subpath ? subpaths : findDotsAtSegment(x, y, p[0], p[1], p[2], p[3], p[4], p[5], 1);\n            return point;\n        }, null, Snap._.clone);\n    }\n    var getTotalLength = getLengthFactory(1),\n        getPointAtLength = getLengthFactory(),\n        getSubpathsAtLength = getLengthFactory(0, 1);\n    function findDotsAtSegment(p1x, p1y, c1x, c1y, c2x, c2y, p2x, p2y, t) {\n        var t1 = 1 - t,\n            t13 = pow(t1, 3),\n            t12 = pow(t1, 2),\n            t2 = t * t,\n            t3 = t2 * t,\n            x = t13 * p1x + t12 * 3 * t * c1x + t1 * 3 * t * t * c2x + t3 * p2x,\n            y = t13 * p1y + t12 * 3 * t * c1y + t1 * 3 * t * t * c2y + t3 * p2y,\n            mx = p1x + 2 * t * (c1x - p1x) + t2 * (c2x - 2 * c1x + p1x),\n            my = p1y + 2 * t * (c1y - p1y) + t2 * (c2y - 2 * c1y + p1y),\n            nx = c1x + 2 * t * (c2x - c1x) + t2 * (p2x - 2 * c2x + c1x),\n            ny = c1y + 2 * t * (c2y - c1y) + t2 * (p2y - 2 * c2y + c1y),\n            ax = t1 * p1x + t * c1x,\n            ay = t1 * p1y + t * c1y,\n            cx = t1 * c2x + t * p2x,\n            cy = t1 * c2y + t * p2y,\n            alpha = (90 - math.atan2(mx - nx, my - ny) * 180 / PI);\n        // (mx > nx || my < ny) && (alpha += 180);\n        return {\n            x: x,\n            y: y,\n            m: {x: mx, y: my},\n            n: {x: nx, y: ny},\n            start: {x: ax, y: ay},\n            end: {x: cx, y: cy},\n            alpha: alpha\n        };\n    }\n    function bezierBBox(p1x, p1y, c1x, c1y, c2x, c2y, p2x, p2y) {\n        if (!Snap.is(p1x, \"array\")) {\n            p1x = [p1x, p1y, c1x, c1y, c2x, c2y, p2x, p2y];\n        }\n        var bbox = curveDim.apply(null, p1x);\n        return box(\n            bbox.min.x,\n            bbox.min.y,\n            bbox.max.x - bbox.min.x,\n            bbox.max.y - bbox.min.y\n        );\n    }\n    function isPointInsideBBox(bbox, x, y) {\n        return  x >= bbox.x &&\n                x <= bbox.x + bbox.width &&\n                y >= bbox.y &&\n                y <= bbox.y + bbox.height;\n    }\n    function isBBoxIntersect(bbox1, bbox2) {\n        bbox1 = box(bbox1);\n        bbox2 = box(bbox2);\n        return isPointInsideBBox(bbox2, bbox1.x, bbox1.y)\n            || isPointInsideBBox(bbox2, bbox1.x2, bbox1.y)\n            || isPointInsideBBox(bbox2, bbox1.x, bbox1.y2)\n            || isPointInsideBBox(bbox2, bbox1.x2, bbox1.y2)\n            || isPointInsideBBox(bbox1, bbox2.x, bbox2.y)\n            || isPointInsideBBox(bbox1, bbox2.x2, bbox2.y)\n            || isPointInsideBBox(bbox1, bbox2.x, bbox2.y2)\n            || isPointInsideBBox(bbox1, bbox2.x2, bbox2.y2)\n            || (bbox1.x < bbox2.x2 && bbox1.x > bbox2.x\n                || bbox2.x < bbox1.x2 && bbox2.x > bbox1.x)\n            && (bbox1.y < bbox2.y2 && bbox1.y > bbox2.y\n                || bbox2.y < bbox1.y2 && bbox2.y > bbox1.y);\n    }\n    function base3(t, p1, p2, p3, p4) {\n        var t1 = -3 * p1 + 9 * p2 - 9 * p3 + 3 * p4,\n            t2 = t * t1 + 6 * p1 - 12 * p2 + 6 * p3;\n        return t * t2 - 3 * p1 + 3 * p2;\n    }\n    function bezlen(x1, y1, x2, y2, x3, y3, x4, y4, z) {\n        if (z == null) {\n            z = 1;\n        }\n        z = z > 1 ? 1 : z < 0 ? 0 : z;\n        var z2 = z / 2,\n            n = 12,\n            Tvalues = [-.1252,.1252,-.3678,.3678,-.5873,.5873,-.7699,.7699,-.9041,.9041,-.9816,.9816],\n            Cvalues = [0.2491,0.2491,0.2335,0.2335,0.2032,0.2032,0.1601,0.1601,0.1069,0.1069,0.0472,0.0472],\n            sum = 0;\n        for (var i = 0; i < n; i++) {\n            var ct = z2 * Tvalues[i] + z2,\n                xbase = base3(ct, x1, x2, x3, x4),\n                ybase = base3(ct, y1, y2, y3, y4),\n                comb = xbase * xbase + ybase * ybase;\n            sum += Cvalues[i] * math.sqrt(comb);\n        }\n        return z2 * sum;\n    }\n    function getTotLen(x1, y1, x2, y2, x3, y3, x4, y4, ll) {\n        if (ll < 0 || bezlen(x1, y1, x2, y2, x3, y3, x4, y4) < ll) {\n            return;\n        }\n        var t = 1,\n            step = t / 2,\n            t2 = t - step,\n            l,\n            e = .01;\n        l = bezlen(x1, y1, x2, y2, x3, y3, x4, y4, t2);\n        while (abs(l - ll) > e) {\n            step /= 2;\n            t2 += (l < ll ? 1 : -1) * step;\n            l = bezlen(x1, y1, x2, y2, x3, y3, x4, y4, t2);\n        }\n        return t2;\n    }\n    function intersect(x1, y1, x2, y2, x3, y3, x4, y4) {\n        if (\n            mmax(x1, x2) < mmin(x3, x4) ||\n            mmin(x1, x2) > mmax(x3, x4) ||\n            mmax(y1, y2) < mmin(y3, y4) ||\n            mmin(y1, y2) > mmax(y3, y4)\n        ) {\n            return;\n        }\n        var nx = (x1 * y2 - y1 * x2) * (x3 - x4) - (x1 - x2) * (x3 * y4 - y3 * x4),\n            ny = (x1 * y2 - y1 * x2) * (y3 - y4) - (y1 - y2) * (x3 * y4 - y3 * x4),\n            denominator = (x1 - x2) * (y3 - y4) - (y1 - y2) * (x3 - x4);\n\n        if (!denominator) {\n            return;\n        }\n        var px = nx / denominator,\n            py = ny / denominator,\n            px2 = +px.toFixed(2),\n            py2 = +py.toFixed(2);\n        if (\n            px2 < +mmin(x1, x2).toFixed(2) ||\n            px2 > +mmax(x1, x2).toFixed(2) ||\n            px2 < +mmin(x3, x4).toFixed(2) ||\n            px2 > +mmax(x3, x4).toFixed(2) ||\n            py2 < +mmin(y1, y2).toFixed(2) ||\n            py2 > +mmax(y1, y2).toFixed(2) ||\n            py2 < +mmin(y3, y4).toFixed(2) ||\n            py2 > +mmax(y3, y4).toFixed(2)\n        ) {\n            return;\n        }\n        return {x: px, y: py};\n    }\n    function inter(bez1, bez2) {\n        return interHelper(bez1, bez2);\n    }\n    function interCount(bez1, bez2) {\n        return interHelper(bez1, bez2, 1);\n    }\n    function interHelper(bez1, bez2, justCount) {\n        var bbox1 = bezierBBox(bez1),\n            bbox2 = bezierBBox(bez2);\n        if (!isBBoxIntersect(bbox1, bbox2)) {\n            return justCount ? 0 : [];\n        }\n        var l1 = bezlen.apply(0, bez1),\n            l2 = bezlen.apply(0, bez2),\n            n1 = ~~(l1 / 8),\n            n2 = ~~(l2 / 8),\n            dots1 = [],\n            dots2 = [],\n            xy = {},\n            res = justCount ? 0 : [];\n        for (var i = 0; i < n1 + 1; i++) {\n            var p = findDotsAtSegment.apply(0, bez1.concat(i / n1));\n            dots1.push({x: p.x, y: p.y, t: i / n1});\n        }\n        for (i = 0; i < n2 + 1; i++) {\n            p = findDotsAtSegment.apply(0, bez2.concat(i / n2));\n            dots2.push({x: p.x, y: p.y, t: i / n2});\n        }\n        for (i = 0; i < n1; i++) {\n            for (var j = 0; j < n2; j++) {\n                var di = dots1[i],\n                    di1 = dots1[i + 1],\n                    dj = dots2[j],\n                    dj1 = dots2[j + 1],\n                    ci = abs(di1.x - di.x) < .001 ? \"y\" : \"x\",\n                    cj = abs(dj1.x - dj.x) < .001 ? \"y\" : \"x\",\n                    is = intersect(di.x, di.y, di1.x, di1.y, dj.x, dj.y, dj1.x, dj1.y);\n                if (is) {\n                    if (xy[is.x.toFixed(4)] == is.y.toFixed(4)) {\n                        continue;\n                    }\n                    xy[is.x.toFixed(4)] = is.y.toFixed(4);\n                    var t1 = di.t + abs((is[ci] - di[ci]) / (di1[ci] - di[ci])) * (di1.t - di.t),\n                        t2 = dj.t + abs((is[cj] - dj[cj]) / (dj1[cj] - dj[cj])) * (dj1.t - dj.t);\n                    if (t1 >= 0 && t1 <= 1 && t2 >= 0 && t2 <= 1) {\n                        if (justCount) {\n                            res++;\n                        } else {\n                            res.push({\n                                x: is.x,\n                                y: is.y,\n                                t1: t1,\n                                t2: t2\n                            });\n                        }\n                    }\n                }\n            }\n        }\n        return res;\n    }\n    function pathIntersection(path1, path2) {\n        return interPathHelper(path1, path2);\n    }\n    function pathIntersectionNumber(path1, path2) {\n        return interPathHelper(path1, path2, 1);\n    }\n    function interPathHelper(path1, path2, justCount) {\n        path1 = path2curve(path1);\n        path2 = path2curve(path2);\n        var x1, y1, x2, y2, x1m, y1m, x2m, y2m, bez1, bez2,\n            res = justCount ? 0 : [];\n        for (var i = 0, ii = path1.length; i < ii; i++) {\n            var pi = path1[i];\n            if (pi[0] == \"M\") {\n                x1 = x1m = pi[1];\n                y1 = y1m = pi[2];\n            } else {\n                if (pi[0] == \"C\") {\n                    bez1 = [x1, y1].concat(pi.slice(1));\n                    x1 = bez1[6];\n                    y1 = bez1[7];\n                } else {\n                    bez1 = [x1, y1, x1, y1, x1m, y1m, x1m, y1m];\n                    x1 = x1m;\n                    y1 = y1m;\n                }\n                for (var j = 0, jj = path2.length; j < jj; j++) {\n                    var pj = path2[j];\n                    if (pj[0] == \"M\") {\n                        x2 = x2m = pj[1];\n                        y2 = y2m = pj[2];\n                    } else {\n                        if (pj[0] == \"C\") {\n                            bez2 = [x2, y2].concat(pj.slice(1));\n                            x2 = bez2[6];\n                            y2 = bez2[7];\n                        } else {\n                            bez2 = [x2, y2, x2, y2, x2m, y2m, x2m, y2m];\n                            x2 = x2m;\n                            y2 = y2m;\n                        }\n                        var intr = interHelper(bez1, bez2, justCount);\n                        if (justCount) {\n                            res += intr;\n                        } else {\n                            for (var k = 0, kk = intr.length; k < kk; k++) {\n                                intr[k].segment1 = i;\n                                intr[k].segment2 = j;\n                                intr[k].bez1 = bez1;\n                                intr[k].bez2 = bez2;\n                            }\n                            res = res.concat(intr);\n                        }\n                    }\n                }\n            }\n        }\n        return res;\n    }\n    function isPointInsidePath(path, x, y) {\n        var bbox = pathBBox(path);\n        return isPointInsideBBox(bbox, x, y) &&\n               interPathHelper(path, [[\"M\", x, y], [\"H\", bbox.x2 + 10]], 1) % 2 == 1;\n    }\n    function pathBBox(path) {\n        var pth = paths(path);\n        if (pth.bbox) {\n            return clone(pth.bbox);\n        }\n        if (!path) {\n            return box();\n        }\n        path = path2curve(path);\n        var x = 0,\n            y = 0,\n            X = [],\n            Y = [],\n            p;\n        for (var i = 0, ii = path.length; i < ii; i++) {\n            p = path[i];\n            if (p[0] == \"M\") {\n                x = p[1];\n                y = p[2];\n                X.push(x);\n                Y.push(y);\n            } else {\n                var dim = curveDim(x, y, p[1], p[2], p[3], p[4], p[5], p[6]);\n                X = X.concat(dim.min.x, dim.max.x);\n                Y = Y.concat(dim.min.y, dim.max.y);\n                x = p[5];\n                y = p[6];\n            }\n        }\n        var xmin = mmin.apply(0, X),\n            ymin = mmin.apply(0, Y),\n            xmax = mmax.apply(0, X),\n            ymax = mmax.apply(0, Y),\n            bb = box(xmin, ymin, xmax - xmin, ymax - ymin);\n        pth.bbox = clone(bb);\n        return bb;\n    }\n    function rectPath(x, y, w, h, r) {\n        if (r) {\n            return [\n                [\"M\", +x + (+r), y],\n                [\"l\", w - r * 2, 0],\n                [\"a\", r, r, 0, 0, 1, r, r],\n                [\"l\", 0, h - r * 2],\n                [\"a\", r, r, 0, 0, 1, -r, r],\n                [\"l\", r * 2 - w, 0],\n                [\"a\", r, r, 0, 0, 1, -r, -r],\n                [\"l\", 0, r * 2 - h],\n                [\"a\", r, r, 0, 0, 1, r, -r],\n                [\"z\"]\n            ];\n        }\n        var res = [[\"M\", x, y], [\"l\", w, 0], [\"l\", 0, h], [\"l\", -w, 0], [\"z\"]];\n        res.toString = toString;\n        return res;\n    }\n    function ellipsePath(x, y, rx, ry, a) {\n        if (a == null && ry == null) {\n            ry = rx;\n        }\n        x = +x;\n        y = +y;\n        rx = +rx;\n        ry = +ry;\n        if (a != null) {\n            var rad = Math.PI / 180,\n                x1 = x + rx * Math.cos(-ry * rad),\n                x2 = x + rx * Math.cos(-a * rad),\n                y1 = y + rx * Math.sin(-ry * rad),\n                y2 = y + rx * Math.sin(-a * rad),\n                res = [[\"M\", x1, y1], [\"A\", rx, rx, 0, +(a - ry > 180), 0, x2, y2]];\n        } else {\n            res = [\n                [\"M\", x, y],\n                [\"m\", 0, -ry],\n                [\"a\", rx, ry, 0, 1, 1, 0, 2 * ry],\n                [\"a\", rx, ry, 0, 1, 1, 0, -2 * ry],\n                [\"z\"]\n            ];\n        }\n        res.toString = toString;\n        return res;\n    }\n    var unit2px = Snap._unit2px,\n        getPath = {\n        path: function (el) {\n            return el.attr(\"path\");\n        },\n        circle: function (el) {\n            var attr = unit2px(el);\n            return ellipsePath(attr.cx, attr.cy, attr.r);\n        },\n        ellipse: function (el) {\n            var attr = unit2px(el);\n            return ellipsePath(attr.cx || 0, attr.cy || 0, attr.rx, attr.ry);\n        },\n        rect: function (el) {\n            var attr = unit2px(el);\n            return rectPath(attr.x || 0, attr.y || 0, attr.width, attr.height, attr.rx, attr.ry);\n        },\n        image: function (el) {\n            var attr = unit2px(el);\n            return rectPath(attr.x || 0, attr.y || 0, attr.width, attr.height);\n        },\n        line: function (el) {\n            return \"M\" + [el.attr(\"x1\") || 0, el.attr(\"y1\") || 0, el.attr(\"x2\"), el.attr(\"y2\")];\n        },\n        polyline: function (el) {\n            return \"M\" + el.attr(\"points\");\n        },\n        polygon: function (el) {\n            return \"M\" + el.attr(\"points\") + \"z\";\n        },\n        deflt: function (el) {\n            var bbox = el.node.getBBox();\n            return rectPath(bbox.x, bbox.y, bbox.width, bbox.height);\n        }\n    };\n    function pathToRelative(pathArray) {\n        var pth = paths(pathArray),\n            lowerCase = String.prototype.toLowerCase;\n        if (pth.rel) {\n            return pathClone(pth.rel);\n        }\n        if (!Snap.is(pathArray, \"array\") || !Snap.is(pathArray && pathArray[0], \"array\")) {\n            pathArray = Snap.parsePathString(pathArray);\n        }\n        var res = [],\n            x = 0,\n            y = 0,\n            mx = 0,\n            my = 0,\n            start = 0;\n        if (pathArray[0][0] == \"M\") {\n            x = pathArray[0][1];\n            y = pathArray[0][2];\n            mx = x;\n            my = y;\n            start++;\n            res.push([\"M\", x, y]);\n        }\n        for (var i = start, ii = pathArray.length; i < ii; i++) {\n            var r = res[i] = [],\n                pa = pathArray[i];\n            if (pa[0] != lowerCase.call(pa[0])) {\n                r[0] = lowerCase.call(pa[0]);\n                switch (r[0]) {\n                    case \"a\":\n                        r[1] = pa[1];\n                        r[2] = pa[2];\n                        r[3] = pa[3];\n                        r[4] = pa[4];\n                        r[5] = pa[5];\n                        r[6] = +(pa[6] - x).toFixed(3);\n                        r[7] = +(pa[7] - y).toFixed(3);\n                        break;\n                    case \"v\":\n                        r[1] = +(pa[1] - y).toFixed(3);\n                        break;\n                    case \"m\":\n                        mx = pa[1];\n                        my = pa[2];\n                    default:\n                        for (var j = 1, jj = pa.length; j < jj; j++) {\n                            r[j] = +(pa[j] - ((j % 2) ? x : y)).toFixed(3);\n                        }\n                }\n            } else {\n                r = res[i] = [];\n                if (pa[0] == \"m\") {\n                    mx = pa[1] + x;\n                    my = pa[2] + y;\n                }\n                for (var k = 0, kk = pa.length; k < kk; k++) {\n                    res[i][k] = pa[k];\n                }\n            }\n            var len = res[i].length;\n            switch (res[i][0]) {\n                case \"z\":\n                    x = mx;\n                    y = my;\n                    break;\n                case \"h\":\n                    x += +res[i][len - 1];\n                    break;\n                case \"v\":\n                    y += +res[i][len - 1];\n                    break;\n                default:\n                    x += +res[i][len - 2];\n                    y += +res[i][len - 1];\n            }\n        }\n        res.toString = toString;\n        pth.rel = pathClone(res);\n        return res;\n    }\n    function pathToAbsolute(pathArray) {\n        var pth = paths(pathArray);\n        if (pth.abs) {\n            return pathClone(pth.abs);\n        }\n        if (!is(pathArray, \"array\") || !is(pathArray && pathArray[0], \"array\")) { // rough assumption\n            pathArray = Snap.parsePathString(pathArray);\n        }\n        if (!pathArray || !pathArray.length) {\n            return [[\"M\", 0, 0]];\n        }\n        var res = [],\n            x = 0,\n            y = 0,\n            mx = 0,\n            my = 0,\n            start = 0,\n            pa0;\n        if (pathArray[0][0] == \"M\") {\n            x = +pathArray[0][1];\n            y = +pathArray[0][2];\n            mx = x;\n            my = y;\n            start++;\n            res[0] = [\"M\", x, y];\n        }\n        var crz = pathArray.length == 3 &&\n            pathArray[0][0] == \"M\" &&\n            pathArray[1][0].toUpperCase() == \"R\" &&\n            pathArray[2][0].toUpperCase() == \"Z\";\n        for (var r, pa, i = start, ii = pathArray.length; i < ii; i++) {\n            res.push(r = []);\n            pa = pathArray[i];\n            pa0 = pa[0];\n            if (pa0 != pa0.toUpperCase()) {\n                r[0] = pa0.toUpperCase();\n                switch (r[0]) {\n                    case \"A\":\n                        r[1] = pa[1];\n                        r[2] = pa[2];\n                        r[3] = pa[3];\n                        r[4] = pa[4];\n                        r[5] = pa[5];\n                        r[6] = +pa[6] + x;\n                        r[7] = +pa[7] + y;\n                        break;\n                    case \"V\":\n                        r[1] = +pa[1] + y;\n                        break;\n                    case \"H\":\n                        r[1] = +pa[1] + x;\n                        break;\n                    case \"R\":\n                        var dots = [x, y].concat(pa.slice(1));\n                        for (var j = 2, jj = dots.length; j < jj; j++) {\n                            dots[j] = +dots[j] + x;\n                            dots[++j] = +dots[j] + y;\n                        }\n                        res.pop();\n                        res = res.concat(catmullRom2bezier(dots, crz));\n                        break;\n                    case \"O\":\n                        res.pop();\n                        dots = ellipsePath(x, y, pa[1], pa[2]);\n                        dots.push(dots[0]);\n                        res = res.concat(dots);\n                        break;\n                    case \"U\":\n                        res.pop();\n                        res = res.concat(ellipsePath(x, y, pa[1], pa[2], pa[3]));\n                        r = [\"U\"].concat(res[res.length - 1].slice(-2));\n                        break;\n                    case \"M\":\n                        mx = +pa[1] + x;\n                        my = +pa[2] + y;\n                    default:\n                        for (j = 1, jj = pa.length; j < jj; j++) {\n                            r[j] = +pa[j] + ((j % 2) ? x : y);\n                        }\n                }\n            } else if (pa0 == \"R\") {\n                dots = [x, y].concat(pa.slice(1));\n                res.pop();\n                res = res.concat(catmullRom2bezier(dots, crz));\n                r = [\"R\"].concat(pa.slice(-2));\n            } else if (pa0 == \"O\") {\n                res.pop();\n                dots = ellipsePath(x, y, pa[1], pa[2]);\n                dots.push(dots[0]);\n                res = res.concat(dots);\n            } else if (pa0 == \"U\") {\n                res.pop();\n                res = res.concat(ellipsePath(x, y, pa[1], pa[2], pa[3]));\n                r = [\"U\"].concat(res[res.length - 1].slice(-2));\n            } else {\n                for (var k = 0, kk = pa.length; k < kk; k++) {\n                    r[k] = pa[k];\n                }\n            }\n            pa0 = pa0.toUpperCase();\n            if (pa0 != \"O\") {\n                switch (r[0]) {\n                    case \"Z\":\n                        x = +mx;\n                        y = +my;\n                        break;\n                    case \"H\":\n                        x = r[1];\n                        break;\n                    case \"V\":\n                        y = r[1];\n                        break;\n                    case \"M\":\n                        mx = r[r.length - 2];\n                        my = r[r.length - 1];\n                    default:\n                        x = r[r.length - 2];\n                        y = r[r.length - 1];\n                }\n            }\n        }\n        res.toString = toString;\n        pth.abs = pathClone(res);\n        return res;\n    }\n    function l2c(x1, y1, x2, y2) {\n        return [x1, y1, x2, y2, x2, y2];\n    }\n    function q2c(x1, y1, ax, ay, x2, y2) {\n        var _13 = 1 / 3,\n            _23 = 2 / 3;\n        return [\n                _13 * x1 + _23 * ax,\n                _13 * y1 + _23 * ay,\n                _13 * x2 + _23 * ax,\n                _13 * y2 + _23 * ay,\n                x2,\n                y2\n            ];\n    }\n    function a2c(x1, y1, rx, ry, angle, large_arc_flag, sweep_flag, x2, y2, recursive) {\n        // for more information of where this math came from visit:\n        // http://www.w3.org/TR/SVG11/implnote.html#ArcImplementationNotes\n        var _120 = PI * 120 / 180,\n            rad = PI / 180 * (+angle || 0),\n            res = [],\n            xy,\n            rotate = Snap._.cacher(function (x, y, rad) {\n                var X = x * math.cos(rad) - y * math.sin(rad),\n                    Y = x * math.sin(rad) + y * math.cos(rad);\n                return {x: X, y: Y};\n            });\n        if (!recursive) {\n            xy = rotate(x1, y1, -rad);\n            x1 = xy.x;\n            y1 = xy.y;\n            xy = rotate(x2, y2, -rad);\n            x2 = xy.x;\n            y2 = xy.y;\n            var cos = math.cos(PI / 180 * angle),\n                sin = math.sin(PI / 180 * angle),\n                x = (x1 - x2) / 2,\n                y = (y1 - y2) / 2;\n            var h = (x * x) / (rx * rx) + (y * y) / (ry * ry);\n            if (h > 1) {\n                h = math.sqrt(h);\n                rx = h * rx;\n                ry = h * ry;\n            }\n            var rx2 = rx * rx,\n                ry2 = ry * ry,\n                k = (large_arc_flag == sweep_flag ? -1 : 1) *\n                    math.sqrt(abs((rx2 * ry2 - rx2 * y * y - ry2 * x * x) / (rx2 * y * y + ry2 * x * x))),\n                cx = k * rx * y / ry + (x1 + x2) / 2,\n                cy = k * -ry * x / rx + (y1 + y2) / 2,\n                f1 = math.asin(((y1 - cy) / ry).toFixed(9)),\n                f2 = math.asin(((y2 - cy) / ry).toFixed(9));\n\n            f1 = x1 < cx ? PI - f1 : f1;\n            f2 = x2 < cx ? PI - f2 : f2;\n            f1 < 0 && (f1 = PI * 2 + f1);\n            f2 < 0 && (f2 = PI * 2 + f2);\n            if (sweep_flag && f1 > f2) {\n                f1 = f1 - PI * 2;\n            }\n            if (!sweep_flag && f2 > f1) {\n                f2 = f2 - PI * 2;\n            }\n        } else {\n            f1 = recursive[0];\n            f2 = recursive[1];\n            cx = recursive[2];\n            cy = recursive[3];\n        }\n        var df = f2 - f1;\n        if (abs(df) > _120) {\n            var f2old = f2,\n                x2old = x2,\n                y2old = y2;\n            f2 = f1 + _120 * (sweep_flag && f2 > f1 ? 1 : -1);\n            x2 = cx + rx * math.cos(f2);\n            y2 = cy + ry * math.sin(f2);\n            res = a2c(x2, y2, rx, ry, angle, 0, sweep_flag, x2old, y2old, [f2, f2old, cx, cy]);\n        }\n        df = f2 - f1;\n        var c1 = math.cos(f1),\n            s1 = math.sin(f1),\n            c2 = math.cos(f2),\n            s2 = math.sin(f2),\n            t = math.tan(df / 4),\n            hx = 4 / 3 * rx * t,\n            hy = 4 / 3 * ry * t,\n            m1 = [x1, y1],\n            m2 = [x1 + hx * s1, y1 - hy * c1],\n            m3 = [x2 + hx * s2, y2 - hy * c2],\n            m4 = [x2, y2];\n        m2[0] = 2 * m1[0] - m2[0];\n        m2[1] = 2 * m1[1] - m2[1];\n        if (recursive) {\n            return [m2, m3, m4].concat(res);\n        } else {\n            res = [m2, m3, m4].concat(res).join().split(\",\");\n            var newres = [];\n            for (var i = 0, ii = res.length; i < ii; i++) {\n                newres[i] = i % 2 ? rotate(res[i - 1], res[i], rad).y : rotate(res[i], res[i + 1], rad).x;\n            }\n            return newres;\n        }\n    }\n    function findDotAtSegment(p1x, p1y, c1x, c1y, c2x, c2y, p2x, p2y, t) {\n        var t1 = 1 - t;\n        return {\n            x: pow(t1, 3) * p1x + pow(t1, 2) * 3 * t * c1x + t1 * 3 * t * t * c2x + pow(t, 3) * p2x,\n            y: pow(t1, 3) * p1y + pow(t1, 2) * 3 * t * c1y + t1 * 3 * t * t * c2y + pow(t, 3) * p2y\n        };\n    }\n\n    // Returns bounding box of cubic bezier curve.\n    // Source: http://blog.hackers-cafe.net/2009/06/how-to-calculate-bezier-curves-bounding.html\n    // Original version: NISHIO Hirokazu\n    // Modifications: https://github.com/timo22345\n    function curveDim(x0, y0, x1, y1, x2, y2, x3, y3) {\n        var tvalues = [],\n            bounds = [[], []],\n            a, b, c, t, t1, t2, b2ac, sqrtb2ac;\n        for (var i = 0; i < 2; ++i) {\n            if (i == 0) {\n                b = 6 * x0 - 12 * x1 + 6 * x2;\n                a = -3 * x0 + 9 * x1 - 9 * x2 + 3 * x3;\n                c = 3 * x1 - 3 * x0;\n            } else {\n                b = 6 * y0 - 12 * y1 + 6 * y2;\n                a = -3 * y0 + 9 * y1 - 9 * y2 + 3 * y3;\n                c = 3 * y1 - 3 * y0;\n            }\n            if (abs(a) < 1e-12) {\n                if (abs(b) < 1e-12) {\n                    continue;\n                }\n                t = -c / b;\n                if (0 < t && t < 1) {\n                    tvalues.push(t);\n                }\n                continue;\n            }\n            b2ac = b * b - 4 * c * a;\n            sqrtb2ac = math.sqrt(b2ac);\n            if (b2ac < 0) {\n                continue;\n            }\n            t1 = (-b + sqrtb2ac) / (2 * a);\n            if (0 < t1 && t1 < 1) {\n                tvalues.push(t1);\n            }\n            t2 = (-b - sqrtb2ac) / (2 * a);\n            if (0 < t2 && t2 < 1) {\n                tvalues.push(t2);\n            }\n        }\n\n        var x, y, j = tvalues.length,\n            jlen = j,\n            mt;\n        while (j--) {\n            t = tvalues[j];\n            mt = 1 - t;\n            bounds[0][j] = (mt * mt * mt * x0) + (3 * mt * mt * t * x1) + (3 * mt * t * t * x2) + (t * t * t * x3);\n            bounds[1][j] = (mt * mt * mt * y0) + (3 * mt * mt * t * y1) + (3 * mt * t * t * y2) + (t * t * t * y3);\n        }\n\n        bounds[0][jlen] = x0;\n        bounds[1][jlen] = y0;\n        bounds[0][jlen + 1] = x3;\n        bounds[1][jlen + 1] = y3;\n        bounds[0].length = bounds[1].length = jlen + 2;\n\n\n        return {\n          min: {x: mmin.apply(0, bounds[0]), y: mmin.apply(0, bounds[1])},\n          max: {x: mmax.apply(0, bounds[0]), y: mmax.apply(0, bounds[1])}\n        };\n    }\n\n    function path2curve(path, path2) {\n        var pth = !path2 && paths(path);\n        if (!path2 && pth.curve) {\n            return pathClone(pth.curve);\n        }\n        var p = pathToAbsolute(path),\n            p2 = path2 && pathToAbsolute(path2),\n            attrs = {x: 0, y: 0, bx: 0, by: 0, X: 0, Y: 0, qx: null, qy: null},\n            attrs2 = {x: 0, y: 0, bx: 0, by: 0, X: 0, Y: 0, qx: null, qy: null},\n            processPath = function (path, d, pcom) {\n                var nx, ny;\n                if (!path) {\n                    return [\"C\", d.x, d.y, d.x, d.y, d.x, d.y];\n                }\n                !(path[0] in {T: 1, Q: 1}) && (d.qx = d.qy = null);\n                switch (path[0]) {\n                    case \"M\":\n                        d.X = path[1];\n                        d.Y = path[2];\n                        break;\n                    case \"A\":\n                        path = [\"C\"].concat(a2c.apply(0, [d.x, d.y].concat(path.slice(1))));\n                        break;\n                    case \"S\":\n                        if (pcom == \"C\" || pcom == \"S\") { // In \"S\" case we have to take into account, if the previous command is C/S.\n                            nx = d.x * 2 - d.bx;          // And reflect the previous\n                            ny = d.y * 2 - d.by;          // command's control point relative to the current point.\n                        }\n                        else {                            // or some else or nothing\n                            nx = d.x;\n                            ny = d.y;\n                        }\n                        path = [\"C\", nx, ny].concat(path.slice(1));\n                        break;\n                    case \"T\":\n                        if (pcom == \"Q\" || pcom == \"T\") { // In \"T\" case we have to take into account, if the previous command is Q/T.\n                            d.qx = d.x * 2 - d.qx;        // And make a reflection similar\n                            d.qy = d.y * 2 - d.qy;        // to case \"S\".\n                        }\n                        else {                            // or something else or nothing\n                            d.qx = d.x;\n                            d.qy = d.y;\n                        }\n                        path = [\"C\"].concat(q2c(d.x, d.y, d.qx, d.qy, path[1], path[2]));\n                        break;\n                    case \"Q\":\n                        d.qx = path[1];\n                        d.qy = path[2];\n                        path = [\"C\"].concat(q2c(d.x, d.y, path[1], path[2], path[3], path[4]));\n                        break;\n                    case \"L\":\n                        path = [\"C\"].concat(l2c(d.x, d.y, path[1], path[2]));\n                        break;\n                    case \"H\":\n                        path = [\"C\"].concat(l2c(d.x, d.y, path[1], d.y));\n                        break;\n                    case \"V\":\n                        path = [\"C\"].concat(l2c(d.x, d.y, d.x, path[1]));\n                        break;\n                    case \"Z\":\n                        path = [\"C\"].concat(l2c(d.x, d.y, d.X, d.Y));\n                        break;\n                }\n                return path;\n            },\n            fixArc = function (pp, i) {\n                if (pp[i].length > 7) {\n                    pp[i].shift();\n                    var pi = pp[i];\n                    while (pi.length) {\n                        pcoms1[i] = \"A\"; // if created multiple C:s, their original seg is saved\n                        p2 && (pcoms2[i] = \"A\"); // the same as above\n                        pp.splice(i++, 0, [\"C\"].concat(pi.splice(0, 6)));\n                    }\n                    pp.splice(i, 1);\n                    ii = mmax(p.length, p2 && p2.length || 0);\n                }\n            },\n            fixM = function (path1, path2, a1, a2, i) {\n                if (path1 && path2 && path1[i][0] == \"M\" && path2[i][0] != \"M\") {\n                    path2.splice(i, 0, [\"M\", a2.x, a2.y]);\n                    a1.bx = 0;\n                    a1.by = 0;\n                    a1.x = path1[i][1];\n                    a1.y = path1[i][2];\n                    ii = mmax(p.length, p2 && p2.length || 0);\n                }\n            },\n            pcoms1 = [], // path commands of original path p\n            pcoms2 = [], // path commands of original path p2\n            pfirst = \"\", // temporary holder for original path command\n            pcom = \"\"; // holder for previous path command of original path\n        for (var i = 0, ii = mmax(p.length, p2 && p2.length || 0); i < ii; i++) {\n            p[i] && (pfirst = p[i][0]); // save current path command\n\n            if (pfirst != \"C\") // C is not saved yet, because it may be result of conversion\n            {\n                pcoms1[i] = pfirst; // Save current path command\n                i && ( pcom = pcoms1[i - 1]); // Get previous path command pcom\n            }\n            p[i] = processPath(p[i], attrs, pcom); // Previous path command is inputted to processPath\n\n            if (pcoms1[i] != \"A\" && pfirst == \"C\") pcoms1[i] = \"C\"; // A is the only command\n            // which may produce multiple C:s\n            // so we have to make sure that C is also C in original path\n\n            fixArc(p, i); // fixArc adds also the right amount of A:s to pcoms1\n\n            if (p2) { // the same procedures is done to p2\n                p2[i] && (pfirst = p2[i][0]);\n                if (pfirst != \"C\") {\n                    pcoms2[i] = pfirst;\n                    i && (pcom = pcoms2[i - 1]);\n                }\n                p2[i] = processPath(p2[i], attrs2, pcom);\n\n                if (pcoms2[i] != \"A\" && pfirst == \"C\") {\n                    pcoms2[i] = \"C\";\n                }\n\n                fixArc(p2, i);\n            }\n            fixM(p, p2, attrs, attrs2, i);\n            fixM(p2, p, attrs2, attrs, i);\n            var seg = p[i],\n                seg2 = p2 && p2[i],\n                seglen = seg.length,\n                seg2len = p2 && seg2.length;\n            attrs.x = seg[seglen - 2];\n            attrs.y = seg[seglen - 1];\n            attrs.bx = toFloat(seg[seglen - 4]) || attrs.x;\n            attrs.by = toFloat(seg[seglen - 3]) || attrs.y;\n            attrs2.bx = p2 && (toFloat(seg2[seg2len - 4]) || attrs2.x);\n            attrs2.by = p2 && (toFloat(seg2[seg2len - 3]) || attrs2.y);\n            attrs2.x = p2 && seg2[seg2len - 2];\n            attrs2.y = p2 && seg2[seg2len - 1];\n        }\n        if (!p2) {\n            pth.curve = pathClone(p);\n        }\n        return p2 ? [p, p2] : p;\n    }\n    function mapPath(path, matrix) {\n        if (!matrix) {\n            return path;\n        }\n        var x, y, i, j, ii, jj, pathi;\n        path = path2curve(path);\n        for (i = 0, ii = path.length; i < ii; i++) {\n            pathi = path[i];\n            for (j = 1, jj = pathi.length; j < jj; j += 2) {\n                x = matrix.x(pathi[j], pathi[j + 1]);\n                y = matrix.y(pathi[j], pathi[j + 1]);\n                pathi[j] = x;\n                pathi[j + 1] = y;\n            }\n        }\n        return path;\n    }\n\n    // http://schepers.cc/getting-to-the-point\n    function catmullRom2bezier(crp, z) {\n        var d = [];\n        for (var i = 0, iLen = crp.length; iLen - 2 * !z > i; i += 2) {\n            var p = [\n                        {x: +crp[i - 2], y: +crp[i - 1]},\n                        {x: +crp[i],     y: +crp[i + 1]},\n                        {x: +crp[i + 2], y: +crp[i + 3]},\n                        {x: +crp[i + 4], y: +crp[i + 5]}\n                    ];\n            if (z) {\n                if (!i) {\n                    p[0] = {x: +crp[iLen - 2], y: +crp[iLen - 1]};\n                } else if (iLen - 4 == i) {\n                    p[3] = {x: +crp[0], y: +crp[1]};\n                } else if (iLen - 2 == i) {\n                    p[2] = {x: +crp[0], y: +crp[1]};\n                    p[3] = {x: +crp[2], y: +crp[3]};\n                }\n            } else {\n                if (iLen - 4 == i) {\n                    p[3] = p[2];\n                } else if (!i) {\n                    p[0] = {x: +crp[i], y: +crp[i + 1]};\n                }\n            }\n            d.push([\"C\",\n                  (-p[0].x + 6 * p[1].x + p[2].x) / 6,\n                  (-p[0].y + 6 * p[1].y + p[2].y) / 6,\n                  (p[1].x + 6 * p[2].x - p[3].x) / 6,\n                  (p[1].y + 6*p[2].y - p[3].y) / 6,\n                  p[2].x,\n                  p[2].y\n            ]);\n        }\n\n        return d;\n    }\n\n    // export\n    Snap.path = paths;\n\n    /*\\\n     * Snap.path.getTotalLength\n     [ method ]\n     **\n     * Returns the length of the given path in pixels\n     **\n     - path (string) SVG path string\n     **\n     = (number) length\n    \\*/\n    Snap.path.getTotalLength = getTotalLength;\n    /*\\\n     * Snap.path.getPointAtLength\n     [ method ]\n     **\n     * Returns the coordinates of the point located at the given length along the given path\n     **\n     - path (string) SVG path string\n     - length (number) length, in pixels, from the start of the path, excluding non-rendering jumps\n     **\n     = (object) representation of the point:\n     o {\n     o     x: (number) x coordinate,\n     o     y: (number) y coordinate,\n     o     alpha: (number) angle of derivative\n     o }\n    \\*/\n    Snap.path.getPointAtLength = getPointAtLength;\n    /*\\\n     * Snap.path.getSubpath\n     [ method ]\n     **\n     * Returns the subpath of a given path between given start and end lengths\n     **\n     - path (string) SVG path string\n     - from (number) length, in pixels, from the start of the path to the start of the segment\n     - to (number) length, in pixels, from the start of the path to the end of the segment\n     **\n     = (string) path string definition for the segment\n    \\*/\n    Snap.path.getSubpath = function (path, from, to) {\n        if (this.getTotalLength(path) - to < 1e-6) {\n            return getSubpathsAtLength(path, from).end;\n        }\n        var a = getSubpathsAtLength(path, to, 1);\n        return from ? getSubpathsAtLength(a, from).end : a;\n    };\n    /*\\\n     * Element.getTotalLength\n     [ method ]\n     **\n     * Returns the length of the path in pixels (only works for `path` elements)\n     = (number) length\n    \\*/\n    elproto.getTotalLength = function () {\n        if (this.node.getTotalLength) {\n            return this.node.getTotalLength();\n        }\n    };\n    // SIERRA Element.getPointAtLength()/Element.getTotalLength(): If a <path> is broken into different segments, is the jump distance to the new coordinates set by the _M_ or _m_ commands calculated as part of the path's total length?\n    /*\\\n     * Element.getPointAtLength\n     [ method ]\n     **\n     * Returns coordinates of the point located at the given length on the given path (only works for `path` elements)\n     **\n     - length (number) length, in pixels, from the start of the path, excluding non-rendering jumps\n     **\n     = (object) representation of the point:\n     o {\n     o     x: (number) x coordinate,\n     o     y: (number) y coordinate,\n     o     alpha: (number) angle of derivative\n     o }\n    \\*/\n    elproto.getPointAtLength = function (length) {\n        return getPointAtLength(this.attr(\"d\"), length);\n    };\n    // SIERRA Element.getSubpath(): Similar to the problem for Element.getPointAtLength(). Unclear how this would work for a segmented path. Overall, the concept of _subpath_ and what I'm calling a _segment_ (series of non-_M_ or _Z_ commands) is unclear.\n    /*\\\n     * Element.getSubpath\n     [ method ]\n     **\n     * Returns subpath of a given element from given start and end lengths (only works for `path` elements)\n     **\n     - from (number) length, in pixels, from the start of the path to the start of the segment\n     - to (number) length, in pixels, from the start of the path to the end of the segment\n     **\n     = (string) path string definition for the segment\n    \\*/\n    elproto.getSubpath = function (from, to) {\n        return Snap.path.getSubpath(this.attr(\"d\"), from, to);\n    };\n    Snap._.box = box;\n    /*\\\n     * Snap.path.findDotsAtSegment\n     [ method ]\n     **\n     * Utility method\n     **\n     * Finds dot coordinates on the given cubic beziér curve at the given t\n     - p1x (number) x of the first point of the curve\n     - p1y (number) y of the first point of the curve\n     - c1x (number) x of the first anchor of the curve\n     - c1y (number) y of the first anchor of the curve\n     - c2x (number) x of the second anchor of the curve\n     - c2y (number) y of the second anchor of the curve\n     - p2x (number) x of the second point of the curve\n     - p2y (number) y of the second point of the curve\n     - t (number) position on the curve (0..1)\n     = (object) point information in format:\n     o {\n     o     x: (number) x coordinate of the point,\n     o     y: (number) y coordinate of the point,\n     o     m: {\n     o         x: (number) x coordinate of the left anchor,\n     o         y: (number) y coordinate of the left anchor\n     o     },\n     o     n: {\n     o         x: (number) x coordinate of the right anchor,\n     o         y: (number) y coordinate of the right anchor\n     o     },\n     o     start: {\n     o         x: (number) x coordinate of the start of the curve,\n     o         y: (number) y coordinate of the start of the curve\n     o     },\n     o     end: {\n     o         x: (number) x coordinate of the end of the curve,\n     o         y: (number) y coordinate of the end of the curve\n     o     },\n     o     alpha: (number) angle of the curve derivative at the point\n     o }\n    \\*/\n    Snap.path.findDotsAtSegment = findDotsAtSegment;\n    /*\\\n     * Snap.path.bezierBBox\n     [ method ]\n     **\n     * Utility method\n     **\n     * Returns the bounding box of a given cubic beziér curve\n     - p1x (number) x of the first point of the curve\n     - p1y (number) y of the first point of the curve\n     - c1x (number) x of the first anchor of the curve\n     - c1y (number) y of the first anchor of the curve\n     - c2x (number) x of the second anchor of the curve\n     - c2y (number) y of the second anchor of the curve\n     - p2x (number) x of the second point of the curve\n     - p2y (number) y of the second point of the curve\n     * or\n     - bez (array) array of six points for beziér curve\n     = (object) bounding box\n     o {\n     o     x: (number) x coordinate of the left top point of the box,\n     o     y: (number) y coordinate of the left top point of the box,\n     o     x2: (number) x coordinate of the right bottom point of the box,\n     o     y2: (number) y coordinate of the right bottom point of the box,\n     o     width: (number) width of the box,\n     o     height: (number) height of the box\n     o }\n    \\*/\n    Snap.path.bezierBBox = bezierBBox;\n    /*\\\n     * Snap.path.isPointInsideBBox\n     [ method ]\n     **\n     * Utility method\n     **\n     * Returns `true` if given point is inside bounding box\n     - bbox (string) bounding box\n     - x (string) x coordinate of the point\n     - y (string) y coordinate of the point\n     = (boolean) `true` if point is inside\n    \\*/\n    Snap.path.isPointInsideBBox = isPointInsideBBox;\n    Snap.closest = function (x, y, X, Y) {\n        var r = 100,\n            b = box(x - r / 2, y - r / 2, r, r),\n            inside = [],\n            getter = X[0].hasOwnProperty(\"x\") ? function (i) {\n                return {\n                    x: X[i].x,\n                    y: X[i].y\n                };\n            } : function (i) {\n                return {\n                    x: X[i],\n                    y: Y[i]\n                };\n            },\n            found = 0;\n        while (r <= 1e6 && !found) {\n            for (var i = 0, ii = X.length; i < ii; i++) {\n                var xy = getter(i);\n                if (isPointInsideBBox(b, xy.x, xy.y)) {\n                    found++;\n                    inside.push(xy);\n                    break;\n                }\n            }\n            if (!found) {\n                r *= 2;\n                b = box(x - r / 2, y - r / 2, r, r)\n            }\n        }\n        if (r == 1e6) {\n            return;\n        }\n        var len = Infinity,\n            res;\n        for (i = 0, ii = inside.length; i < ii; i++) {\n            var l = Snap.len(x, y, inside[i].x, inside[i].y);\n            if (len > l) {\n                len = l;\n                inside[i].len = l;\n                res = inside[i];\n            }\n        }\n        return res;\n    };\n    /*\\\n     * Snap.path.isBBoxIntersect\n     [ method ]\n     **\n     * Utility method\n     **\n     * Returns `true` if two bounding boxes intersect\n     - bbox1 (string) first bounding box\n     - bbox2 (string) second bounding box\n     = (boolean) `true` if bounding boxes intersect\n    \\*/\n    Snap.path.isBBoxIntersect = isBBoxIntersect;\n    /*\\\n     * Snap.path.intersection\n     [ method ]\n     **\n     * Utility method\n     **\n     * Finds intersections of two paths\n     - path1 (string) path string\n     - path2 (string) path string\n     = (array) dots of intersection\n     o [\n     o     {\n     o         x: (number) x coordinate of the point,\n     o         y: (number) y coordinate of the point,\n     o         t1: (number) t value for segment of path1,\n     o         t2: (number) t value for segment of path2,\n     o         segment1: (number) order number for segment of path1,\n     o         segment2: (number) order number for segment of path2,\n     o         bez1: (array) eight coordinates representing beziér curve for the segment of path1,\n     o         bez2: (array) eight coordinates representing beziér curve for the segment of path2\n     o     }\n     o ]\n    \\*/\n    Snap.path.intersection = pathIntersection;\n    Snap.path.intersectionNumber = pathIntersectionNumber;\n    /*\\\n     * Snap.path.isPointInside\n     [ method ]\n     **\n     * Utility method\n     **\n     * Returns `true` if given point is inside a given closed path.\n     *\n     * Note: fill mode doesn’t affect the result of this method.\n     - path (string) path string\n     - x (number) x of the point\n     - y (number) y of the point\n     = (boolean) `true` if point is inside the path\n    \\*/\n    Snap.path.isPointInside = isPointInsidePath;\n    /*\\\n     * Snap.path.getBBox\n     [ method ]\n     **\n     * Utility method\n     **\n     * Returns the bounding box of a given path\n     - path (string) path string\n     = (object) bounding box\n     o {\n     o     x: (number) x coordinate of the left top point of the box,\n     o     y: (number) y coordinate of the left top point of the box,\n     o     x2: (number) x coordinate of the right bottom point of the box,\n     o     y2: (number) y coordinate of the right bottom point of the box,\n     o     width: (number) width of the box,\n     o     height: (number) height of the box\n     o }\n    \\*/\n    Snap.path.getBBox = pathBBox;\n    Snap.path.get = getPath;\n    /*\\\n     * Snap.path.toRelative\n     [ method ]\n     **\n     * Utility method\n     **\n     * Converts path coordinates into relative values\n     - path (string) path string\n     = (array) path string\n    \\*/\n    Snap.path.toRelative = pathToRelative;\n    /*\\\n     * Snap.path.toAbsolute\n     [ method ]\n     **\n     * Utility method\n     **\n     * Converts path coordinates into absolute values\n     - path (string) path string\n     = (array) path string\n    \\*/\n    Snap.path.toAbsolute = pathToAbsolute;\n    /*\\\n     * Snap.path.toCubic\n     [ method ]\n     **\n     * Utility method\n     **\n     * Converts path to a new path where all segments are cubic beziér curves\n     - pathString (string|array) path string or array of segments\n     = (array) array of segments\n    \\*/\n    Snap.path.toCubic = path2curve;\n    /*\\\n     * Snap.path.map\n     [ method ]\n     **\n     * Transform the path string with the given matrix\n     - path (string) path string\n     - matrix (object) see @Matrix\n     = (string) transformed path string\n    \\*/\n    Snap.path.map = mapPath;\n    Snap.path.toString = toString;\n    Snap.path.clone = pathClone;\n});\n\n// Copyright (c) 2013 Adobe Systems Incorporated. All rights reserved.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n// http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\nSnap.plugin(function (Snap, Element, Paper, glob) {\n    var mmax = Math.max,\n        mmin = Math.min;\n\n    // Set\n    var Set = function (items) {\n        this.items = [];\n\tthis.bindings = {};\n        this.length = 0;\n        this.type = \"set\";\n        if (items) {\n            for (var i = 0, ii = items.length; i < ii; i++) {\n                if (items[i]) {\n                    this[this.items.length] = this.items[this.items.length] = items[i];\n                    this.length++;\n                }\n            }\n        }\n    },\n    setproto = Set.prototype;\n    /*\\\n     * Set.push\n     [ method ]\n     **\n     * Adds each argument to the current set\n     = (object) original element\n    \\*/\n    setproto.push = function () {\n        var item,\n            len;\n        for (var i = 0, ii = arguments.length; i < ii; i++) {\n            item = arguments[i];\n            if (item) {\n                len = this.items.length;\n                this[len] = this.items[len] = item;\n                this.length++;\n            }\n        }\n        return this;\n    };\n    /*\\\n     * Set.pop\n     [ method ]\n     **\n     * Removes last element and returns it\n     = (object) element\n    \\*/\n    setproto.pop = function () {\n        this.length && delete this[this.length--];\n        return this.items.pop();\n    };\n    /*\\\n     * Set.forEach\n     [ method ]\n     **\n     * Executes given function for each element in the set\n     *\n     * If the function returns `false`, the loop stops running.\n     **\n     - callback (function) function to run\n     - thisArg (object) context object for the callback\n     = (object) Set object\n    \\*/\n    setproto.forEach = function (callback, thisArg) {\n        for (var i = 0, ii = this.items.length; i < ii; i++) {\n            if (callback.call(thisArg, this.items[i], i) === false) {\n                return this;\n            }\n        }\n        return this;\n    };\n    /*\\\n     * Set.animate\n     [ method ]\n     **\n     * Animates each element in set in sync.\n     *\n     **\n     - attrs (object) key-value pairs of destination attributes\n     - duration (number) duration of the animation in milliseconds\n     - easing (function) #optional easing function from @mina or custom\n     - callback (function) #optional callback function that executes when the animation ends\n     * or\n     - animation (array) array of animation parameter for each element in set in format `[attrs, duration, easing, callback]`\n     > Usage\n     | // animate all elements in set to radius 10\n     | set.animate({r: 10}, 500, mina.easein);\n     | // or\n     | // animate first element to radius 10, but second to radius 20 and in different time\n     | set.animate([{r: 10}, 500, mina.easein], [{r: 20}, 1500, mina.easein]);\n     = (Element) the current element\n    \\*/\n    setproto.animate = function (attrs, ms, easing, callback) {\n        if (typeof easing == \"function\" && !easing.length) {\n            callback = easing;\n            easing = mina.linear;\n        }\n        if (attrs instanceof Snap._.Animation) {\n            callback = attrs.callback;\n            easing = attrs.easing;\n            ms = easing.dur;\n            attrs = attrs.attr;\n        }\n        var args = arguments;\n        if (Snap.is(attrs, \"array\") && Snap.is(args[args.length - 1], \"array\")) {\n            var each = true;\n        }\n        var begin,\n            handler = function () {\n                if (begin) {\n                    this.b = begin;\n                } else {\n                    begin = this.b;\n                }\n            },\n            cb = 0,\n            set = this,\n            callbacker = callback && function () {\n                if (++cb == set.length) {\n                    callback.call(this);\n                }\n            };\n        return this.forEach(function (el, i) {\n            eve.once(\"snap.animcreated.\" + el.id, handler);\n            if (each) {\n                args[i] && el.animate.apply(el, args[i]);\n            } else {\n                el.animate(attrs, ms, easing, callbacker);\n            }\n        });\n    };\n    setproto.remove = function () {\n        while (this.length) {\n            this.pop().remove();\n        }\n        return this;\n    };\n    /*\\\n     * Set.bind\n     [ method ]\n     **\n     * Specifies how to handle a specific attribute when applied\n     * to a set.\n     *\n     **\n     - attr (string) attribute name\n     - callback (function) function to run\n     * or\n     - attr (string) attribute name\n     - element (Element) specific element in the set to apply the attribute to\n     * or\n     - attr (string) attribute name\n     - element (Element) specific element in the set to apply the attribute to\n     - eattr (string) attribute on the element to bind the attribute to\n     = (object) Set object\n    \\*/\n    setproto.bind = function (attr, a, b) {\n        var data = {};\n        if (typeof a == \"function\") {\n            this.bindings[attr] = a;\n        } else {\n            var aname = b || attr;\n            this.bindings[attr] = function (v) {\n                data[aname] = v;\n                a.attr(data);\n            };\n        }\n        return this;\n    };\n    setproto.attr = function (value) {\n        var unbound = {};\n        for (var k in value) {\n            if (this.bindings[k]) {\n                this.bindings[k](value[k]);\n            } else {\n                unbound[k] = value[k];\n            }\n        }\n        for (var i = 0, ii = this.items.length; i < ii; i++) {\n            this.items[i].attr(unbound);\n        }\n        return this;\n    };\n    /*\\\n     * Set.clear\n     [ method ]\n     **\n     * Removes all elements from the set\n    \\*/\n    setproto.clear = function () {\n        while (this.length) {\n            this.pop();\n        }\n    };\n    /*\\\n     * Set.splice\n     [ method ]\n     **\n     * Removes range of elements from the set\n     **\n     - index (number) position of the deletion\n     - count (number) number of element to remove\n     - insertion… (object) #optional elements to insert\n     = (object) set elements that were deleted\n    \\*/\n    setproto.splice = function (index, count, insertion) {\n        index = index < 0 ? mmax(this.length + index, 0) : index;\n        count = mmax(0, mmin(this.length - index, count));\n        var tail = [],\n            todel = [],\n            args = [],\n            i;\n        for (i = 2; i < arguments.length; i++) {\n            args.push(arguments[i]);\n        }\n        for (i = 0; i < count; i++) {\n            todel.push(this[index + i]);\n        }\n        for (; i < this.length - index; i++) {\n            tail.push(this[index + i]);\n        }\n        var arglen = args.length;\n        for (i = 0; i < arglen + tail.length; i++) {\n            this.items[index + i] = this[index + i] = i < arglen ? args[i] : tail[i - arglen];\n        }\n        i = this.items.length = this.length -= count - arglen;\n        while (this[i]) {\n            delete this[i++];\n        }\n        return new Set(todel);\n    };\n    /*\\\n     * Set.exclude\n     [ method ]\n     **\n     * Removes given element from the set\n     **\n     - element (object) element to remove\n     = (boolean) `true` if object was found and removed from the set\n    \\*/\n    setproto.exclude = function (el) {\n        for (var i = 0, ii = this.length; i < ii; i++) if (this[i] == el) {\n            this.splice(i, 1);\n            return true;\n        }\n        return false;\n    };\n    setproto.insertAfter = function (el) {\n        var i = this.items.length;\n        while (i--) {\n            this.items[i].insertAfter(el);\n        }\n        return this;\n    };\n    setproto.getBBox = function () {\n        var x = [],\n            y = [],\n            x2 = [],\n            y2 = [];\n        for (var i = this.items.length; i--;) if (!this.items[i].removed) {\n            var box = this.items[i].getBBox();\n            x.push(box.x);\n            y.push(box.y);\n            x2.push(box.x + box.width);\n            y2.push(box.y + box.height);\n        }\n        x = mmin.apply(0, x);\n        y = mmin.apply(0, y);\n        x2 = mmax.apply(0, x2);\n        y2 = mmax.apply(0, y2);\n        return {\n            x: x,\n            y: y,\n            x2: x2,\n            y2: y2,\n            width: x2 - x,\n            height: y2 - y,\n            cx: x + (x2 - x) / 2,\n            cy: y + (y2 - y) / 2\n        };\n    };\n    setproto.clone = function (s) {\n        s = new Set;\n        for (var i = 0, ii = this.items.length; i < ii; i++) {\n            s.push(this.items[i].clone());\n        }\n        return s;\n    };\n    setproto.toString = function () {\n        return \"Snap\\u2018s set\";\n    };\n    setproto.type = \"set\";\n    // export\n    Snap.Set = Set;\n    Snap.set = function () {\n        var set = new Set;\n        if (arguments.length) {\n            set.push.apply(set, Array.prototype.slice.call(arguments, 0));\n        }\n        return set;\n    };\n});\n\n// Copyright (c) 2013 Adobe Systems Incorporated. All rights reserved.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n// http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\nSnap.plugin(function (Snap, Element, Paper, glob) {\n    var names = {},\n        reUnit = /[a-z]+$/i,\n        Str = String;\n    names.stroke = names.fill = \"colour\";\n    function getEmpty(item) {\n        var l = item[0];\n        switch (l.toLowerCase()) {\n            case \"t\": return [l, 0, 0];\n            case \"m\": return [l, 1, 0, 0, 1, 0, 0];\n            case \"r\": if (item.length == 4) {\n                return [l, 0, item[2], item[3]];\n            } else {\n                return [l, 0];\n            }\n            case \"s\": if (item.length == 5) {\n                return [l, 1, 1, item[3], item[4]];\n            } else if (item.length == 3) {\n                return [l, 1, 1];\n            } else {\n                return [l, 1];\n            }\n        }\n    }\n    function equaliseTransform(t1, t2, getBBox) {\n        t2 = Str(t2).replace(/\\.{3}|\\u2026/g, t1);\n        t1 = Snap.parseTransformString(t1) || [];\n        t2 = Snap.parseTransformString(t2) || [];\n        var maxlength = Math.max(t1.length, t2.length),\n            from = [],\n            to = [],\n            i = 0, j, jj,\n            tt1, tt2;\n        for (; i < maxlength; i++) {\n            tt1 = t1[i] || getEmpty(t2[i]);\n            tt2 = t2[i] || getEmpty(tt1);\n            if ((tt1[0] != tt2[0]) ||\n                (tt1[0].toLowerCase() == \"r\" && (tt1[2] != tt2[2] || tt1[3] != tt2[3])) ||\n                (tt1[0].toLowerCase() == \"s\" && (tt1[3] != tt2[3] || tt1[4] != tt2[4]))\n                ) {\n                    t1 = Snap._.transform2matrix(t1, getBBox());\n                    t2 = Snap._.transform2matrix(t2, getBBox());\n                    from = [[\"m\", t1.a, t1.b, t1.c, t1.d, t1.e, t1.f]];\n                    to = [[\"m\", t2.a, t2.b, t2.c, t2.d, t2.e, t2.f]];\n                    break;\n            }\n            from[i] = [];\n            to[i] = [];\n            for (j = 0, jj = Math.max(tt1.length, tt2.length); j < jj; j++) {\n                j in tt1 && (from[i][j] = tt1[j]);\n                j in tt2 && (to[i][j] = tt2[j]);\n            }\n        }\n        return {\n            from: path2array(from),\n            to: path2array(to),\n            f: getPath(from)\n        };\n    }\n    function getNumber(val) {\n        return val;\n    }\n    function getUnit(unit) {\n        return function (val) {\n            return +val.toFixed(3) + unit;\n        };\n    }\n    function getViewBox(val) {\n        return val.join(\" \");\n    }\n    function getColour(clr) {\n        return Snap.rgb(clr[0], clr[1], clr[2]);\n    }\n    function getPath(path) {\n        var k = 0, i, ii, j, jj, out, a, b = [];\n        for (i = 0, ii = path.length; i < ii; i++) {\n            out = \"[\";\n            a = ['\"' + path[i][0] + '\"'];\n            for (j = 1, jj = path[i].length; j < jj; j++) {\n                a[j] = \"val[\" + (k++) + \"]\";\n            }\n            out += a + \"]\";\n            b[i] = out;\n        }\n        return Function(\"val\", \"return Snap.path.toString.call([\" + b + \"])\");\n    }\n    function path2array(path) {\n        var out = [];\n        for (var i = 0, ii = path.length; i < ii; i++) {\n            for (var j = 1, jj = path[i].length; j < jj; j++) {\n                out.push(path[i][j]);\n            }\n        }\n        return out;\n    }\n    function isNumeric(obj) {\n        return isFinite(parseFloat(obj));\n    }\n    function arrayEqual(arr1, arr2) {\n        if (!Snap.is(arr1, \"array\") || !Snap.is(arr2, \"array\")) {\n            return false;\n        }\n        return arr1.toString() == arr2.toString();\n    }\n    Element.prototype.equal = function (name, b) {\n        return eve(\"snap.util.equal\", this, name, b).firstDefined();\n    };\n    eve.on(\"snap.util.equal\", function (name, b) {\n        var A, B, a = Str(this.attr(name) || \"\"),\n            el = this;\n        if (isNumeric(a) && isNumeric(b)) {\n            return {\n                from: parseFloat(a),\n                to: parseFloat(b),\n                f: getNumber\n            };\n        }\n        if (names[name] == \"colour\") {\n            A = Snap.color(a);\n            B = Snap.color(b);\n            return {\n                from: [A.r, A.g, A.b, A.opacity],\n                to: [B.r, B.g, B.b, B.opacity],\n                f: getColour\n            };\n        }\n        if (name == \"viewBox\") {\n            A = this.attr(name).vb.split(\" \").map(Number);\n            B = b.split(\" \").map(Number);\n            return {\n                from: A,\n                to: B,\n                f: getViewBox\n            };\n        }\n        if (name == \"transform\" || name == \"gradientTransform\" || name == \"patternTransform\") {\n            if (b instanceof Snap.Matrix) {\n                b = b.toTransformString();\n            }\n            if (!Snap._.rgTransform.test(b)) {\n                b = Snap._.svgTransform2string(b);\n            }\n            return equaliseTransform(a, b, function () {\n                return el.getBBox(1);\n            });\n        }\n        if (name == \"d\" || name == \"path\") {\n            A = Snap.path.toCubic(a, b);\n            return {\n                from: path2array(A[0]),\n                to: path2array(A[1]),\n                f: getPath(A[0])\n            };\n        }\n        if (name == \"points\") {\n            A = Str(a).split(Snap._.separator);\n            B = Str(b).split(Snap._.separator);\n            return {\n                from: A,\n                to: B,\n                f: function (val) { return val; }\n            };\n        }\n        var aUnit = a.match(reUnit),\n            bUnit = Str(b).match(reUnit);\n        if (aUnit && arrayEqual(aUnit, bUnit)) {\n            return {\n                from: parseFloat(a),\n                to: parseFloat(b),\n                f: getUnit(aUnit)\n            };\n        } else {\n            return {\n                from: this.asPX(name),\n                to: this.asPX(name, b),\n                f: getNumber\n            };\n        }\n    });\n});\n\n// Copyright (c) 2013 Adobe Systems Incorporated. All rights reserved.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n// http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\nSnap.plugin(function (Snap, Element, Paper, glob) {\n    var elproto = Element.prototype,\n    has = \"hasOwnProperty\",\n    supportsTouch = \"createTouch\" in glob.doc,\n    events = [\n        \"click\", \"dblclick\", \"mousedown\", \"mousemove\", \"mouseout\",\n        \"mouseover\", \"mouseup\", \"touchstart\", \"touchmove\", \"touchend\",\n        \"touchcancel\"\n    ],\n    touchMap = {\n        mousedown: \"touchstart\",\n        mousemove: \"touchmove\",\n        mouseup: \"touchend\"\n    },\n    getScroll = function (xy, el) {\n        var name = xy == \"y\" ? \"scrollTop\" : \"scrollLeft\",\n            doc = el && el.node ? el.node.ownerDocument : glob.doc;\n        return doc[name in doc.documentElement ? \"documentElement\" : \"body\"][name];\n    },\n    preventDefault = function () {\n        this.returnValue = false;\n    },\n    preventTouch = function () {\n        return this.originalEvent.preventDefault();\n    },\n    stopPropagation = function () {\n        this.cancelBubble = true;\n    },\n    stopTouch = function () {\n        return this.originalEvent.stopPropagation();\n    },\n    addEvent = function (obj, type, fn, element) {\n        var realName = supportsTouch && touchMap[type] ? touchMap[type] : type,\n            f = function (e) {\n                var scrollY = getScroll(\"y\", element),\n                    scrollX = getScroll(\"x\", element);\n                if (supportsTouch && touchMap[has](type)) {\n                    for (var i = 0, ii = e.targetTouches && e.targetTouches.length; i < ii; i++) {\n                        if (e.targetTouches[i].target == obj || obj.contains(e.targetTouches[i].target)) {\n                            var olde = e;\n                            e = e.targetTouches[i];\n                            e.originalEvent = olde;\n                            e.preventDefault = preventTouch;\n                            e.stopPropagation = stopTouch;\n                            break;\n                        }\n                    }\n                }\n                var x = e.clientX + scrollX,\n                    y = e.clientY + scrollY;\n                return fn.call(element, e, x, y);\n            };\n\n        if (type !== realName) {\n            obj.addEventListener(type, f, false);\n        }\n\n        obj.addEventListener(realName, f, false);\n\n        return function () {\n            if (type !== realName) {\n                obj.removeEventListener(type, f, false);\n            }\n\n            obj.removeEventListener(realName, f, false);\n            return true;\n        };\n    },\n    drag = [],\n    dragMove = function (e) {\n        var x = e.clientX,\n            y = e.clientY,\n            scrollY = getScroll(\"y\"),\n            scrollX = getScroll(\"x\"),\n            dragi,\n            j = drag.length;\n        while (j--) {\n            dragi = drag[j];\n            if (supportsTouch) {\n                var i = e.touches && e.touches.length,\n                    touch;\n                while (i--) {\n                    touch = e.touches[i];\n                    if (touch.identifier == dragi.el._drag.id || dragi.el.node.contains(touch.target)) {\n                        x = touch.clientX;\n                        y = touch.clientY;\n                        (e.originalEvent ? e.originalEvent : e).preventDefault();\n                        break;\n                    }\n                }\n            } else {\n                e.preventDefault();\n            }\n            var node = dragi.el.node,\n                o,\n                next = node.nextSibling,\n                parent = node.parentNode,\n                display = node.style.display;\n            // glob.win.opera && parent.removeChild(node);\n            // node.style.display = \"none\";\n            // o = dragi.el.paper.getElementByPoint(x, y);\n            // node.style.display = display;\n            // glob.win.opera && (next ? parent.insertBefore(node, next) : parent.appendChild(node));\n            // o && eve(\"snap.drag.over.\" + dragi.el.id, dragi.el, o);\n            x += scrollX;\n            y += scrollY;\n            eve(\"snap.drag.move.\" + dragi.el.id, dragi.move_scope || dragi.el, x - dragi.el._drag.x, y - dragi.el._drag.y, x, y, e);\n        }\n    },\n    dragUp = function (e) {\n        Snap.unmousemove(dragMove).unmouseup(dragUp);\n        var i = drag.length,\n            dragi;\n        while (i--) {\n            dragi = drag[i];\n            dragi.el._drag = {};\n            eve(\"snap.drag.end.\" + dragi.el.id, dragi.end_scope || dragi.start_scope || dragi.move_scope || dragi.el, e);\n            eve.off(\"snap.drag.*.\" + dragi.el.id);\n        }\n        drag = [];\n    };\n    /*\\\n     * Element.click\n     [ method ]\n     **\n     * Adds a click event handler to the element\n     - handler (function) handler for the event\n     = (object) @Element\n    \\*/\n    /*\\\n     * Element.unclick\n     [ method ]\n     **\n     * Removes a click event handler from the element\n     - handler (function) handler for the event\n     = (object) @Element\n    \\*/\n\n    /*\\\n     * Element.dblclick\n     [ method ]\n     **\n     * Adds a double click event handler to the element\n     - handler (function) handler for the event\n     = (object) @Element\n    \\*/\n    /*\\\n     * Element.undblclick\n     [ method ]\n     **\n     * Removes a double click event handler from the element\n     - handler (function) handler for the event\n     = (object) @Element\n    \\*/\n\n    /*\\\n     * Element.mousedown\n     [ method ]\n     **\n     * Adds a mousedown event handler to the element\n     - handler (function) handler for the event\n     = (object) @Element\n    \\*/\n    /*\\\n     * Element.unmousedown\n     [ method ]\n     **\n     * Removes a mousedown event handler from the element\n     - handler (function) handler for the event\n     = (object) @Element\n    \\*/\n\n    /*\\\n     * Element.mousemove\n     [ method ]\n     **\n     * Adds a mousemove event handler to the element\n     - handler (function) handler for the event\n     = (object) @Element\n    \\*/\n    /*\\\n     * Element.unmousemove\n     [ method ]\n     **\n     * Removes a mousemove event handler from the element\n     - handler (function) handler for the event\n     = (object) @Element\n    \\*/\n\n    /*\\\n     * Element.mouseout\n     [ method ]\n     **\n     * Adds a mouseout event handler to the element\n     - handler (function) handler for the event\n     = (object) @Element\n    \\*/\n    /*\\\n     * Element.unmouseout\n     [ method ]\n     **\n     * Removes a mouseout event handler from the element\n     - handler (function) handler for the event\n     = (object) @Element\n    \\*/\n\n    /*\\\n     * Element.mouseover\n     [ method ]\n     **\n     * Adds a mouseover event handler to the element\n     - handler (function) handler for the event\n     = (object) @Element\n    \\*/\n    /*\\\n     * Element.unmouseover\n     [ method ]\n     **\n     * Removes a mouseover event handler from the element\n     - handler (function) handler for the event\n     = (object) @Element\n    \\*/\n\n    /*\\\n     * Element.mouseup\n     [ method ]\n     **\n     * Adds a mouseup event handler to the element\n     - handler (function) handler for the event\n     = (object) @Element\n    \\*/\n    /*\\\n     * Element.unmouseup\n     [ method ]\n     **\n     * Removes a mouseup event handler from the element\n     - handler (function) handler for the event\n     = (object) @Element\n    \\*/\n\n    /*\\\n     * Element.touchstart\n     [ method ]\n     **\n     * Adds a touchstart event handler to the element\n     - handler (function) handler for the event\n     = (object) @Element\n    \\*/\n    /*\\\n     * Element.untouchstart\n     [ method ]\n     **\n     * Removes a touchstart event handler from the element\n     - handler (function) handler for the event\n     = (object) @Element\n    \\*/\n\n    /*\\\n     * Element.touchmove\n     [ method ]\n     **\n     * Adds a touchmove event handler to the element\n     - handler (function) handler for the event\n     = (object) @Element\n    \\*/\n    /*\\\n     * Element.untouchmove\n     [ method ]\n     **\n     * Removes a touchmove event handler from the element\n     - handler (function) handler for the event\n     = (object) @Element\n    \\*/\n\n    /*\\\n     * Element.touchend\n     [ method ]\n     **\n     * Adds a touchend event handler to the element\n     - handler (function) handler for the event\n     = (object) @Element\n    \\*/\n    /*\\\n     * Element.untouchend\n     [ method ]\n     **\n     * Removes a touchend event handler from the element\n     - handler (function) handler for the event\n     = (object) @Element\n    \\*/\n\n    /*\\\n     * Element.touchcancel\n     [ method ]\n     **\n     * Adds a touchcancel event handler to the element\n     - handler (function) handler for the event\n     = (object) @Element\n    \\*/\n    /*\\\n     * Element.untouchcancel\n     [ method ]\n     **\n     * Removes a touchcancel event handler from the element\n     - handler (function) handler for the event\n     = (object) @Element\n    \\*/\n    for (var i = events.length; i--;) {\n        (function (eventName) {\n            Snap[eventName] = elproto[eventName] = function (fn, scope) {\n                if (Snap.is(fn, \"function\")) {\n                    this.events = this.events || [];\n                    this.events.push({\n                        name: eventName,\n                        f: fn,\n                        unbind: addEvent(this.node || document, eventName, fn, scope || this)\n                    });\n                } else {\n                    for (var i = 0, ii = this.events.length; i < ii; i++) if (this.events[i].name == eventName) {\n                        try {\n                            this.events[i].f.call(this);\n                        } catch (e) {}\n                    }\n                }\n                return this;\n            };\n            Snap[\"un\" + eventName] =\n            elproto[\"un\" + eventName] = function (fn) {\n                var events = this.events || [],\n                    l = events.length;\n                while (l--) if (events[l].name == eventName &&\n                               (events[l].f == fn || !fn)) {\n                    events[l].unbind();\n                    events.splice(l, 1);\n                    !events.length && delete this.events;\n                    return this;\n                }\n                return this;\n            };\n        })(events[i]);\n    }\n    /*\\\n     * Element.hover\n     [ method ]\n     **\n     * Adds hover event handlers to the element\n     - f_in (function) handler for hover in\n     - f_out (function) handler for hover out\n     - icontext (object) #optional context for hover in handler\n     - ocontext (object) #optional context for hover out handler\n     = (object) @Element\n    \\*/\n    elproto.hover = function (f_in, f_out, scope_in, scope_out) {\n        return this.mouseover(f_in, scope_in).mouseout(f_out, scope_out || scope_in);\n    };\n    /*\\\n     * Element.unhover\n     [ method ]\n     **\n     * Removes hover event handlers from the element\n     - f_in (function) handler for hover in\n     - f_out (function) handler for hover out\n     = (object) @Element\n    \\*/\n    elproto.unhover = function (f_in, f_out) {\n        return this.unmouseover(f_in).unmouseout(f_out);\n    };\n    var draggable = [];\n    // SIERRA unclear what _context_ refers to for starting, ending, moving the drag gesture.\n    // SIERRA Element.drag(): _x position of the mouse_: Where are the x/y values offset from?\n    // SIERRA Element.drag(): much of this member's doc appears to be duplicated for some reason.\n    // SIERRA Unclear about this sentence: _Additionally following drag events will be triggered: drag.start.<id> on start, drag.end.<id> on end and drag.move.<id> on every move._ Is there a global _drag_ object to which you can assign handlers keyed by an element's ID?\n    /*\\\n     * Element.drag\n     [ method ]\n     **\n     * Adds event handlers for an element's drag gesture\n     **\n     - onmove (function) handler for moving\n     - onstart (function) handler for drag start\n     - onend (function) handler for drag end\n     - mcontext (object) #optional context for moving handler\n     - scontext (object) #optional context for drag start handler\n     - econtext (object) #optional context for drag end handler\n     * Additionaly following `drag` events are triggered: `drag.start.<id>` on start,\n     * `drag.end.<id>` on end and `drag.move.<id>` on every move. When element is dragged over another element\n     * `drag.over.<id>` fires as well.\n     *\n     * Start event and start handler are called in specified context or in context of the element with following parameters:\n     o x (number) x position of the mouse\n     o y (number) y position of the mouse\n     o event (object) DOM event object\n     * Move event and move handler are called in specified context or in context of the element with following parameters:\n     o dx (number) shift by x from the start point\n     o dy (number) shift by y from the start point\n     o x (number) x position of the mouse\n     o y (number) y position of the mouse\n     o event (object) DOM event object\n     * End event and end handler are called in specified context or in context of the element with following parameters:\n     o event (object) DOM event object\n     = (object) @Element\n    \\*/\n    elproto.drag = function (onmove, onstart, onend, move_scope, start_scope, end_scope) {\n        var el = this;\n        if (!arguments.length) {\n            var origTransform;\n            return el.drag(function (dx, dy) {\n                this.attr({\n                    transform: origTransform + (origTransform ? \"T\" : \"t\") + [dx, dy]\n                });\n            }, function () {\n                origTransform = this.transform().local;\n            });\n        }\n        function start(e, x, y) {\n            (e.originalEvent || e).preventDefault();\n            el._drag.x = x;\n            el._drag.y = y;\n            el._drag.id = e.identifier;\n            !drag.length && Snap.mousemove(dragMove).mouseup(dragUp);\n            drag.push({el: el, move_scope: move_scope, start_scope: start_scope, end_scope: end_scope});\n            onstart && eve.on(\"snap.drag.start.\" + el.id, onstart);\n            onmove && eve.on(\"snap.drag.move.\" + el.id, onmove);\n            onend && eve.on(\"snap.drag.end.\" + el.id, onend);\n            eve(\"snap.drag.start.\" + el.id, start_scope || move_scope || el, x, y, e);\n        }\n        function init(e, x, y) {\n            eve(\"snap.draginit.\" + el.id, el, e, x, y);\n        }\n        eve.on(\"snap.draginit.\" + el.id, start);\n        el._drag = {};\n        draggable.push({el: el, start: start, init: init});\n        el.mousedown(init);\n        return el;\n    };\n    /*\n     * Element.onDragOver\n     [ method ]\n     **\n     * Shortcut to assign event handler for `drag.over.<id>` event, where `id` is the element's `id` (see @Element.id)\n     - f (function) handler for event, first argument would be the element you are dragging over\n    \\*/\n    // elproto.onDragOver = function (f) {\n    //     f ? eve.on(\"snap.drag.over.\" + this.id, f) : eve.unbind(\"snap.drag.over.\" + this.id);\n    // };\n    /*\\\n     * Element.undrag\n     [ method ]\n     **\n     * Removes all drag event handlers from the given element\n    \\*/\n    elproto.undrag = function () {\n        var i = draggable.length;\n        while (i--) if (draggable[i].el == this) {\n            this.unmousedown(draggable[i].init);\n            draggable.splice(i, 1);\n            eve.unbind(\"snap.drag.*.\" + this.id);\n            eve.unbind(\"snap.draginit.\" + this.id);\n        }\n        !draggable.length && Snap.unmousemove(dragMove).unmouseup(dragUp);\n        return this;\n    };\n});\n\n// Copyright (c) 2013 Adobe Systems Incorporated. All rights reserved.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n// http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\nSnap.plugin(function (Snap, Element, Paper, glob) {\n    var elproto = Element.prototype,\n        pproto = Paper.prototype,\n        rgurl = /^\\s*url\\((.+)\\)/,\n        Str = String,\n        $ = Snap._.$;\n    Snap.filter = {};\n    /*\\\n     * Paper.filter\n     [ method ]\n     **\n     * Creates a `<filter>` element\n     **\n     - filstr (string) SVG fragment of filter provided as a string\n     = (object) @Element\n     * Note: It is recommended to use filters embedded into the page inside an empty SVG element.\n     > Usage\n     | var f = paper.filter('<feGaussianBlur stdDeviation=\"2\"/>'),\n     |     c = paper.circle(10, 10, 10).attr({\n     |         filter: f\n     |     });\n    \\*/\n    pproto.filter = function (filstr) {\n        var paper = this;\n        if (paper.type != \"svg\") {\n            paper = paper.paper;\n        }\n        var f = Snap.parse(Str(filstr)),\n            id = Snap._.id(),\n            width = paper.node.offsetWidth,\n            height = paper.node.offsetHeight,\n            filter = $(\"filter\");\n        $(filter, {\n            id: id,\n            filterUnits: \"userSpaceOnUse\"\n        });\n        filter.appendChild(f.node);\n        paper.defs.appendChild(filter);\n        return new Element(filter);\n    };\n\n    eve.on(\"snap.util.getattr.filter\", function () {\n        eve.stop();\n        var p = $(this.node, \"filter\");\n        if (p) {\n            var match = Str(p).match(rgurl);\n            return match && Snap.select(match[1]);\n        }\n    });\n    eve.on(\"snap.util.attr.filter\", function (value) {\n        if (value instanceof Element && value.type == \"filter\") {\n            eve.stop();\n            var id = value.node.id;\n            if (!id) {\n                $(value.node, {id: value.id});\n                id = value.id;\n            }\n            $(this.node, {\n                filter: Snap.url(id)\n            });\n        }\n        if (!value || value == \"none\") {\n            eve.stop();\n            this.node.removeAttribute(\"filter\");\n        }\n    });\n    /*\\\n     * Snap.filter.blur\n     [ method ]\n     **\n     * Returns an SVG markup string for the blur filter\n     **\n     - x (number) amount of horizontal blur, in pixels\n     - y (number) #optional amount of vertical blur, in pixels\n     = (string) filter representation\n     > Usage\n     | var f = paper.filter(Snap.filter.blur(5, 10)),\n     |     c = paper.circle(10, 10, 10).attr({\n     |         filter: f\n     |     });\n    \\*/\n    Snap.filter.blur = function (x, y) {\n        if (x == null) {\n            x = 2;\n        }\n        var def = y == null ? x : [x, y];\n        return Snap.format('\\<feGaussianBlur stdDeviation=\"{def}\"/>', {\n            def: def\n        });\n    };\n    Snap.filter.blur.toString = function () {\n        return this();\n    };\n    /*\\\n     * Snap.filter.shadow\n     [ method ]\n     **\n     * Returns an SVG markup string for the shadow filter\n     **\n     - dx (number) #optional horizontal shift of the shadow, in pixels\n     - dy (number) #optional vertical shift of the shadow, in pixels\n     - blur (number) #optional amount of blur\n     - color (string) #optional color of the shadow\n     - opacity (number) #optional `0..1` opacity of the shadow\n     * or\n     - dx (number) #optional horizontal shift of the shadow, in pixels\n     - dy (number) #optional vertical shift of the shadow, in pixels\n     - color (string) #optional color of the shadow\n     - opacity (number) #optional `0..1` opacity of the shadow\n     * which makes blur default to `4`. Or\n     - dx (number) #optional horizontal shift of the shadow, in pixels\n     - dy (number) #optional vertical shift of the shadow, in pixels\n     - opacity (number) #optional `0..1` opacity of the shadow\n     = (string) filter representation\n     > Usage\n     | var f = paper.filter(Snap.filter.shadow(0, 2, 3)),\n     |     c = paper.circle(10, 10, 10).attr({\n     |         filter: f\n     |     });\n    \\*/\n    Snap.filter.shadow = function (dx, dy, blur, color, opacity) {\n        if (typeof blur == \"string\") {\n            color = blur;\n            opacity = color;\n            blur = 4;\n        }\n        if (typeof color != \"string\") {\n            opacity = color;\n            color = \"#000\";\n        }\n        color = color || \"#000\";\n        if (blur == null) {\n            blur = 4;\n        }\n        if (opacity == null) {\n            opacity = 1;\n        }\n        if (dx == null) {\n            dx = 0;\n            dy = 2;\n        }\n        if (dy == null) {\n            dy = dx;\n        }\n        color = Snap.color(color);\n        return Snap.format('<feGaussianBlur in=\"SourceAlpha\" stdDeviation=\"{blur}\"/><feOffset dx=\"{dx}\" dy=\"{dy}\" result=\"offsetblur\"/><feFlood flood-color=\"{color}\"/><feComposite in2=\"offsetblur\" operator=\"in\"/><feComponentTransfer><feFuncA type=\"linear\" slope=\"{opacity}\"/></feComponentTransfer><feMerge><feMergeNode/><feMergeNode in=\"SourceGraphic\"/></feMerge>', {\n            color: color,\n            dx: dx,\n            dy: dy,\n            blur: blur,\n            opacity: opacity\n        });\n    };\n    Snap.filter.shadow.toString = function () {\n        return this();\n    };\n    /*\\\n     * Snap.filter.grayscale\n     [ method ]\n     **\n     * Returns an SVG markup string for the grayscale filter\n     **\n     - amount (number) amount of filter (`0..1`)\n     = (string) filter representation\n    \\*/\n    Snap.filter.grayscale = function (amount) {\n        if (amount == null) {\n            amount = 1;\n        }\n        return Snap.format('<feColorMatrix type=\"matrix\" values=\"{a} {b} {c} 0 0 {d} {e} {f} 0 0 {g} {b} {h} 0 0 0 0 0 1 0\"/>', {\n            a: 0.2126 + 0.7874 * (1 - amount),\n            b: 0.7152 - 0.7152 * (1 - amount),\n            c: 0.0722 - 0.0722 * (1 - amount),\n            d: 0.2126 - 0.2126 * (1 - amount),\n            e: 0.7152 + 0.2848 * (1 - amount),\n            f: 0.0722 - 0.0722 * (1 - amount),\n            g: 0.2126 - 0.2126 * (1 - amount),\n            h: 0.0722 + 0.9278 * (1 - amount)\n        });\n    };\n    Snap.filter.grayscale.toString = function () {\n        return this();\n    };\n    /*\\\n     * Snap.filter.sepia\n     [ method ]\n     **\n     * Returns an SVG markup string for the sepia filter\n     **\n     - amount (number) amount of filter (`0..1`)\n     = (string) filter representation\n    \\*/\n    Snap.filter.sepia = function (amount) {\n        if (amount == null) {\n            amount = 1;\n        }\n        return Snap.format('<feColorMatrix type=\"matrix\" values=\"{a} {b} {c} 0 0 {d} {e} {f} 0 0 {g} {h} {i} 0 0 0 0 0 1 0\"/>', {\n            a: 0.393 + 0.607 * (1 - amount),\n            b: 0.769 - 0.769 * (1 - amount),\n            c: 0.189 - 0.189 * (1 - amount),\n            d: 0.349 - 0.349 * (1 - amount),\n            e: 0.686 + 0.314 * (1 - amount),\n            f: 0.168 - 0.168 * (1 - amount),\n            g: 0.272 - 0.272 * (1 - amount),\n            h: 0.534 - 0.534 * (1 - amount),\n            i: 0.131 + 0.869 * (1 - amount)\n        });\n    };\n    Snap.filter.sepia.toString = function () {\n        return this();\n    };\n    /*\\\n     * Snap.filter.saturate\n     [ method ]\n     **\n     * Returns an SVG markup string for the saturate filter\n     **\n     - amount (number) amount of filter (`0..1`)\n     = (string) filter representation\n    \\*/\n    Snap.filter.saturate = function (amount) {\n        if (amount == null) {\n            amount = 1;\n        }\n        return Snap.format('<feColorMatrix type=\"saturate\" values=\"{amount}\"/>', {\n            amount: 1 - amount\n        });\n    };\n    Snap.filter.saturate.toString = function () {\n        return this();\n    };\n    /*\\\n     * Snap.filter.hueRotate\n     [ method ]\n     **\n     * Returns an SVG markup string for the hue-rotate filter\n     **\n     - angle (number) angle of rotation\n     = (string) filter representation\n    \\*/\n    Snap.filter.hueRotate = function (angle) {\n        angle = angle || 0;\n        return Snap.format('<feColorMatrix type=\"hueRotate\" values=\"{angle}\"/>', {\n            angle: angle\n        });\n    };\n    Snap.filter.hueRotate.toString = function () {\n        return this();\n    };\n    /*\\\n     * Snap.filter.invert\n     [ method ]\n     **\n     * Returns an SVG markup string for the invert filter\n     **\n     - amount (number) amount of filter (`0..1`)\n     = (string) filter representation\n    \\*/\n    Snap.filter.invert = function (amount) {\n        if (amount == null) {\n            amount = 1;\n        }\n//        <feColorMatrix type=\"matrix\" values=\"-1 0 0 0 1  0 -1 0 0 1  0 0 -1 0 1  0 0 0 1 0\" color-interpolation-filters=\"sRGB\"/>\n        return Snap.format('<feComponentTransfer><feFuncR type=\"table\" tableValues=\"{amount} {amount2}\"/><feFuncG type=\"table\" tableValues=\"{amount} {amount2}\"/><feFuncB type=\"table\" tableValues=\"{amount} {amount2}\"/></feComponentTransfer>', {\n            amount: amount,\n            amount2: 1 - amount\n        });\n    };\n    Snap.filter.invert.toString = function () {\n        return this();\n    };\n    /*\\\n     * Snap.filter.brightness\n     [ method ]\n     **\n     * Returns an SVG markup string for the brightness filter\n     **\n     - amount (number) amount of filter (`0..1`)\n     = (string) filter representation\n    \\*/\n    Snap.filter.brightness = function (amount) {\n        if (amount == null) {\n            amount = 1;\n        }\n        return Snap.format('<feComponentTransfer><feFuncR type=\"linear\" slope=\"{amount}\"/><feFuncG type=\"linear\" slope=\"{amount}\"/><feFuncB type=\"linear\" slope=\"{amount}\"/></feComponentTransfer>', {\n            amount: amount\n        });\n    };\n    Snap.filter.brightness.toString = function () {\n        return this();\n    };\n    /*\\\n     * Snap.filter.contrast\n     [ method ]\n     **\n     * Returns an SVG markup string for the contrast filter\n     **\n     - amount (number) amount of filter (`0..1`)\n     = (string) filter representation\n    \\*/\n    Snap.filter.contrast = function (amount) {\n        if (amount == null) {\n            amount = 1;\n        }\n        return Snap.format('<feComponentTransfer><feFuncR type=\"linear\" slope=\"{amount}\" intercept=\"{amount2}\"/><feFuncG type=\"linear\" slope=\"{amount}\" intercept=\"{amount2}\"/><feFuncB type=\"linear\" slope=\"{amount}\" intercept=\"{amount2}\"/></feComponentTransfer>', {\n            amount: amount,\n            amount2: .5 - amount / 2\n        });\n    };\n    Snap.filter.contrast.toString = function () {\n        return this();\n    };\n});\n\n// Copyright (c) 2014 Adobe Systems Incorporated. All rights reserved.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n// http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\nSnap.plugin(function (Snap, Element, Paper, glob, Fragment) {\n    var box = Snap._.box,\n        is = Snap.is,\n        firstLetter = /^[^a-z]*([tbmlrc])/i,\n        toString = function () {\n            return \"T\" + this.dx + \",\" + this.dy;\n        };\n    /*\\\n     * Element.getAlign\n     [ method ]\n     **\n     * Returns shift needed to align the element relatively to given element.\n     * If no elements specified, parent `<svg>` container will be used.\n     - el (object) @optional alignment element\n     - way (string) one of six values: `\"top\"`, `\"middle\"`, `\"bottom\"`, `\"left\"`, `\"center\"`, `\"right\"`\n     = (object|string) Object in format `{dx: , dy: }` also has a string representation as a transformation string\n     > Usage\n     | el.transform(el.getAlign(el2, \"top\"));\n     * or\n     | var dy = el.getAlign(el2, \"top\").dy;\n    \\*/\n    Element.prototype.getAlign = function (el, way) {\n        if (way == null && is(el, \"string\")) {\n            way = el;\n            el = null;\n        }\n        el = el || this.paper;\n        var bx = el.getBBox ? el.getBBox() : box(el),\n            bb = this.getBBox(),\n            out = {};\n        way = way && way.match(firstLetter);\n        way = way ? way[1].toLowerCase() : \"c\";\n        switch (way) {\n            case \"t\":\n                out.dx = 0;\n                out.dy = bx.y - bb.y;\n            break;\n            case \"b\":\n                out.dx = 0;\n                out.dy = bx.y2 - bb.y2;\n            break;\n            case \"m\":\n                out.dx = 0;\n                out.dy = bx.cy - bb.cy;\n            break;\n            case \"l\":\n                out.dx = bx.x - bb.x;\n                out.dy = 0;\n            break;\n            case \"r\":\n                out.dx = bx.x2 - bb.x2;\n                out.dy = 0;\n            break;\n            default:\n                out.dx = bx.cx - bb.cx;\n                out.dy = 0;\n            break;\n        }\n        out.toString = toString;\n        return out;\n    };\n    /*\\\n     * Element.align\n     [ method ]\n     **\n     * Aligns the element relatively to given one via transformation.\n     * If no elements specified, parent `<svg>` container will be used.\n     - el (object) @optional alignment element\n     - way (string) one of six values: `\"top\"`, `\"middle\"`, `\"bottom\"`, `\"left\"`, `\"center\"`, `\"right\"`\n     = (object) this element\n     > Usage\n     | el.align(el2, \"top\");\n     * or\n     | el.align(\"middle\");\n    \\*/\n    Element.prototype.align = function (el, way) {\n        return this.transform(\"...\" + this.getAlign(el, way));\n    };\n});\n\nmodule.exports = Snap\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/snapsvg-cjs/dist/snap.svg-cjs.js\n// module id = ./node_modules/snapsvg-cjs/dist/snap.svg-cjs.js\n// module chunks = 7489246917808536000","import React from \"react\"\nimport Link from \"gatsby-link\"\nimport { Container } from \"react-responsive-grid\"\nimport Back from 'react-icons/lib/fa/arrow-left'\nimport { slide as Menu } from 'react-burger-menu'\nimport { rhythm, scale } from \"../utils/typography\"\n\nclass Template extends React.Component {\n  constructor (props) {\n    super(props)\n    this.state = {\n      mobile: false,\n      isOpen: false\n    }\n  }\n\n  componentDidMount () {\n    var check = false;\n    (function (a){if(/(android|bb\\d+|meego).+mobile|avantgo|bada\\/|blackberry|blazer|compal|elaine|fennec|hiptop|iemobile|ip(hone|od)|iris|kindle|lge |maemo|midp|mmp|mobile.+firefox|netfront|opera m(ob|in)i|palm( os)?|phone|p(ixi|re)\\/|plucker|pocket|psp|series(4|6)0|symbian|treo|up\\.(browser|link)|vodafone|wap|windows ce|xda|xiino/i.test(a)||/1207|6310|6590|3gso|4thp|50[1-6]i|770s|802s|a wa|abac|ac(er|oo|s\\-)|ai(ko|rn)|al(av|ca|co)|amoi|an(ex|ny|yw)|aptu|ar(ch|go)|as(te|us)|attw|au(di|\\-m|r |s )|avan|be(ck|ll|nq)|bi(lb|rd)|bl(ac|az)|br(e|v)w|bumb|bw\\-(n|u)|c55\\/|capi|ccwa|cdm\\-|cell|chtm|cldc|cmd\\-|co(mp|nd)|craw|da(it|ll|ng)|dbte|dc\\-s|devi|dica|dmob|do(c|p)o|ds(12|\\-d)|el(49|ai)|em(l2|ul)|er(ic|k0)|esl8|ez([4-7]0|os|wa|ze)|fetc|fly(\\-|_)|g1 u|g560|gene|gf\\-5|g\\-mo|go(\\.w|od)|gr(ad|un)|haie|hcit|hd\\-(m|p|t)|hei\\-|hi(pt|ta)|hp( i|ip)|hs\\-c|ht(c(\\-| |_|a|g|p|s|t)|tp)|hu(aw|tc)|i\\-(20|go|ma)|i230|iac( |\\-|\\/)|ibro|idea|ig01|ikom|im1k|inno|ipaq|iris|ja(t|v)a|jbro|jemu|jigs|kddi|keji|kgt( |\\/)|klon|kpt |kwc\\-|kyo(c|k)|le(no|xi)|lg( g|\\/(k|l|u)|50|54|\\-[a-w])|libw|lynx|m1\\-w|m3ga|m50\\/|ma(te|ui|xo)|mc(01|21|ca)|m\\-cr|me(rc|ri)|mi(o8|oa|ts)|mmef|mo(01|02|bi|de|do|t(\\-| |o|v)|zz)|mt(50|p1|v )|mwbp|mywa|n10[0-2]|n20[2-3]|n30(0|2)|n50(0|2|5)|n7(0(0|1)|10)|ne((c|m)\\-|on|tf|wf|wg|wt)|nok(6|i)|nzph|o2im|op(ti|wv)|oran|owg1|p800|pan(a|d|t)|pdxg|pg(13|\\-([1-8]|c))|phil|pire|pl(ay|uc)|pn\\-2|po(ck|rt|se)|prox|psio|pt\\-g|qa\\-a|qc(07|12|21|32|60|\\-[2-7]|i\\-)|qtek|r380|r600|raks|rim9|ro(ve|zo)|s55\\/|sa(ge|ma|mm|ms|ny|va)|sc(01|h\\-|oo|p\\-)|sdk\\/|se(c(\\-|0|1)|47|mc|nd|ri)|sgh\\-|shar|sie(\\-|m)|sk\\-0|sl(45|id)|sm(al|ar|b3|it|t5)|so(ft|ny)|sp(01|h\\-|v\\-|v )|sy(01|mb)|t2(18|50)|t6(00|10|18)|ta(gt|lk)|tcl\\-|tdg\\-|tel(i|m)|tim\\-|t\\-mo|to(pl|sh)|ts(70|m\\-|m3|m5)|tx\\-9|up(\\.b|g1|si)|utst|v400|v750|veri|vi(rg|te)|vk(40|5[0-3]|\\-v)|vm40|voda|vulc|vx(52|53|60|61|70|80|81|83|85|98)|w3c(\\-| )|webc|whit|wi(g |nc|nw)|wmlb|wonu|x700|yas\\-|your|zeto|zte\\-/i.test(a.substr(0,4))) check = true;})(navigator.userAgent||navigator.vendor||window.opera);\n    this.setState({mobile: check})\n  }\n\n  showSettings (event) {\n    event.preventDefault();\n  }\n\n  handleSideNavigation () {\n    this.setState({isOpen: false})\n  }\n\n  render () {\n    const { location, children } = this.props\n    const height = this.state.mobile ? 56 : 64\n    styles.bmBurgerButton.left = this.state.mobile ? 16 : 24\n    styles.bmBurgerButton.top = this.state.mobile ? 16 : 20\n    let header, title\n    if (location.pathname === \"/\" || location.pathname === '/about') {\n      title = 'Fog Up Some Comics'\n      header = (\n        <Menu\n          styles={styles}\n          onStateChange={({isOpen}) => this.setState({isOpen})}\n          isOpen={this.state.isOpen}\n        >\n          <Link onClick={this.handleSideNavigation.bind(this)} id=\"home\" className=\"menu-item\" to=\"/\">Home</Link>\n          <Link onClick={this.handleSideNavigation.bind(this)} id=\"about\" className=\"menu-item\" to=\"/about\">About</Link>\n        </Menu>\n          // <a onClick={ this.showSettings } className=\"menu-item--small\" href=\"\">Settings</a>\n      )\n    } else {\n      title = 'Comics'\n      header = (\n        <Link\n          style={{\n            boxShadow: \"none\",\n            textDecoration: \"none\",\n            color: \"inherit\",\n          }}\n          to={\"/\"}\n        >\n          <Back size={24} color={'white'} style={styles.bmBurgerButton} />\n        </Link>\n      )\n    }\n    return (\n      <div style={{paddingBottom: 60, minHeight: '100vh', position: 'relative'}}>\n        <nav style={{\n          height,\n          backgroundColor: '#63ccff',\n          position: 'fixed',\n          width: '100%',\n          boxShadow: '0 4px 5px 0 rgba(0, 0, 0, 0.14), 0 1px 10px 0 rgba(0, 0, 0, 0.12), 0 2px 4px -1px rgba(0, 0, 0, 0.3)'\n        }}>\n          <div style={{position: 'absolute', left: 72, top: 16}}>\n            <p style={{\n              color: 'white',\n              fontSize: 20,\n              fontFamily: 'Merriweather Sans,Helvetica,Arial,sans-serif',\n            }}>{title}</p>\n          </div>\n        </nav>\n        {header}\n        <Container\n          style={{\n            maxWidth: rhythm(24),\n            padding: `${rhythm(1.5)} ${rhythm(3 / 4)}`,\n            paddingTop: height + 16\n          }}\n        >\n          {children()}\n        </Container>\n        <footer\n          style={{\n            minHeight: 50,\n            position: 'absolute',\n            bottom: 0,\n            width: '100%',\n            backgroundColor: '#039be5'\n          }}\n        >\n          <div style={{width: '90%', padding: 10, height: 50, lineHeight: 1.5, color: 'white', margin: 'auto'}}>\n            <span style={{marginTop: 20}}>©</span> 2017 Austin Lanari\n          </div>\n        </footer>\n      </div>\n    )\n  }\n}\n\nTemplate.propTypes = {\n  children: React.PropTypes.function,\n  location: React.PropTypes.object,\n  route: React.PropTypes.object,\n}\n\nvar styles = {\n  bmBurgerButton: {\n    position: 'fixed',\n    width: '24px',\n    color: 'white',\n    height: '24px',\n    left: 16,\n    top: 16\n  },\n  bmBurgerBars: {\n    background: 'white',\n  },\n  bmCrossButton: {\n    height: '24px',\n    width: '24px'\n  },\n  bmCross: {\n    background: '#bdc3c7'\n  },\n  bmMenu: {\n    background: 'white',\n    padding: '2.5em 1.5em 0',\n    fontSize: '1.15em',\n  },\n  bmMorphShape: {\n    fill: '#373a47'\n  },\n  bmItemList: {\n    color: '#b8b7ad',\n  },\n  bmItem: {\n    paddingTop: 16,\n    textDecoration: 'none'\n  },\n  bmOverlay: {\n    background: 'rgba(0, 0, 0, 0.3)',\n    height: '100%'\n  }\n}\n\nexport default Template\n\n\n\n// WEBPACK FOOTER //\n// ./src/layouts/index.js"],"sourceRoot":""}